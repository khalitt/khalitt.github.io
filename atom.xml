<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="https://khalitt.github.io/atom.xml" rel="self"/>
  
  <link href="https://khalitt.github.io/"/>
  <updated>2022-09-04T14:06:47.945Z</updated>
  <id>https://khalitt.github.io/</id>
  
  <author>
    <name>Walter</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pve安装使用全流程</title>
    <link href="https://khalitt.github.io/2022/06/26/pve-all/"/>
    <id>https://khalitt.github.io/2022/06/26/pve-all/</id>
    <published>2022-06-26T06:44:47.000Z</published>
    <updated>2022-09-04T14:06:47.945Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PVE安装"><a href="#PVE安装" class="headerlink" title="PVE安装"></a>PVE安装</h1><p>参考：主要来源于张大妈</p><ol><li><a href="https://post.smzdm.com/p/ar6zmoox/">https://post.smzdm.com/p/ar6zmoox/</a></li><li><a href="https://post.smzdm.com/p/a4dm98ok/">https://post.smzdm.com/p/a4dm98ok/</a></li></ol><p>下载</p><p>使用ultraiso安装</p><p><img src="/2022/06/26/pve-all/image-20220626152733835.png" alt="image-20220626152733835"></p><p><img src="/2022/06/26/pve-all/image-20220626152807814.png" alt="image-20220626152807814"></p><h2 id="用diskgenius删除所有分区重新格式化"><a href="#用diskgenius删除所有分区重新格式化" class="headerlink" title="用diskgenius删除所有分区重新格式化"></a>用diskgenius删除所有分区重新格式化</h2><p>如果插入u盘时提示需要格式化，大概率要重新格式化才能写入</p><p><img src="/2022/06/26/pve-all/image-20220626153040221.png" alt="image-20220626153040221"></p><p>格式化需要用到DiskGenius</p><p><img src="/2022/06/26/pve-all/image-20220626152930413.png" alt="image-20220626152930413"></p><p><img src="/2022/06/26/pve-all/image-20220626153200746.png" alt="image-20220626153200746"></p><p><img src="/2022/06/26/pve-all/image-20220626153234507.png" alt="image-20220626153234507"></p><p>恢复成功后应该就能够打开u盘了</p><p><img src="/2022/06/26/pve-all/image-20220626153324459.png" alt="image-20220626153324459"></p><h2 id="update-先用rufus安装，再切换到ultraiso重新安装就可以了"><a href="#update-先用rufus安装，再切换到ultraiso重新安装就可以了" class="headerlink" title="update 先用rufus安装，再切换到ultraiso重新安装就可以了"></a>update 先用rufus安装，再切换到ultraiso重新安装就可以了</h2><p><img src="/2022/06/26/pve-all/image-20220626154419319.png" alt="image-20220626154419319"></p><p><img src="/2022/06/26/pve-all/image-20220626154603331.png" alt="image-20220626154603331"></p><p><img src="/2022/06/26/pve-all/image-20220626155439675.png" alt="image-20220626155439675"></p><h1 id="pve设置"><a href="#pve设置" class="headerlink" title="pve设置"></a>pve设置</h1><h2 id="ssh免密登陆"><a href="#ssh免密登陆" class="headerlink" title="ssh免密登陆"></a>ssh免密登陆</h2><p>直接搜ssh免密登陆，新建或者把已有的公钥黏贴到<code>~/.ssh/authorized_keys</code>即可</p><p><img src="/2022/06/26/pve-all/image-20220626163626565.png" alt="image-20220626163626565"></p><p><img src="/2022/06/26/pve-all/image-20220626163702658.png" alt="image-20220626163702658"></p><h2 id="网络设置"><a href="#网络设置" class="headerlink" title="网络设置"></a>网络设置</h2><p>参考：<a href="https://blog.csdn.net/tangobravo/article/details/119336503">https://blog.csdn.net/tangobravo/article/details/119336503</a></p><p>网络不通，检查以下几个参数</p><p><code>/etc/network/interfaces</code>，其中gateway填写路由器地址即可</p><p><img src="/2022/06/26/pve-all/image-20220626164007247.png" alt="image-20220626164007247"></p><p><code>/etc/hosts</code>一般不用改，安装的时候已经设置好了</p><p><img src="/2022/06/26/pve-all/image-20220626164026759.png" alt="image-20220626164026759"></p><p><code>/etc/resolv.conf </code>重头戏，需要改，主要是添加dns，比如下面添加了两个，一个国内一个国外</p><p><img src="/2022/06/26/pve-all/image-20220626164157731.png" alt="image-20220626164157731"></p><p>最后运行下面的命令重启网络服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> networking restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="更换源（强烈建议更换）"><a href="#更换源（强烈建议更换）" class="headerlink" title="更换源（强烈建议更换）"></a>更换源（强烈建议更换）</h2><h3 id="APT源"><a href="#APT源" class="headerlink" title="APT源"></a>APT源</h3><p>参考：</p><ol><li>强烈推荐USTC的源设置说明，非常方便<a href="https://mirrors.ustc.edu.cn/help/proxmox.html">https://mirrors.ustc.edu.cn/help/proxmox.html</a></li></ol><p>这一步不是必选的，可以在没有配置上proxychains全局代理前先替换为国内源，方便安装各种依赖包</p><p>先备份源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /etc/apt/s<span class="token function">cp</span> sources.list sources.list.bak<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后参考上述参考1</p><ul><li>更换<code>source.list</code></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s|^deb http://ftp.debian.org|deb https://mirrors.ustc.edu.cn|g'</span> /etc/apt/sources.list<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s|^deb http://security.debian.org|deb https://mirrors.ustc.edu.cn/debian-security|g'</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220626171021868.png" alt="image-20220626171021868"></p><ul><li>新增<code>pve-no-subscription.list</code></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> /etc/os-release<span class="token builtin class-name">echo</span> <span class="token string">"deb https://mirrors.ustc.edu.cn/proxmox/debian/pve <span class="token variable">$VERSION_CODENAME</span> pve-no-subscription"</span> <span class="token operator">></span> /etc/apt/sources.list.d/pve-no-subscription.list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>最后更新（可选）</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> dist-upgrade <span class="token parameter variable">-y</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="CT-template源"><a href="#CT-template源" class="headerlink" title="CT template源"></a>CT template源</h3><p>参考：</p><ol><li>强烈推荐<a href="https://mirrors.ustc.edu.cn/help/proxmox.html">USTC的源设置说明</a>，非常方便</li></ol><blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> /usr/share/perl5/PVE/APLInfo.pm /usr/share/perl5/PVE/APLInfo.pm_back<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s|http://download.proxmox.com|https://mirrors.ustc.edu.cn/proxmox|g'</span> /usr/share/perl5/PVE/APLInfo.pm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><h2 id="安装proxychains-ng以及Txray"><a href="#安装proxychains-ng以及Txray" class="headerlink" title="安装proxychains-ng以及Txray"></a>安装proxychains-ng以及Txray</h2><h3 id="proxychains-ng安装"><a href="#proxychains-ng安装" class="headerlink" title="proxychains-ng安装"></a>proxychains-ng安装</h3><p>参考：</p><ol><li><a href="https://cloud.tencent.com/developer/news/245605">使用proxychains-ng实现全局代理</a></li><li></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/rofl0r/proxychains-ng<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span>  gcc automake autoconf libtool <span class="token function">make</span> <span class="token comment"># 安装依赖</span><span class="token builtin class-name">cd</span> proxychains-ng/./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr <span class="token parameter variable">--sysconfdir</span><span class="token operator">=</span>/etc<span class="token function">sudo</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装好以后配置代理<code>/etc/proxychains.conf</code>，其中<code>1080</code>是后面Txray的默认端口</p><p><img src="/2022/06/26/pve-all/image-20220626172109110.png" alt="image-20220626172109110"></p><h3 id="Txray安装"><a href="#Txray安装" class="headerlink" title="Txray安装"></a>Txray安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> Txray-linux-64/Xray-core <span class="token operator">&amp;&amp;</span> <span class="token function">unzip</span> Xray-linux-64.zip <span class="token parameter variable">-d</span> Txray-linux-64/Xray-core<span class="token function">chmod</span> u+x Txray-linux-64/Txray <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> u+x Txray-linux-64/Xray-core/xray<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>配置环境变量</p><p><img src="/2022/06/26/pve-all/image-20220626175533572.png" alt="image-20220626175533572"></p><h3 id="Txray使用"><a href="#Txray使用" class="headerlink" title="Txray使用"></a>Txray使用</h3><ul><li><code>Get &quot;https://www.youtube.com&quot;: context deadline exceeded (Client.Timeout exceeded while awaiting headers)</code></li></ul><p><img src="/2022/06/26/pve-all/image-20220626222403547.png" alt="image-20220626222403547"></p><p><img src="/2022/06/26/pve-all/image-20220626222409739.png" alt="image-20220626222409739"></p><p>打开 允许来自局域网的连接，<strong>可能能缓解</strong>，问题原因未知</p><p><img src="/2022/06/26/pve-all/image-20220626222442872.png" alt="image-20220626222442872"></p><p><img src="/2022/06/26/pve-all/image-20220626222511550.png" alt="image-20220626222511550"></p><h1 id="linux基础使用"><a href="#linux基础使用" class="headerlink" title="linux基础使用"></a>linux基础使用</h1><h2 id="用wget或者curl下载github-release"><a href="#用wget或者curl下载github-release" class="headerlink" title="用wget或者curl下载github release"></a>用wget或者curl下载github release</h2><p>参考：<a href="https://iogogogo.github.io/2020/02/14/cmd-download-file/">https://iogogogo.github.io/2020/02/14/cmd-download-file/</a></p><p>例子：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> --no-check-certificate --content-disposition https://github.com/ctripcorp/apollo/releases/download/v1.5.1/apollo-adminservice-1.5.1-github.zip<span class="token function">curl</span> <span class="token parameter variable">-LJO</span> https://github.com/ctripcorp/apollo/releases/download/v1.5.1/apollo-adminservice-1.5.1-github.zip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>前面加上proxychains4即可实现通过代理下载</p><h1 id="安装群晖"><a href="#安装群晖" class="headerlink" title="安装群晖"></a>安装群晖</h1><p>参考：</p><ol><li>相当详细，<a href="https://post.smzdm.com/p/a0dol3wr/">https://post.smzdm.com/p/a0dol3wr/</a></li><li>wxgas的教程，<a href="https://wp.gxnas.com/11213.html%EF%BC%8C%E4%B9%9F%E5%BE%88%E8%AF%A6%E7%BB%86">https://wp.gxnas.com/11213.html，也很详细</a></li><li>很不错的教程，<a href="https://www.modb.pro/db/337817">https://www.modb.pro/db/337817</a></li><li>DSM7.0.1的引导和pat下载，<a href="https://www.openos.org/threads/2022613dsm7-x.3529/">https://www.openos.org/threads/2022613dsm7-x.3529/</a></li></ol><p>需要注意的是，下面的教程是融合了<strong>上述三个教程 + 单独试验的参数</strong>，不同的机器或者pve教程都不尽相同。除此之外，DSM的镜像也可以自己单独编译</p><h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><p><img src="/2022/06/26/pve-all/image-20220626223528093.png" alt="image-20220626223528093"></p><p><img src="/2022/06/26/pve-all/image-20220626223538363.png" alt="image-20220626223538363"></p><p>BIOS改为SeaBIOS</p><p><img src="/2022/06/26/pve-all/image-20220626223622184.png" alt="image-20220626223622184"></p><p>设成1即可，因为后面还要删掉</p><p><img src="/2022/06/26/pve-all/image-20220626223644630.png" alt="image-20220626223644630"></p><p>CPU可选host或者默认</p><p><img src="/2022/06/26/pve-all/image-20220626223726728.png" alt="image-20220626223726728"></p><p><img src="/2022/06/26/pve-all/image-20220626223733127.png" alt="image-20220626223733127"></p><p>分离硬盘</p><p><img src="/2022/06/26/pve-all/image-20220626223852711.png" alt="image-20220626223852711"></p><p><img src="/2022/06/26/pve-all/image-20220626223911943.png" alt="image-20220626223911943"></p><p>再重新添加硬盘</p><p><img src="/2022/06/26/pve-all/image-20220626225138966.png" alt="image-20220626225138966"></p><p>上传镜像</p><p><img src="/2022/06/26/pve-all/image-20220626223942710.png" alt="image-20220626223942710"></p><p><img src="/2022/06/26/pve-all/image-20220626224107775.png" alt="image-20220626224107775"></p><h2 id="导入镜像（推荐方法）"><a href="#导入镜像（推荐方法）" class="headerlink" title="导入镜像（推荐方法）"></a>导入镜像（推荐方法）</h2><p>找到上传的镜像位置，比如<code>/var/lib/vz/template/iso/DS918__7.1.0-42661______.img</code>，对应的虚拟机的编号是100，则<code>importdisk</code>的命令为：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">qm importdisk <span class="token number">100</span> /var/lib/vz/template/iso/DS918__7.1.0-42661______.img local-lvm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>先分离一开始新建的硬盘，然后再在这里设置，确保是sata0</p><p><img src="/2022/06/26/pve-all/image-20220627000933024.png" alt="image-20220627000933024"></p><p>然后在修改启动选项，勾选sata0</p><p><img src="/2022/06/26/pve-all/image-20220627005744665.png" alt="image-20220627005744665"></p><h2 id="配置虚拟机conf（不推荐这个方法）"><a href="#配置虚拟机conf（不推荐这个方法）" class="headerlink" title="配置虚拟机conf（不推荐这个方法）"></a><del>配置虚拟机conf（不推荐这个方法）</del></h2><p><img src="/2022/06/26/pve-all/image-20220626224615076.png" alt="image-20220626224615076"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">args: <span class="token parameter variable">-device</span> <span class="token string">'qemu-xhci,addr=0x18'</span> <span class="token parameter variable">-drive</span> <span class="token string">'id=synoboot,file=/var/lib/vz/template/iso/DS918__7.1.0-42661______.img,if=none,format=raw'</span> <span class="token parameter variable">-device</span> <span class="token string">'usb-storage,id=synoboot,drive=synoboot,bootindex=5'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个方法存在的问题是，<strong>安装完成后不会自动重启</strong></p><h2 id="修改镜像文件中的grub"><a href="#修改镜像文件中的grub" class="headerlink" title="修改镜像文件中的grub"></a>修改镜像文件中的grub</h2><p>参考wxgas的教程</p><p>主要就是修改这两行，后面的参数</p><p><img src="/2022/06/26/pve-all/image-20220626231959598.png" alt="image-20220626231959598"></p><p>主要有：</p><ul><li>删除双网卡的设定</li></ul><p>旧版：</p><p>usb：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">syno_hw_version</span><span class="token operator">=</span>DS918+ <span class="token assign-left variable">console</span><span class="token operator">=</span>ttyS0,115200n8 <span class="token assign-left variable">netif_num</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">pid</span><span class="token operator">=</span>0x0001 <span class="token assign-left variable">earlycon</span><span class="token operator">=</span>uart8250,io,0x3f8,115200n8 <span class="token assign-left variable">syno_port_thaw</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">SasIdxMap</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">mac2</span><span class="token operator">=</span>001132123457 <span class="token assign-left variable">mac1</span><span class="token operator">=</span>001132123456 <span class="token assign-left variable">sn</span><span class="token operator">=</span>2022NAS123456 <span class="token assign-left variable">vid</span><span class="token operator">=</span>0x46f4 <span class="token assign-left variable">elevator</span><span class="token operator">=</span>elevator <span class="token assign-left variable">loglevel</span><span class="token operator">=</span><span class="token number">15</span> <span class="token assign-left variable">HddHotplug</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">DiskIdxMap</span><span class="token operator">=</span>00 <span class="token assign-left variable">syno_hdd_detect</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">vender_format_version</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">syno_hdd_powerup_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">log_buf_len</span><span class="token operator">=</span>32M <span class="token assign-left variable">root</span><span class="token operator">=</span>/dev/md0 <span class="token assign-left variable">SataPortMap</span><span class="token operator">=</span><span class="token number">1</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>sata</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">syno_hw_version</span><span class="token operator">=</span>DS918+ <span class="token assign-left variable">console</span><span class="token operator">=</span>ttyS0,115200n8 <span class="token assign-left variable">netif_num</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">pid</span><span class="token operator">=</span>0x0001 <span class="token assign-left variable">earlycon</span><span class="token operator">=</span>uart8250,io,0x3f8,115200n8 <span class="token assign-left variable">synoboot_satadom</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">syno_port_thaw</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">SasIdxMap</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">mac2</span><span class="token operator">=</span>001132123457 <span class="token assign-left variable">mac1</span><span class="token operator">=</span>001132123456 <span class="token assign-left variable">sn</span><span class="token operator">=</span>2022NAS123456 <span class="token assign-left variable">vid</span><span class="token operator">=</span>0x46f4 <span class="token assign-left variable">elevator</span><span class="token operator">=</span>elevator <span class="token assign-left variable">loglevel</span><span class="token operator">=</span><span class="token number">15</span> <span class="token assign-left variable">HddHotplug</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">DiskIdxMap</span><span class="token operator">=</span>00 <span class="token assign-left variable">syno_hdd_detect</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">vender_format_version</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">syno_hdd_powerup_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">log_buf_len</span><span class="token operator">=</span>32M <span class="token assign-left variable">root</span><span class="token operator">=</span>/dev/md0 <span class="token assign-left variable">SataPortMap</span><span class="token operator">=</span><span class="token number">1</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新版：</p><p>usb：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">syno_hw_version</span><span class="token operator">=</span>DS918+ <span class="token assign-left variable">console</span><span class="token operator">=</span>ttyS0,115200n8 <span class="token assign-left variable">netif_num</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">pid</span><span class="token operator">=</span>0x0001 <span class="token assign-left variable">earlycon</span><span class="token operator">=</span>uart8250,io,0x3f8,115200n8 <span class="token assign-left variable">syno_port_thaw</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">SasIdxMap</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">mac1</span><span class="token operator">=</span>001132123456 <span class="token assign-left variable">sn</span><span class="token operator">=</span>2022NAS123456 <span class="token assign-left variable">vid</span><span class="token operator">=</span>0x46f4 <span class="token assign-left variable">elevator</span><span class="token operator">=</span>elevator <span class="token assign-left variable">loglevel</span><span class="token operator">=</span><span class="token number">15</span> <span class="token assign-left variable">HddHotplug</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">DiskIdxMap</span><span class="token operator">=</span>00 <span class="token assign-left variable">syno_hdd_detect</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">vender_format_version</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">syno_hdd_powerup_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">log_buf_len</span><span class="token operator">=</span>32M <span class="token assign-left variable">root</span><span class="token operator">=</span>/dev/md0 <span class="token assign-left variable">SataPortMap</span><span class="token operator">=</span><span class="token number">1</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>sata：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">syno_hw_version</span><span class="token operator">=</span>DS918+ <span class="token assign-left variable">console</span><span class="token operator">=</span>ttyS0,115200n8 <span class="token assign-left variable">netif_num</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">pid</span><span class="token operator">=</span>0x0001 <span class="token assign-left variable">earlycon</span><span class="token operator">=</span>uart8250,io,0x3f8,115200n8 <span class="token assign-left variable">synoboot_satadom</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">syno_port_thaw</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">SasIdxMap</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">mac1</span><span class="token operator">=</span>001132123456 <span class="token assign-left variable">sn</span><span class="token operator">=</span>2022NAS123456 <span class="token assign-left variable">vid</span><span class="token operator">=</span>0x46f4 <span class="token assign-left variable">elevator</span><span class="token operator">=</span>elevator <span class="token assign-left variable">loglevel</span><span class="token operator">=</span><span class="token number">15</span> <span class="token assign-left variable">HddHotplug</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">DiskIdxMap</span><span class="token operator">=</span>00 <span class="token assign-left variable">syno_hdd_detect</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">vender_format_version</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">syno_hdd_powerup_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">log_buf_len</span><span class="token operator">=</span>32M <span class="token assign-left variable">root</span><span class="token operator">=</span>/dev/md0 <span class="token assign-left variable">SataPortMap</span><span class="token operator">=</span><span class="token number">1</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>成品grub（省略其余未修改部分）：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">menuentry <span class="token string">'RedPill DS918+ v7.1.0-42661 (USB, Verbose)'</span> <span class="token punctuation">&#123;</span>savedefault<span class="token builtin class-name">set</span> <span class="token assign-left variable">root</span><span class="token operator">=</span><span class="token punctuation">(</span>hd0,msdos1<span class="token punctuation">)</span><span class="token builtin class-name">echo</span> Loading Linux<span class="token punctuation">..</span>.linux /zImage withefi earlyprintk <span class="token assign-left variable">syno_hw_version</span><span class="token operator">=</span>DS918+ <span class="token assign-left variable">console</span><span class="token operator">=</span>ttyS0,115200n8 <span class="token assign-left variable">netif_num</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">pid</span><span class="token operator">=</span>0x0001 <span class="token assign-left variable">earlycon</span><span class="token operator">=</span>uart8250,io,0x3f8,115200n8 <span class="token assign-left variable">syno_port_thaw</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">SasIdxMap</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">mac1</span><span class="token operator">=</span>001132123456 <span class="token assign-left variable">sn</span><span class="token operator">=</span>2022NAS123456 <span class="token assign-left variable">vid</span><span class="token operator">=</span>0x46f4 <span class="token assign-left variable">elevator</span><span class="token operator">=</span>elevator <span class="token assign-left variable">loglevel</span><span class="token operator">=</span><span class="token number">15</span> <span class="token assign-left variable">HddHotplug</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">DiskIdxMap</span><span class="token operator">=</span>00 <span class="token assign-left variable">syno_hdd_detect</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">vender_format_version</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">syno_hdd_powerup_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">log_buf_len</span><span class="token operator">=</span>32M <span class="token assign-left variable">root</span><span class="token operator">=</span>/dev/md0 <span class="token assign-left variable">SataPortMap</span><span class="token operator">=</span><span class="token number">1</span> <span class="token builtin class-name">echo</span> Loading initramfs<span class="token punctuation">..</span>.initrd /rd.gz /custom.gz<span class="token builtin class-name">echo</span> Starting kernel with USB boot<span class="token punctuation">&#125;</span>menuentry <span class="token string">'RedPill DS918+ v7.1.0-42661 (SATA, Verbose)'</span> <span class="token punctuation">&#123;</span>savedefault<span class="token builtin class-name">set</span> <span class="token assign-left variable">root</span><span class="token operator">=</span><span class="token punctuation">(</span>hd0,msdos1<span class="token punctuation">)</span><span class="token builtin class-name">echo</span> Loading Linux<span class="token punctuation">..</span>.linux /zImage withefi earlyprintk <span class="token assign-left variable">syno_hw_version</span><span class="token operator">=</span>DS918+ <span class="token assign-left variable">console</span><span class="token operator">=</span>ttyS0,115200n8 <span class="token assign-left variable">netif_num</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">pid</span><span class="token operator">=</span>0x0001 <span class="token assign-left variable">earlycon</span><span class="token operator">=</span>uart8250,io,0x3f8,115200n8 <span class="token assign-left variable">synoboot_satadom</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">syno_port_thaw</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">SasIdxMap</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">mac1</span><span class="token operator">=</span>001132123456 <span class="token assign-left variable">sn</span><span class="token operator">=</span>2022NAS123456 <span class="token assign-left variable">vid</span><span class="token operator">=</span>0x46f4 <span class="token assign-left variable">elevator</span><span class="token operator">=</span>elevator <span class="token assign-left variable">loglevel</span><span class="token operator">=</span><span class="token number">15</span> <span class="token assign-left variable">HddHotplug</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">DiskIdxMap</span><span class="token operator">=</span>00 <span class="token assign-left variable">syno_hdd_detect</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">vender_format_version</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">syno_hdd_powerup_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">log_buf_len</span><span class="token operator">=</span>32M <span class="token assign-left variable">root</span><span class="token operator">=</span>/dev/md0 <span class="token assign-left variable">SataPortMap</span><span class="token operator">=</span><span class="token number">1</span> <span class="token builtin class-name">echo</span> Loading initramfs<span class="token punctuation">..</span>.initrd /rd.gz /custom.gz<span class="token builtin class-name">echo</span> Starting kernel with SATA boot<span class="token builtin class-name">echo</span> WARNING: SATA boot support on this platform is experimental<span class="token operator">!</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="设置硬盘直通"><a href="#设置硬盘直通" class="headerlink" title="设置硬盘直通"></a>设置硬盘直通</h2><p>参考 参考3</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-l</span> /dev/disk/by-id<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220627005950628.png" alt="image-20220627005950628"></p><p>虚拟机的编号是100，sata1已经被占用，因此命令是：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># qm set VMID -sata2 /dev/disk/by-id/</span>qm <span class="token builtin class-name">set</span> <span class="token number">100</span> <span class="token parameter variable">-sata2</span> /dev/disk/by-id/ata-WDC_WD40PURX-78AKYY0_WD-WX42DA1L45TC<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220627010206578.png" alt="image-20220627010206578"></p><ul><li>最后的成品设置</li></ul><p><img src="/2022/06/26/pve-all/image-20220627010814793.png" alt="image-20220627010814793"></p><h3 id="关于硬盘直通的问题"><a href="#关于硬盘直通的问题" class="headerlink" title="关于硬盘直通的问题"></a>关于硬盘直通的问题</h3><p>参考：<a href="https://wangxingcs.com/2020/0227/1411/">https://wangxingcs.com/2020/0227/1411/</a></p><p><img src="/2022/06/26/pve-all/image-20220702013030758.png" alt="image-20220702013030758"></p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="一直在还原界面循环"><a href="#一直在还原界面循环" class="headerlink" title="一直在还原界面循环"></a>一直在还原界面循环</h3><p>参考：<a href="https://www.openos.org/threads/vmware7-1-0-42661.4413/">https://www.openos.org/threads/vmware7-1-0-42661.4413/</a></p><p><img src="/2022/06/26/pve-all/image-20220627005238849.png" alt="image-20220627005238849"></p><p><strong>在安装的时候完全断外网（可以在路由器上断）</strong>，就解决了</p><h2 id="无法识别千兆网卡（实测并不是，virtio能够跑满千兆）"><a href="#无法识别千兆网卡（实测并不是，virtio能够跑满千兆）" class="headerlink" title="无法识别千兆网卡（实测并不是，virtio能够跑满千兆）"></a><del>无法识别千兆网卡</del>（实测并不是，virtio能够跑满千兆）</h2><p>参照iperf3使用<a href="https://post.smzdm.com/p/ag89wxk7/%E3%80%82%E7%BE%A4%E6%99%96%E4%BD%9C%E4%B8%BA%E6%9C%8D%E5%8A%A1%E7%AB%AF%EF%BC%8Cwindows%E6%88%96%E8%80%85linux%E4%BD%9C%E4%B8%BA%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%B5%8B%E8%AF%95%E3%80%82%E9%BB%98%E8%AE%A4%E7%9A%84virtio%E9%80%9F%E5%BA%A6%E5%8F%AA%E6%9C%89%E7%99%BE%E5%85%86%EF%BC%9A">https://post.smzdm.com/p/ag89wxk7/。群晖作为服务端，windows或者linux作为客户端测试。默认的virtio速度只有百兆：</a></p><p><img src="/2022/06/26/pve-all/image-20220730013505676.png" alt="image-20220730013505676"></p><p><strong>最后发现是WiFi的问题。</strong>使用有线直接连接路由器的wan口后，速度达到了千兆。<strong>说明使用virtio做虚拟化是能够跑满千兆的！！！</strong></p><p><img src="/2022/06/26/pve-all/image-20220730214342969.png" alt="image-20220730214342969"></p><h1 id="群晖使用"><a href="#群晖使用" class="headerlink" title="群晖使用"></a>群晖使用</h1><h2 id="存储池"><a href="#存储池" class="headerlink" title="存储池"></a>存储池</h2><h3 id="导入已有的存储池"><a href="#导入已有的存储池" class="headerlink" title="导入已有的存储池"></a>导入已有的存储池</h3><p>利用<strong>在线重组</strong></p><p><img src="/2022/06/26/pve-all/image-20220627010520959.png" alt="image-20220627010520959"></p><p><img src="/2022/06/26/pve-all/image-20220627010536669.png" alt="image-20220627010536669"></p><p>硬盘上原有的资料都在</p><p><img src="/2022/06/26/pve-all/image-20220627010553909.png" alt="image-20220627010553909"></p><h2 id="设置NFS"><a href="#设置NFS" class="headerlink" title="设置NFS"></a>设置NFS</h2><p>参考：</p><ol><li><a href="https://post.smzdm.com/p/a4dz4do7/">https://post.smzdm.com/p/a4dz4do7/</a></li><li>更推荐这种方法：<a href="https://post.smzdm.com/p/a85g06k7/">https://post.smzdm.com/p/a85g06k7/</a></li></ol><p><img src="/2022/06/26/pve-all/image-20220629232705899.png" alt="image-20220629232705899"></p><p><del>更好的方法：</del></p><p><del>通过pve前端设置，这样所有容器都能共用</del></p><p>下面这种方法实际上是把NFS重新挂载处理，方便pve处理而已</p><p><img src="/2022/06/26/pve-all/image-20220630005051914.png" alt="image-20220630005051914"></p><h3 id="更好的挂载方法"><a href="#更好的挂载方法" class="headerlink" title="更好的挂载方法"></a>更好的挂载方法</h3><p>注意到群晖本身就支持网路区段设置。所以实际上是可以将整个路由器的区段都加进的</p><p><img src="/2022/06/26/pve-all/image-20220703142733221.png" alt="image-20220703142733221"></p><p>参考<a href="https://zhuanlan.zhihu.com/p/450407655">https://zhuanlan.zhihu.com/p/450407655</a></p><p><img src="/2022/06/26/pve-all/image-20220703142821671.png" alt="image-20220703142821671"></p><p>所以这里只需要根据路由器的区段，整个一起设置。比如路由器是192.168.68.1，那么可以设置为192.168.68.0&#x2F;24。<strong>这样子就把整个192.168.68.1~196.168.68.254都囊括了进来</strong></p><p><img src="/2022/06/26/pve-all/image-20220703142928806.png" alt="image-20220703142928806"></p><p>实测也没有问题</p><h3 id="20220904更新（以这个为准）"><a href="#20220904更新（以这个为准）" class="headerlink" title="20220904更新（以这个为准）"></a>20220904更新（以这个为准）</h3><p>强烈建议除了使用网段之外，也把权限映射加上，这样就可以避免后续的权限问题</p><p><img src="/2022/06/26/pve-all/image-20220904121405132.png" alt="image-20220904121405132"></p><p>实在没法连接的，考虑单独添加进来也可以</p><p><img src="/2022/06/26/pve-all/image-20220904121434878.png" alt="image-20220904121434878"></p><h2 id="和windows-x2F-Mac文件共享"><a href="#和windows-x2F-Mac文件共享" class="headerlink" title="和windows&#x2F;Mac文件共享"></a>和windows&#x2F;Mac文件共享</h2><p>建议直接用Samba协议，Mac和windows用起来都非常方便，其中账户直接用登陆DSM管理界面的账号即可，进去以后所有文件都能看到</p><p><img src="/2022/06/26/pve-all/image-20220701233425046.png" alt="image-20220701233425046"></p><p><img src="/2022/06/26/pve-all/image-20220701233440403.png" alt="image-20220701233440403"></p><p>速度和直接NFS差不多</p><p><img src="/2022/06/26/pve-all/image-20220701233528414.png" alt="image-20220701233528414"></p><p>NFS：</p><p>实测更慢……</p><p><img src="/2022/06/26/pve-all/image-20220703113450907.png" alt="image-20220703113450907"></p><h3 id="NFS-x2F-SMB速度慢的问题（实测并不存在速度不同的问题）"><a href="#NFS-x2F-SMB速度慢的问题（实测并不存在速度不同的问题）" class="headerlink" title="NFS&#x2F;SMB速度慢的问题（实测并不存在速度不同的问题）"></a><del>NFS&#x2F;SMB速度慢的问题</del>（实测并不存在速度不同的问题）</h3><p><img src="/2022/06/26/pve-all/image-20220703113522759.png" alt="image-20220703113522759"></p><p>依旧很慢</p><p><img src="/2022/06/26/pve-all/image-20220703113657188.png" alt="image-20220703113657188"></p><p>在mac上用NFS和SMB都测试过了，速度基本能够达到800M+，说明已经跑满了。按住option键点击wifi按钮即可看到</p><p>SMB：</p><p><img src="/2022/06/26/pve-all/image-20220703114548367.png" alt="image-20220703114548367"></p><p>NFS mac下基本也能达到这个速率，但是实际感受SMB更快</p><p><img src="/2022/06/26/pve-all/image-20220703120619778.png" alt="image-20220703120619778"></p><p>实际最后通过在windows下的wsl和mac的terminal中直接用iperf3对群晖的ip测速，发现二者的速度是一样的：</p><ul><li>在WiFi状态下只能达到百兆级别</li><li>只有在有线连接（网线接路由器wan口）才能达到千兆级别</li></ul><p><strong>因此可以断定，所谓windows速度比mac慢的问题并不存在。在WiFi状态下，windows和mac一样慢，要跑满千兆必须得使用有线连接，或者更换路由器！！</strong></p><h2 id="portainer中添加了自动挂载，但是docker-jellyfin经常没有挂载成功的问题"><a href="#portainer中添加了自动挂载，但是docker-jellyfin经常没有挂载成功的问题" class="headerlink" title="portainer中添加了自动挂载，但是docker jellyfin经常没有挂载成功的问题"></a>portainer中添加了自动挂载，但是docker jellyfin经常没有挂载成功的问题</h2><p>但是手动重启portainer的LXC容器，或者重启docker jellyfin之后，又可以了，怀疑是启动顺序的原因。因此调整启动顺序：</p><ul><li>群晖先于portainer启动</li><li>群晖的启动延时至少有30s。<strong>这点才是关键！！群晖启动之后NFS服务并不是马上成功的，因此需要延时！！！</strong></li></ul><p><img src="/2022/06/26/pve-all/image-20220904121724733.png" alt="image-20220904121724733"></p><h2 id="DDNS"><a href="#DDNS" class="headerlink" title="DDNS"></a>DDNS</h2><h3 id="前置工作"><a href="#前置工作" class="headerlink" title="前置工作"></a>前置工作</h3><p>参考：</p><ol><li><a href="https://www.ioiox.com/archives/105.html%EF%BC%8C%E4%B8%BB%E8%A6%81%E5%8F%82%E8%80%83%E5%89%8D%E9%9D%A2cloudflare%E8%AE%BE%E7%BD%AE%E7%9A%84%E9%83%A8%E5%88%86">https://www.ioiox.com/archives/105.html，主要参考前面cloudflare设置的部分</a></li><li><a href="https://www.ioiox.com/archives/106.html%EF%BC%8C%E4%B8%BB%E8%A6%81%E5%8F%82%E8%80%83%E5%90%8E%E9%9D%A2docker%E8%AE%BE%E7%BD%AE%E7%9A%84%E9%83%A8%E5%88%86">https://www.ioiox.com/archives/106.html，主要参考后面docker设置的部分</a></li></ol><h4 id="cloudflare配置，不推荐，已经无法通过api修改freenom免费域名记录"><a href="#cloudflare配置，不推荐，已经无法通过api修改freenom免费域名记录" class="headerlink" title="cloudflare配置，不推荐，已经无法通过api修改freenom免费域名记录"></a><del>cloudflare配置</del>，不推荐，已经无法通过api修改freenom免费域名记录</h4><p>先添加站点，选免费的就好</p><p><img src="/2022/06/26/pve-all/image-20220904163935451.png" alt="image-20220904163935451"></p><p><img src="/2022/06/26/pve-all/image-20220904164001036.png" alt="image-20220904164001036"></p><p>先全部跳过，按照默认设置来，然后进入到主页面之后，复制右边的api</p><p><img src="/2022/06/26/pve-all/image-20220904164108987.png" alt="image-20220904164108987"></p><p>获取api令牌，直接使用模板，改成所有区域即可</p><p><img src="/2022/06/26/pve-all/image-20220904164220078.png" alt="image-20220904164220078"></p><p><img src="/2022/06/26/pve-all/image-20220904164332330.png" alt="image-20220904164332330"></p><p>注意保管好生成的令牌！后续看不到</p><p><img src="/2022/06/26/pve-all/image-20220904164423318.png" alt="image-20220904164423318"></p><p>再去到freenom的页面，修改对应的namserver</p><p><img src="/2022/06/26/pve-all/image-20220904173003150.png" alt="image-20220904173003150"></p><p><img src="/2022/06/26/pve-all/image-20220904173046071.png" alt="image-20220904173046071"></p><p>等待几分钟之后就好了</p><p><img src="/2022/06/26/pve-all/image-20220904173628746.png" alt="image-20220904173628746"></p><p><strong>实测会失败！！！！无法通过API修改！！！</strong></p><p><img src="/2022/06/26/pve-all/image-20220904183724089.png" alt="image-20220904183724089"></p><h3 id="dnspod"><a href="#dnspod" class="headerlink" title="dnspod"></a>dnspod</h3><p><img src="/2022/06/26/pve-all/image-20220904185425181.png" alt="image-20220904185425181"></p><p><img src="/2022/06/26/pve-all/image-20220904185524781.png" alt="image-20220904185524781"></p><p>同样是修改DNS服务器</p><p><img src="/2022/06/26/pve-all/image-20220904185829151.png" alt="image-20220904185829151"></p><p>没问题之后获取API密匙</p><p><img src="/2022/06/26/pve-all/image-20220904190007029.png" alt="image-20220904190007029"></p><p><img src="/2022/06/26/pve-all/image-20220904190111921.png" alt="image-20220904190111921"></p><p><img src="/2022/06/26/pve-all/image-20220904190139183.png" alt="image-20220904190139183"></p><p>id和token都需要</p><h3 id="ddns-go部署"><a href="#ddns-go部署" class="headerlink" title="ddns go部署"></a>ddns go部署</h3><p>参考：</p><ol><li><a href="https://csyan.cn/2021/08/%E7%BE%A4%E6%99%96%EF%BC%9A%E4%BD%BF%E7%94%A8ddns-go%E5%A5%97%E4%BB%B6%E5%AE%9E%E7%8E%B0ipv6%E5%8A%A8%E6%80%81%E8%A7%A3%E6%9E%90.html%EF%BC%8C%E6%AF%94%E8%BE%83%E8%AF%A6%E7%BB%86%E7%9A%84%E6%95%99%E7%A8%8B">https://csyan.cn/2021/08/%E7%BE%A4%E6%99%96%EF%BC%9A%E4%BD%BF%E7%94%A8ddns-go%E5%A5%97%E4%BB%B6%E5%AE%9E%E7%8E%B0ipv6%E5%8A%A8%E6%80%81%E8%A7%A3%E6%9E%90.html，比较详细的教程</a></li></ol><p><img src="/2022/06/26/pve-all/image-20220904164807974.png" alt="image-20220904164807974"></p><p>参考<a href="https://registry.hub.docker.com/r/jeessy/ddns-go/">官方文档</a>的配置：</p><p><img src="/2022/06/26/pve-all/image-20220904164909186.png" alt="image-20220904164909186"></p><p><img src="/2022/06/26/pve-all/image-20220904164939168.png" alt="image-20220904164939168"></p><p>打开<code>http://群晖IP:9876</code>，填入刚刚获得的token，并启用ipv6，修改成网卡获取</p><p><img src="/2022/06/26/pve-all/image-20220904171232058.png" alt="image-20220904171232058"></p><p><img src="/2022/06/26/pve-all/image-20220904171416076.png" alt="image-20220904171416076"></p><p>**注意domains那里要填写需要的域名，可以添加主机记录，比如域名是<code>example.com</code>，那么可以填写<code>ddns.example.com</code>**。如果希望多个域名，则可以用<code>ddns1:ddns2:example.com</code>这样</p><p><img src="/2022/06/26/pve-all/image-20220904190915797.png" alt="image-20220904190915797"></p><p>推送方面，可以通过注册个人企业微信，在企业微信群中添加机器人，得到对应的webhook，然后</p><p>参考的信息：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"msgtype"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span>    <span class="token property">"text"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"#&#123;ipv6Domains&#125; 获取ipv6地址结果：#&#123;ipv6Result&#125;，新的ipv6地址：#&#123;ipv6Addr&#125;"</span><span class="token punctuation">,</span><span class="token property">"mentioned_list"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">"@all"</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置成功的话，可以在日志里看到</p><p><img src="/2022/06/26/pve-all/image-20220904190623519.png" alt="image-20220904190623519"></p><h2 id="安全设置"><a href="#安全设置" class="headerlink" title="安全设置"></a>安全设置</h2><p>参考：</p><ol><li><a href="https://hin.cool/posts/nasec.html">https://hin.cool/posts/nasec.html</a> 很详细</li></ol><p>主要就设置几个地方：</p><ol><li>关闭admin账号</li><li>如果开启ssh，要把默认的端口改成其他的，非22&#x2F;23&#x2F;80&#x2F;8080的</li><li>开启账户保护</li></ol><p><img src="/2022/06/26/pve-all/image-20220904175734244.png" alt="image-20220904175734244"></p><p><img src="/2022/06/26/pve-all/image-20220904175717212.png" alt="image-20220904175717212"></p><h1 id="PVE使用windows系统"><a href="#PVE使用windows系统" class="headerlink" title="PVE使用windows系统"></a>PVE使用windows系统</h1><p>参考：</p><ol><li>教程贴，虽然不是很详细，但是总体还不错，<strong>注意并不一定需要用到物理的U盘来安装</strong>，<a href="https://www.right.com.cn/forum/thread-6546634-1-1.html">https://www.right.com.cn/forum/thread-6546634-1-1.html</a></li><li><del>精简版windows server系统来源，包含部分使用说明，<a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=7500317&amp;highlight=%D1%B8%EF%BF%BD%EF%BF%BD">https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=7500317&amp;highlight=%D1%B8%C0%D7</a></del>，<strong>但这个版本不包含NFS管理器，不推荐</strong></li><li><strong>强烈建议按照这篇的进行安装！！</strong><a href="https://www.right.com.cn/forum/thread-4129536-1-1.html%EF%BC%8C%E9%9D%9E%E5%B8%B8%E4%B8%8D%E9%94%99%EF%BC%81%EF%BC%81">https://www.right.com.cn/forum/thread-4129536-1-1.html，非常不错！！</a></li><li>张大妈上的文章，注意看esd是怎么转化成iso的，<a href="https://post.smzdm.com/p/a78e79ll/">https://post.smzdm.com/p/a78e79ll/</a></li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="关于windows版本选择"><a href="#关于windows版本选择" class="headerlink" title="关于windows版本选择"></a>关于windows版本选择</h3><p>参考<a href="https://www.423down.com/10032.html">https://www.423down.com/10032.html</a></p><p><img src="/2022/06/26/pve-all/image-20220702180537741.png" alt="image-20220702180537741"></p><p><del>最后选择了小修的系统<a href="https://www.423down.com/12361.html/comment-page-2#comments">https://www.423down.com/12361.html/comment-page-2#comments</a></del>，<strong>但小修的系统依旧没有NFS</strong></p><p>不忘初心的系统也还行 <a href="https://www.mpyit.com/win10ltsc2019bwcx.html%EF%BC%8C**%E5%AE%9E%E6%B5%8B%E6%9C%89NFS">https://www.mpyit.com/win10ltsc2019bwcx.html，**实测有NFS</a>**</p><p><img src="/2022/06/26/pve-all/image-20220702221112714.png" alt="image-20220702221112714"></p><p>有NFS</p><p><img src="/2022/06/26/pve-all/image-20220702221310172.png" alt="image-20220702221310172"></p><p>驱动更全，只有网卡和PCI设备没有识别</p><p><img src="/2022/06/26/pve-all/image-20220702221205539.png" alt="image-20220702221205539"></p><p>美中不足的是比较耗资源（内存）</p><p><img src="/2022/06/26/pve-all/image-20220702225611848.png" alt="image-20220702225611848"></p><p>最后的结论：</p><ol><li><strong>使用不忘初心的版本最好！！，但是比较耗资源，远程桌面略卡</strong>。可以考虑用上面的windows server精简版，用SMB协议挂载，道理是类似的，可能SMB的性能没那么好，但是也够用了。<strong>但后面切换mac发现，远程桌面卡的问题应该是笔记本的问题</strong></li><li>官方LTSC 2019版本不是那么好用，需要自己设置很多东西，比如远程桌面就需要自己单独设置。<strong>还不如不忘初心的。</strong></li></ol><h3 id="准备ISO"><a href="#准备ISO" class="headerlink" title="准备ISO"></a>准备ISO</h3><p>主要参考 参考4</p><p><img src="/2022/06/26/pve-all/image-20220702002451649.png" alt="image-20220702002451649"></p><p>第一步，利用winpe生成iso，此时的iso里面包含了winpe工具箱</p><p><img src="/2022/06/26/pve-all/image-20220701234022881.png" alt="image-20220701234022881"></p><p>第二步，打开ultraiso，把esd文件直接拖进去，再把KMS激活程序也解压出来，一起加进去，另存为另一个iso</p><p><img src="/2022/06/26/pve-all/image-20220702183922214.png" alt="image-20220702183922214"></p><p>最后得到两个ISO</p><p><img src="/2022/06/26/pve-all/image-20220701235907183.png" alt="image-20220701235907183"></p><p>再算上参考3的驱动ISO，总共3个</p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><h4 id="进入PE安装（esd格式的安装方法）"><a href="#进入PE安装（esd格式的安装方法）" class="headerlink" title="进入PE安装（esd格式的安装方法）"></a>进入PE安装（esd格式的安装方法）</h4><p>同样是先上传到local节点</p><p><img src="/2022/06/26/pve-all/image-20220702002708874.png" alt="image-20220702002708874"></p><p>实测用小修的系统的话，12G也够了</p><p><img src="/2022/06/26/pve-all/image-20220702000209128.png" alt="image-20220702000209128"></p><p><img src="/2022/06/26/pve-all/image-20220702000303523.png" alt="image-20220702000303523"></p><p><img src="/2022/06/26/pve-all/image-20220702000316480.png" alt="image-20220702000316480"></p><p>依次把三个ISO挂载上</p><p><img src="/2022/06/26/pve-all/image-20220702000418371.png" alt="image-20220702000418371"></p><p><img src="/2022/06/26/pve-all/image-20220702182648947.png" alt="image-20220702182648947"></p><p>默认使用的硬盘要注意开启SSD仿真。如果无法直接修改，就先分离硬屏，就可以修改参数了</p><p><img src="/2022/06/26/pve-all/image-20220828215436332.png" alt="image-20220828215436332"></p><p>调整启动的顺序，让wepe的iso在最上面</p><p><img src="/2022/06/26/pve-all/image-20220702000507951.png" alt="image-20220702000507951"></p><p><img src="/2022/06/26/pve-all/image-20220702182723788.png" alt="image-20220702182723788"></p><p>启动之后很快进入了PE</p><p><img src="/2022/06/26/pve-all/image-20220702000620809.png" alt="image-20220702000620809"></p><p>打开我的电脑，可以看到两个ISO都被挂载了，其中D盘包含了我们需要的esd</p><p><img src="/2022/06/26/pve-all/image-20220702000805301.png" alt="image-20220702000805301"></p><p>先用DiskGenius分区</p><p><img src="/2022/06/26/pve-all/image-20220702182033796.png" alt="image-20220702182033796"></p><p><img src="/2022/06/26/pve-all/image-20220702182052119.png" alt="image-20220702182052119"></p><p><img src="/2022/06/26/pve-all/image-20220702182106504.png" alt="image-20220702182106504"></p><p><img src="/2022/06/26/pve-all/image-20220702182136528.png" alt="image-20220702182136528"></p><p><img src="/2022/06/26/pve-all/image-20220702182150608.png" alt="image-20220702182150608"></p><p>建议还是不要勾选自动重启，方便后续调整虚拟机的启动顺序</p><p><img src="/2022/06/26/pve-all/image-20220702182213238.png" alt="image-20220702182213238"></p><p>安装完成后，在重启前调整启动顺序</p><p><img src="/2022/06/26/pve-all/image-20220702182505998.png" alt="image-20220702182505998"></p><p>顺利进入安装页面</p><p><img src="/2022/06/26/pve-all/image-20220702002159907.png" alt="image-20220702002159907"></p><p>最后自动进入桌面</p><p><img src="/2022/06/26/pve-all/image-20220702002810227.png" alt="image-20220702002810227"></p><h4 id="直接挂载iso安装"><a href="#直接挂载iso安装" class="headerlink" title="直接挂载iso安装"></a>直接挂载iso安装</h4><p>针对的是像不忘初心这种，下载下来就是iso的情况，直接传输到local节点。（或者直接下载到硬盘里），然后挂载到虚拟机里</p><p>接下来同样是先进入pe，<strong>格式化硬盘（包括建立引导）</strong>，注意这一步必不可少！！！，否则空间不足</p><p>然后在pe系统下，选择加载为ImDisk虚拟磁盘，可以看到多了一个盘符</p><p><img src="/2022/06/26/pve-all/image-20220702220045335.png" alt="image-20220702220045335"></p><p><img src="/2022/06/26/pve-all/image-20220702220128430.png" alt="image-20220702220128430"></p><p>选择sources目录下的install.esd即可</p><p><img src="/2022/06/26/pve-all/image-20220702220232175.png" alt="image-20220702220232175"></p><p>其余步骤和上面基于esd格式的安装一致</p><p>注意默认的是Admin版本的。如果需要普通user版本的，则需要通过iso安装。具体而言：</p><ul><li>把原始的安装iso上传到local节点并挂载</li><li>开机顺序选择该iso启动</li><li>进入安装界面后继续选择</li></ul><p>LTSC 2019版本的配置</p><p><img src="/2022/06/26/pve-all/image-20220828221635270.png" alt="image-20220828221635270"></p><p><img src="/2022/06/26/pve-all/image-20220828221652824.png" alt="image-20220828221652824"></p><h4 id="PS：如何直接从硬盘从挂载而不先传到local-实测下面的方法不行，必须先得导入成cd-rom镜像"><a href="#PS：如何直接从硬盘从挂载而不先传到local-实测下面的方法不行，必须先得导入成cd-rom镜像" class="headerlink" title="PS：如何直接从硬盘从挂载而不先传到local  实测下面的方法不行，必须先得导入成cd rom镜像"></a><del>PS：如何直接从硬盘从挂载而不先传到local</del>  实测下面的方法不行，必须先得导入成cd rom镜像</h4><p>创建好虚拟机之后，直接用命令即可</p><pre class="line-numbers language-none"><code class="language-none">qm importdisk vm-id path&#x2F;to&#x2F;iso local-lvm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>首先找到镜像的位置：</li></ul><p><img src="/2022/06/26/pve-all/image-20220828214808960.png" alt="image-20220828214808960"></p><p>比如这里是<code>/mnt/pve/wd_nas_4t/images/cn_windows_10_enterprise_ltsc_2019_x64_dvd_9c09ff24.iso</code></p><ul><li>然后按照上面的命令格式来：</li></ul><pre class="line-numbers language-none"><code class="language-none">qm importdisk 103 &#x2F;mnt&#x2F;pve&#x2F;wd_nas_4t&#x2F;images&#x2F;cn_windows_10_enterprise_ltsc_2019_x64_dvd_9c09ff24.iso local-lvm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到传输速度更快</p><p><img src="/2022/06/26/pve-all/image-20220828215026935.png" alt="image-20220828215026935"></p><ul><li>导入完成后，可以看到这里有个未使用磁盘</li></ul><p><img src="/2022/06/26/pve-all/image-20220828215050871.png" alt="image-20220828215050871"></p><p>把这个改成sata格式即可</p><h5 id="正确做法"><a href="#正确做法" class="headerlink" title="正确做法"></a>正确做法</h5><ul><li><p>先找到位置硬屏上iso的位置</p></li><li><p>然后用<code>cp</code>命令复制到iso目录下</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> /mnt/pve/wd_nas_4t/images/cn_windows_10_enterprise_ltsc_2019_x64_dvd_9c09ff24.iso /var/lib/vz/template/iso/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>其余步骤和一般的导入cdrom一样</li></ul><h3 id="安装完成后，调整启动顺序"><a href="#安装完成后，调整启动顺序" class="headerlink" title="安装完成后，调整启动顺序"></a>安装完成后，调整启动顺序</h3><p>安装完成后，先不要直接重启， 而是先关机，调整完启动顺序后再重启</p><p><img src="/2022/06/26/pve-all/image-20220828222029366.png" alt="image-20220828222029366"></p><h3 id="驱动安装"><a href="#驱动安装" class="headerlink" title="驱动安装"></a>驱动安装</h3><p><strong>可以先安装好驱动，再激活</strong></p><p>默认情况下可以看到以太网设备是不通的，所以需要参照参考3里面的驱动安装步骤</p><p>下载最新版本的驱动，<a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/virtio-win-0.1.217-2/">https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/virtio-win-0.1.217-2/</a></p><p><img src="/2022/06/26/pve-all/image-20220702003035410.png" alt="image-20220702003035410"></p><p><img src="/2022/06/26/pve-all/image-20220702003049286.png" alt="image-20220702003049286"></p><p>同样是上传后挂载，然后重启，就能在windows系统里看到了</p><p><img src="/2022/06/26/pve-all/image-20220702003703900.png" alt="image-20220702003703900"></p><p>网卡驱动：</p><p><img src="/2022/06/26/pve-all/image-20220702003643978.png" alt="image-20220702003643978"></p><p><img src="/2022/06/26/pve-all/image-20220702003724174.png" alt="image-20220702003724174"></p><p><img src="/2022/06/26/pve-all/image-20220702003739621.png" alt="image-20220702003739621"></p><p>PCI驱动则是整个目录</p><p><img src="/2022/06/26/pve-all/image-20220702005506528.png" alt="image-20220702005506528"></p><p><img src="/2022/06/26/pve-all/image-20220702005538804.png" alt="image-20220702005538804"></p><h3 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h3><p>强烈建议使用萌卡大佬的<a href="https://www.moerats.com/kms/%EF%BC%8C%E6%8C%89%E6%95%99%E7%A8%8B%E8%8E%B7%E5%BE%97%E8%84%9A%E6%9C%AC%E5%8D%B3%E5%8F%AF">https://www.moerats.com/kms/，按教程获得脚本即可</a></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="windows系统设置"><a href="#windows系统设置" class="headerlink" title="windows系统设置"></a>windows系统设置</h3><p>设置管理员密码，方便远程桌面登陆</p><p><img src="/2022/06/26/pve-all/image-20220702004542363.png" alt="image-20220702004542363"></p><h4 id="虚拟机开启远程桌面权限"><a href="#虚拟机开启远程桌面权限" class="headerlink" title="虚拟机开启远程桌面权限"></a>虚拟机开启远程桌面权限</h4><p>LTSC 2019原版需要</p><p>首先参照 <a href="http://www.aichunjing.com/xtjc/14444.html">http://www.aichunjing.com/xtjc/14444.html</a> 修改为个人电脑。然后在系统处设置相关</p><h4 id="远程桌面设置"><a href="#远程桌面设置" class="headerlink" title="远程桌面设置"></a>远程桌面设置</h4><p>把所有选项勾上，共享磁盘</p><p><img src="/2022/06/26/pve-all/image-20220702005208836.png" alt="image-20220702005208836"></p><h3 id="挂载NFS"><a href="#挂载NFS" class="headerlink" title="挂载NFS"></a>挂载NFS</h3><p>参考：<a href="https://blog.51cto.com/huny/3265487">https://blog.51cto.com/huny/3265487</a></p><p>首先按照NFS客户端</p><p><img src="/2022/06/26/pve-all/image-20220702221834014.png" alt="image-20220702221834014"></p><p>然后找到本机ip，在DSM上添加对应的ip</p><p><img src="/2022/06/26/pve-all/image-20220702221935622.png" alt="image-20220702221935622"></p><p><img src="/2022/06/26/pve-all/image-20220702222044490.png" alt="image-20220702222044490"></p><p>参考参考：</p><p><img src="/2022/06/26/pve-all/image-20220702222253896.png" alt="image-20220702222253896"></p><p>这里使用的命令类似，同样是挂载的X盘，<strong>注意下面的命令要在命令提示符里面，而不能在powershel</strong>l</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mount</span> <span class="token number">192.168</span>.68.189:/volume1/nas4t X:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220702222247356.png" alt="image-20220702222247356"></p><p><img src="/2022/06/26/pve-all/image-20220702222414798.png" alt="image-20220702222414798"></p><p> 但是重启后刚刚的挂载已经不见了，为此需要开机自动挂载</p><p><img src="/2022/06/26/pve-all/image-20220702222542133.png" alt="image-20220702222542133"></p><h4 id="windows开机自动挂载"><a href="#windows开机自动挂载" class="headerlink" title="windows开机自动挂载"></a>windows开机自动挂载</h4><p>参考：<a href="https://blog.csdn.net/baidu_27583743/article/details/113524415">https://blog.csdn.net/baidu_27583743/article/details/113524415</a></p><p>为了实现开机自动自动挂载NFS</p><p>右键我的电脑-计算机管理</p><p><img src="/2022/06/26/pve-all/image-20220702223311175.png" alt="image-20220702223311175"></p><p><img src="/2022/06/26/pve-all/image-20220702223454215.png" alt="image-20220702223454215"></p><p><img src="/2022/06/26/pve-all/image-20220702223510660.png" alt="image-20220702223510660"></p><p><img src="/2022/06/26/pve-all/image-20220702223539829.png" alt="image-20220702223539829"></p><p>新建操作，其中的参数使用刚刚的命令行里用的参数</p><p><img src="/2022/06/26/pve-all/image-20220702223649938.png" alt="image-20220702223649938"></p><p><img src="/2022/06/26/pve-all/image-20220702223709060.png" alt="image-20220702223709060"></p><p><img src="/2022/06/26/pve-all/image-20220702223728305.png" alt="image-20220702223728305"></p><p>设置运行后尝试重启，发现已经有了</p><p><img src="/2022/06/26/pve-all/image-20220702223755551.png" alt="image-20220702223755551"></p><p>可以看到已经成功挂载了（虽然图标是X），但看任务记录已经运行成功，且可以成功传输文件</p><p><img src="/2022/06/26/pve-all/image-20220702224047646.png" alt="image-20220702224047646"></p><p><img src="/2022/06/26/pve-all/image-20220702224057957.png" alt="image-20220702224057957"></p><h4 id="中文乱码"><a href="#中文乱码" class="headerlink" title="中文乱码"></a>中文乱码</h4><p>参考<a href="https://blog.csdn.net/baidu_41909866/article/details/116305972">https://blog.csdn.net/baidu_41909866/article/details/116305972</a></p><p><img src="/2022/06/26/pve-all/image-20220703112537394.png" alt="image-20220703112537394"></p><p><img src="/2022/06/26/pve-all/image-20220703112556081.png" alt="image-20220703112556081"></p><p><img src="/2022/06/26/pve-all/image-20220703112613933.png" alt="image-20220703112613933"></p><p>重启即可</p><h3 id="挂载SMB"><a href="#挂载SMB" class="headerlink" title="挂载SMB"></a>挂载SMB</h3><p>注意只能挂载dsm目录下的某一个文件夹</p><p><img src="/2022/06/26/pve-all/image-20220702233724013.png" alt="image-20220702233724013"></p><p><img src="/2022/06/26/pve-all/image-20220702234033638.png" alt="image-20220702234033638"></p><p>比如我要挂载nas4t文件夹，则对应如下：</p><p><img src="/2022/06/26/pve-all/image-20220702234129272.png" alt="image-20220702234129272"></p><p>最后再输入账户和密码</p><p><img src="/2022/06/26/pve-all/image-20220702233755019.png" alt="image-20220702233755019"></p><p>可以看到已经映射成功了</p><p><img src="/2022/06/26/pve-all/image-20220702234153516.png" alt="image-20220702234153516"></p><p><del>实测速度比较慢</del></p><p><img src="/2022/06/26/pve-all/image-20220702234243747.png" alt="image-20220702234243747"></p><p>重新测试，速度达到千兆</p><p><img src="/2022/06/26/pve-all/image-20220730214523859.png" alt="image-20220730214523859"></p><h3 id="直接看这个！！最佳的挂载方法"><a href="#直接看这个！！最佳的挂载方法" class="headerlink" title="直接看这个！！最佳的挂载方法"></a>直接看这个！！最佳的挂载方法</h3><p>其实直接用 映射网络驱动器 即可</p><p>第一次映射的时候，需要登陆群晖的账号和密码</p><p><img src="/2022/06/26/pve-all/image-20220828223702106.png" alt="image-20220828223702106"></p><p>登陆成功后就能看到所有的硬盘和文件夹</p><p><img src="/2022/06/26/pve-all/image-20220828223856520.png" alt="image-20220828223856520"></p><h3 id="安卓usb文件传输"><a href="#安卓usb文件传输" class="headerlink" title="安卓usb文件传输"></a>安卓usb文件传输</h3><p>实测需要开启usb调试+运行usb安装，才有可能连接上。如果不行，反复关闭开启试试看</p><h1 id="pve备份"><a href="#pve备份" class="headerlink" title="pve备份"></a>pve备份</h1><p>参考：<a href="https://blog.csdn.net/lyace2010/article/details/108918070">https://blog.csdn.net/lyace2010/article/details/108918070</a></p><p><img src="/2022/06/26/pve-all/image-20220626152130072.png" alt="image-20220626152130072"></p><p>scp存下来即可</p><p>在新pve上再用scp传回去（<code>/var/lib/vz/dump</code>）即可</p><p><img src="/2022/06/26/pve-all/image-20220626180115245.png" alt="image-20220626180115245"></p><h1 id="LXC-jellyfin"><a href="#LXC-jellyfin" class="headerlink" title="LXC jellyfin"></a>LXC jellyfin</h1><h2 id="常用路径"><a href="#常用路径" class="headerlink" title="常用路径"></a>常用路径</h2><p><img src="/2022/06/26/pve-all/image-20220702231641803.png" alt="image-20220702231641803"></p><p>在控制台里都有，尤其关注log文件</p><h2 id="硬解"><a href="#硬解" class="headerlink" title="硬解"></a>硬解</h2><p>首先按照<a href="#%E6%98%BE%E5%8D%A1%E7%9B%B4%E9%80%9A%E7%BB%99LXC%E5%AE%B9%E5%99%A8%E5%B9%B6%E7%A1%AC%E4%BB%B6">显卡直通给LXC容器并硬件</a>让LXC容器至少<code>vainfo</code>能够正确显示</p><p><img src="/2022/06/26/pve-all/image-20220704224715682.png" alt="image-20220704224715682"></p><p>然后设置<code>/dev/dri</code>的权限（这里参考司波图的教程的评论区<a href="https://www.bilibili.com/video/BV1ME411o7H2?share_source=copy_web%EF%BC%89">https://www.bilibili.com/video/BV1ME411o7H2?share_source=copy_web）</a></p><p><img src="/2022/06/26/pve-all/image-20220704225809011.png" alt="image-20220704225809011"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> /dev/dri<span class="token comment"># 下面这一步没问题的话就不要用了</span><span class="token function">chown</span> <span class="token parameter variable">-R</span> nobody:users /dev/dri<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>建议只用第一步<code>chmod -R 777 /dev/dri</code>，实在还是硬件不了再用第二步</p><p>根据vainfo得到指令集，在jellyfin上进行设置</p><p><img src="/2022/06/26/pve-all/image-20220704230417162.png" alt="image-20220704230417162"></p><p><img src="/2022/06/26/pve-all/image-20220704230425510.png" alt="image-20220704230425510"></p><p><strong>注意！！非常重要</strong></p><p>测试硬件必须在调整成与原始视频不同的码率来进行播放，才会调用接码。如果是原始视频的码率，则不会调用GPU进行转码。例如：</p><ul><li>1080P视频调整成360P 40Mbps的码率解码</li><li>4K视频调整成1080P</li></ul><p>像下面这样就是已经有调用了，虽然是快的</p><p><img src="/2022/06/26/pve-all/image-20220704231503807.png" alt="image-20220704231503807"></p><h3 id="硬件权限设置"><a href="#硬件权限设置" class="headerlink" title="硬件权限设置"></a>硬件权限设置</h3><p>参考 <a href="https://www.reddit.com/r/jellyfin/comments/r5pur8/best_transcoding_settings_for_synology_ds920/">https://www.reddit.com/r/jellyfin/comments/r5pur8/best_transcoding_settings_for_synology_ds920/</a></p><p><img src="/2022/06/26/pve-all/image-20220704232110725.png" alt="image-20220704232110725"></p><p><img src="/2022/06/26/pve-all/image-20220705223948205.png" alt="image-20220705223948205"></p><p>可以看到每次重启之后，<code>/dev/dri</code>目录的权限都会被重新变更（因为实际上这个目录是重新创建的），所以需要设置一个脚本自动设置权限</p><p>设置开机权限</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="挂载NFS目录问题"><a href="#挂载NFS目录问题" class="headerlink" title="挂载NFS目录问题"></a>挂载NFS目录问题</h3><p><img src="/2022/06/26/pve-all/image-20220702231606087.png" alt="image-20220702231606087"></p><p>主要是默认的启动用户是jellyfin</p><p><img src="/2022/06/26/pve-all/image-20220702232552621.png" alt="image-20220702232552621"></p><p>所以jellyfin用户并没有权限。需要添加把jellyfin添加权限</p><p>参考<a href="https://blog.csdn.net/u013197629/article/details/73608613">https://blog.csdn.net/u013197629/article/details/73608613</a></p><p>直接为改成所有用户都可读写即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token parameter variable">-R</span> a+rw *<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="备份还原后的容器问题"><a href="#备份还原后的容器问题" class="headerlink" title="备份还原后的容器问题"></a>备份还原后的容器问题</h3><p>The server is expected to host the web client, but the provided content directory is either invalid or empty: &#x2F;usr&#x2F;lib&#x2F;jellyfin&#x2F;bin&#x2F;jellyfin-web</p><p>参考 <a href="https://github.com/jellyfin/jellyfin/issues/3638">https://github.com/jellyfin/jellyfin/issues/3638</a></p><p>直接新建软连即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/share/jellyfin/web/ /usr/lib/jellyfin/bin/jellyfin-web<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="扫描慢"><a href="#扫描慢" class="headerlink" title="扫描慢"></a>扫描慢</h3><p>实测是刮削器慢，所以可以手动把所有刮削器和元数据器关了</p><p>参考 <a href="https://blog.pakro.top/2020/solve_the_problem_that_jellyfin_scans_the_media_library_abnormally_after_manually_importing_a_large_number_of_files_at_one_time/">https://blog.pakro.top/2020/solve_the_problem_that_jellyfin_scans_the_media_library_abnormally_after_manually_importing_a_large_number_of_files_at_one_time/</a></p><h3 id="扫描不出本地文件夹"><a href="#扫描不出本地文件夹" class="headerlink" title="扫描不出本地文件夹"></a>扫描不出本地文件夹</h3><p>参考<a href="https://forum.manjaro.org/t/jellyfin-cant-detect-external-drives-and-files-in-home-directory/90994/2">https://forum.manjaro.org/t/jellyfin-cant-detect-external-drives-and-files-in-home-directory/90994/2</a></p><p>实测是因为权限问题，默认是root用户创建的文件夹。通过这个即可解决</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token parameter variable">-R</span> a+rx /root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改权限后都能显示</p><p><img src="/2022/06/26/pve-all/image-20220708010823030.png" alt="image-20220708010823030"></p><h3 id="感觉好像没有解码？"><a href="#感觉好像没有解码？" class="headerlink" title="感觉好像没有解码？"></a>感觉好像没有解码？</h3><p>比如这个4k的视频，GPU利用率才不到10%，实测是因为编码的问题。g3220的核显不支持HEVC</p><p><img src="/2022/06/26/pve-all/image-20220708011342814.png" alt="image-20220708011342814"></p><p><img src="/2022/06/26/pve-all/image-20220708011311975.png" alt="image-20220708011311975"></p><h1 id="docker使用"><a href="#docker使用" class="headerlink" title="docker使用"></a>docker使用</h1><h2 id="jellyfin（更推荐使用这个）"><a href="#jellyfin（更推荐使用这个）" class="headerlink" title="jellyfin（更推荐使用这个）"></a>jellyfin（更推荐使用这个）</h2><p>核心是要硬解</p><p>参考：</p><ol><li><a href="https://jellyfin.org/docs/general/administration/hardware-acceleration.html#va-api-and-qsv-hardware-acceleration-on-lxc-on-proxmox">https://jellyfin.org/docs/general/administration/hardware-acceleration.html#va-api-and-qsv-hardware-acceleration-on-lxc-on-proxmox</a> 硬解的docker配置</li><li><a href="https://jellyfin.org/docs/general/administration/installing.html#container-images">https://jellyfin.org/docs/general/administration/installing.html#container-images</a> jellyfin官方文档，docker下如何配置</li><li><a href="https://wp.xanderye.cn/archives/284%EF%BC%8C%E4%B8%BB%E8%A6%81%E5%8F%82%E8%80%83%E9%87%8C%E9%9D%A2docker%E7%9A%84%E9%85%8D%E7%BD%AE%E9%83%A8%E5%88%86">https://wp.xanderye.cn/archives/284，主要参考里面docker的配置部分</a></li></ol><p>前置条件：</p><ul><li>先把docker装好。docker最好是装在ubuntu的ct模板里</li><li>ubuntu的lxc容器已经直通了显卡</li></ul><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p><strong>建议直接使用jellyfin特供版</strong>的。如果是不支持iHD的核显（比如4代的cpu），也可以用官方版本的</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> pull nyanmisaka/jellyfin:latest <span class="token comment"># 四代也可以用jellyfin/jellfin:latest</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>参考 <a href="https://jellyfin.org/docs/general/administration/installing.html#container-images">参考2</a>，首先创建一个文件夹<code>jellyfin</code>，同时在里面创建两个文件夹<code>cache</code>和<code>config</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> jellyfin/cache<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> jellyfin/config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后新建一个<code>docker-compose.yml</code>：</p><ul><li><code>group_add</code>：参考 参考1， 在<code>/etc/group</code>里找到lxc容器的render的组(注意不是docker内部的！！！)，比如这里是108</li></ul><p><img src="/2022/06/26/pve-all/image-20220829003913351.png" alt="image-20220829003913351"></p><ul><li><code>volumes</code>：主要就是config、cache以及媒体文件夹</li><li><code>devices</code>：就是把宿主机（即LXC容器）里的硬件映射到container里</li></ul><p>结合参考3</p><p><img src="/2022/06/26/pve-all/image-20220903010544097.png" alt="image-20220903010544097"></p><p>最后的成品如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.5"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">jellyfin</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> jellyfin/jellyfin    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> jellyfin    <span class="token key atrule">group_add</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"108"</span>    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> <span class="token string">"host"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> /root/jellyfin/config<span class="token punctuation">:</span>/config      <span class="token punctuation">-</span> /root/jellyfin/cache<span class="token punctuation">:</span>/cache      <span class="token punctuation">-</span> /mnt/nas_wd_4t_1<span class="token punctuation">:</span>/mnt/nas_wd_4t_1    <span class="token key atrule">restart</span><span class="token punctuation">:</span> <span class="token string">"unless-stopped"</span>    <span class="token key atrule">devices</span><span class="token punctuation">:</span>      <span class="token comment"># VAAPI Devices (examples)</span>      <span class="token punctuation">-</span> /dev/dri/renderD128<span class="token punctuation">:</span>/dev/dri/renderD128      <span class="token punctuation">-</span> /dev/dri/card0<span class="token punctuation">:</span>/dev/dri/card0    <span class="token comment"># Optional - alternative address used for autodiscovery</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> JELLYFIN_PublishedServerUrl=http<span class="token punctuation">:</span>//example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>特供版的<code>nyanmisaka/jellyfin</code>的配置：</p><ul><li>多了<code>privileged</code>参数</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.5"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">jellyfin</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> nyanmisaka/jellyfin    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> nya<span class="token punctuation">-</span>jellyfin    <span class="token key atrule">group_add</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"108"</span>    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> <span class="token string">"host"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> /root/nya<span class="token punctuation">-</span>jellyfin/config<span class="token punctuation">:</span>/config      <span class="token punctuation">-</span> /root/nya<span class="token punctuation">-</span>jellyfin/cache<span class="token punctuation">:</span>/cache      <span class="token punctuation">-</span> /mnt/nas_wd_4t_1<span class="token punctuation">:</span>/mnt/nas_wd_4t_1    <span class="token key atrule">restart</span><span class="token punctuation">:</span> <span class="token string">"unless-stopped"</span>    <span class="token key atrule">devices</span><span class="token punctuation">:</span>      <span class="token comment"># VAAPI Devices (examples)</span>      <span class="token punctuation">-</span> /dev/dri/renderD128<span class="token punctuation">:</span>/dev/dri/renderD128      <span class="token punctuation">-</span> /dev/dri/card0<span class="token punctuation">:</span>/dev/dri/card0    <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token comment"># Optional - alternative address used for autodiscovery</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> JELLYFIN_PublishedServerUrl=http<span class="token punctuation">:</span>//example.com      <span class="token punctuation">-</span> TZ=Asia/Shanghai<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后开启容器：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> compose up <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="进入container进行配置"><a href="#进入container进行配置" class="headerlink" title="进入container进行配置"></a>进入container进行配置</h3><p>首先找到docker container的id，用docker ps可以看到。</p><p>然后用下面的命令进入docker container</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> container_id <span class="token function">bash</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><del>进入之后，依次安装驱动和vainfo。由于g3220是haswell架构，不支持iHD，所以直接安装i965的驱动即可</del> 特供版的已经安装好了驱动，只需要安装<code>vainfo</code>即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> dist-upgrade <span class="token parameter variable">-y</span> <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">vim</span> <span class="token function">sudo</span><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> i965-va-driver vainfo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>最后看vainfo是否能正确输出结果，没问题说明能够硬解</p><p><img src="/2022/06/26/pve-all/image-20220829004559661.png" alt="image-20220829004559661"></p><h2 id="qbittorrent"><a href="#qbittorrent" class="headerlink" title="qbittorrent"></a>qbittorrent</h2><p>同样是先创建文件夹<code>/root/qbittorrent/config</code></p><p><strong>不建议使用下面的镜像</strong>，而是直接使用<code>nevinee/qbittorrent</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">version: <span class="token string">"2.1"</span>services:  qbittorrent <span class="token builtin class-name">:</span>    image: docker.mirrors.ustc.edu.cn/johngong/qbittorrent:latest    container_name: qbittorrent    environment:      - <span class="token assign-left variable">TZ</span><span class="token operator">=</span>Asia/Shanghai      - <span class="token assign-left variable">QB_WEBUI_PORT</span><span class="token operator">=</span><span class="token number">8989</span>      - <span class="token assign-left variable">QB_EE_BIN</span><span class="token operator">=</span>false      - <span class="token assign-left variable">QB_TRACKERS_UPDATE_AUTO</span><span class="token operator">=</span>true      - <span class="token assign-left variable"><span class="token environment constant">UID</span></span><span class="token operator">=</span><span class="token number">1000</span>      - <span class="token assign-left variable">GID</span><span class="token operator">=</span><span class="token number">1000</span>      - <span class="token assign-left variable">UMASK</span><span class="token operator">=</span>022    volumes:      - /root/qbittorrent/config:/config      - /mnt/nas_wd_4t_1:/mnt/nas_wd_4t_1    ports:      - <span class="token number">6881</span>:6881      - <span class="token number">8989</span>:8989      - <span class="token number">6881</span>:6881/udp    restart: unless-stopped<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考<a href="nevinee/qbittorrent%E5%AE%98%E6%96%B9%E9%A1%B5%E9%9D%A2">nevinee&#x2F;qbittorrent官方页面</a>里的docker compose文件</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"2.0"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">qbittorrent</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> nevinee/qbittorrent  <span class="token comment"># 如想参与测试工作可以指定nevinee/qbittorrent:unstable，如想使用集成了iyuu的版本请指定nevinee/qbittorrent:iyuu</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> qbittorrent    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">tty</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> bridge    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> qbitorrent    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/data      <span class="token comment"># 配置保存目录</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>          <span class="token comment"># 下面未列出的其他环境变量请根据环境变量清单自行添加</span>      <span class="token punctuation">-</span> WEBUI_PORT=8080   <span class="token comment"># WEBUI控制端口，可自定义</span>      <span class="token punctuation">-</span> BT_PORT=34567     <span class="token comment"># BT监听端口，可自定义</span>      <span class="token punctuation">-</span> PUID=1000         <span class="token comment"># 输入id -u可查询，群晖必须改</span>      <span class="token punctuation">-</span> PGID=100          <span class="token comment"># 输入id -g可查询，群晖必须改</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8080<span class="token punctuation">:</span><span class="token number">8080</span>        <span class="token comment"># 冒号左右一致，必须同WEBUI_PORT一样，本文件中的3个8080要改一起改</span>      <span class="token punctuation">-</span> 34567<span class="token punctuation">:</span><span class="token number">34567</span>      <span class="token comment"># 冒号左右一致，必须同BT_PORT一样，本文件中的5个34567要改一起改</span>      <span class="token punctuation">-</span> 34567<span class="token punctuation">:</span>34567/udp  <span class="token comment"># 冒号左右一致，必须同BT_PORT一样，本文件中的5个34567要改一起改</span>      <span class="token comment">#- 8787:8787       # 如使用的是nevinee/qbittorrent:iyuu标签，请解除本行注释</span>    <span class="token comment">#security_opt:       # armv7设备请解除本行和下一行的注释</span>      <span class="token comment">#- seccomp=unconfined</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到如下成品：</p><ul><li>映射下载的文件夹</li><li>添加企业微信机器人。其中的web url可以参考<a href="https://developer.work.weixin.qq.com/document/path/91770">群机器人配置说明</a>，只需在一个已有群里里添加机器人，即可获得</li><li>添加爱语飞飞，申请很简单，参考<a href="http://iyuu.cn/">这里</a></li><li>添加python</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"2.0"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">qbittorrent</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> nevinee/qbittorrent<span class="token punctuation">:</span>latest<span class="token punctuation">-</span>iyuu     <span class="token key atrule">container_name</span><span class="token punctuation">:</span> qbittorrent    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">tty</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> bridge    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> qbitorrent    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> /root/qbittorrent/data<span class="token punctuation">:</span>/data      <span class="token punctuation">-</span> /mnt/nas_wd_4t_1<span class="token punctuation">:</span>/mnt/nas_wd_4t_1    <span class="token key atrule">environment</span><span class="token punctuation">:</span>               <span class="token punctuation">-</span> WEBUI_PORT=8080       <span class="token punctuation">-</span> BT_PORT=34567         <span class="token punctuation">-</span> PUID=0             <span class="token punctuation">-</span> PGID=0      <span class="token punctuation">-</span> INSTALL_PYTHON=true      <span class="token punctuation">-</span> IYUU_TOKEN=<span class="token punctuation">...</span> <span class="token comment"># mask</span>      <span class="token punctuation">-</span> WORK_WECHAT_BOT_KEY=<span class="token comment">#### #mask</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8080<span class="token punctuation">:</span><span class="token number">8080</span>             <span class="token punctuation">-</span> 34567<span class="token punctuation">:</span><span class="token number">34567</span>            <span class="token punctuation">-</span> 34567<span class="token punctuation">:</span>34567/udp        <span class="token punctuation">-</span> 8787<span class="token punctuation">:</span><span class="token number">8787</span>       <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="分类配置"><a href="#分类配置" class="headerlink" title="分类配置"></a>分类配置</h3><p>参考<a href="https://blog.17lai.site/posts/bb600b4b/#qbittorrent%E4%BD%BF%E7%94%A8%E8%AE%BE%E7%BD%AE">https://blog.17lai.site/posts/bb600b4b/#qbittorrent%E4%BD%BF%E7%94%A8%E8%AE%BE%E7%BD%AE</a></p><p><img src="/2022/06/26/pve-all/image-20220904003950622.png" alt="image-20220904003950622"></p><p>在下载目录新建两个（or多个）文件夹，分别与标签对应</p><p><img src="/2022/06/26/pve-all/image-20220904004106961.png" alt="image-20220904004106961"></p><p><img src="/2022/06/26/pve-all/image-20220904004413045.png" alt="image-20220904004413045"></p><p><img src="/2022/06/26/pve-all/image-20220904004455764.png" alt="image-20220904004455764"></p><p><img src="/2022/06/26/pve-all/image-20220904004507778.png" alt="image-20220904004507778"></p><h3 id="豆瓣配置"><a href="#豆瓣配置" class="headerlink" title="豆瓣配置"></a>豆瓣配置</h3><p>参考<a href="https://post.smzdm.com/p/ao9epg4m/">https://post.smzdm.com/p/ao9epg4m/</a></p><p><img src="/2022/06/26/pve-all/image-20220904011214341.png" alt="image-20220904011214341"></p><h2 id="jackett"><a href="#jackett" class="headerlink" title="jackett"></a>jackett</h2><p>直接安装<a href="https://github.com/jxxghp/nas-tools/wiki/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B">nas-tool</a>的安装教程，参考jackett官方镜像<a href="https://hub.docker.com/r/linuxserver/jackett">https://hub.docker.com/r/linuxserver/jackett</a></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"2.1"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">jackett</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> lscr.io/linuxserver/jackett<span class="token punctuation">:</span>latest    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> jackett    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> PUID=1000      <span class="token punctuation">-</span> PGID=1000      <span class="token punctuation">-</span> TZ=Europe/London      <span class="token punctuation">-</span> AUTO_UPDATE=true <span class="token comment">#optional</span>      <span class="token punctuation">-</span> RUN_OPTS=&lt;run options here<span class="token punctuation">></span> <span class="token comment">#optional</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> &lt;path to data<span class="token punctuation">></span><span class="token punctuation">:</span>/config      <span class="token punctuation">-</span> &lt;path to blackhole<span class="token punctuation">></span><span class="token punctuation">:</span>/downloads    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 9117<span class="token punctuation">:</span><span class="token number">9117</span>    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考官方的compose文件，得到如下的<code>compose.yml</code></p><ul><li>所谓的<code>blackhole</code>，指的是jackett刮削得到的torrent种子存放目录，直接和qbitorrent的共享即可</li><li><code>PGID</code> <code>PUID</code>设置：参考这一段，直接用root权限即可</li></ul><p><img src="/2022/06/26/pve-all/image-20220903172901511.png" alt="image-20220903172901511"></p><p><img src="/2022/06/26/pve-all/image-20220903172853051.png" alt="image-20220903172853051"></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"2.1"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">jackett</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> lscr.io/linuxserver/jackett<span class="token punctuation">:</span>latest    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> jackett    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> PUID=0      <span class="token punctuation">-</span> PGID=      <span class="token punctuation">-</span> TZ=Asia/Shanghai      <span class="token punctuation">-</span> AUTO_UPDATE=true <span class="token comment">#optional</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> /root/jackett/config<span class="token punctuation">:</span>/config      <span class="token punctuation">-</span> /mnt/nas_wd_4t_1/downloads/qbitorrent_download/torrent<span class="token punctuation">:</span>/downloads    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 9117<span class="token punctuation">:</span><span class="token number">9117</span>    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ChineseSubFinder"><a href="#ChineseSubFinder" class="headerlink" title="ChineseSubFinder"></a>ChineseSubFinder</h2><p>参考 <a href="https://github.com/allanpk716/ChineseSubFinder/blob/master/docker/readme.md">https://github.com/allanpk716/ChineseSubFinder/blob/master/docker/readme.md</a></p><p>根据参考yml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">chinesesubfinder</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> allanpk716/chinesesubfinder<span class="token punctuation">:</span>latest    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./config<span class="token punctuation">:</span>/config  <span class="token comment"># 冒号左边请修改为你想在主机上保存配置、日志等文件的路径</span>      <span class="token punctuation">-</span> ./media<span class="token punctuation">:</span>/media    <span class="token comment"># 请修改为你的媒体目录，冒号右边可以改成你方便记忆的目录，多个媒体目录需要分别映射进来</span>      <span class="token punctuation">-</span> ./browser<span class="token punctuation">:</span>/root/.cache/rod/browser    <span class="token comment"># 容器重启后无需再次下载 chrome，除非 go-rod 更新</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> PUID=1026         <span class="token comment"># uid</span>      <span class="token punctuation">-</span> PGID=100          <span class="token comment"># gid</span>      <span class="token punctuation">-</span> PERMS=true        <span class="token comment"># 是否重设/media权限</span>      <span class="token punctuation">-</span> TZ=Asia/Shanghai  <span class="token comment"># 时区</span>      <span class="token punctuation">-</span> UMASK=022         <span class="token comment"># 权限掩码</span>    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> bridge    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> chinesesubfinder    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> chinesesubfinder    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 19035<span class="token punctuation">:</span><span class="token number">19035</span>  <span class="token comment"># 从0.20.0版本开始，通过webui来设置</span>      <span class="token punctuation">-</span> 19037<span class="token punctuation">:</span><span class="token number">19037</span>  <span class="token comment"># webui 的视频列表读取图片用，务必设置不要暴露到外网</span>    <span class="token key atrule">logging</span><span class="token punctuation">:</span>        <span class="token key atrule">driver</span><span class="token punctuation">:</span> <span class="token string">"json-file"</span>        <span class="token key atrule">options</span><span class="token punctuation">:</span>          <span class="token key atrule">max-size</span><span class="token punctuation">:</span> <span class="token string">"100m"</span> <span class="token comment"># 限制docker控制台日志大小，可自行调整</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到成品：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">chinesesubfinder</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> allanpk716/chinesesubfinder<span class="token punctuation">:</span>latest    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> /root/ChineseSubFinder/config<span class="token punctuation">:</span>/config      <span class="token punctuation">-</span> /mnt/nas_wd_4t_1/videos<span class="token punctuation">:</span>/videos      <span class="token punctuation">-</span> /root/ChineseSubFinder/browser<span class="token punctuation">:</span>/root/.cache/rod/browser       <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> PUID=0               <span class="token punctuation">-</span> PGID=0                <span class="token punctuation">-</span> PERMS=true              <span class="token punctuation">-</span> TZ=Asia/Shanghai        <span class="token punctuation">-</span> UMASK=022            <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> bridge    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> chinesesubfinder    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> chinesesubfinder    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 19035<span class="token punctuation">:</span><span class="token number">19035</span>        <span class="token punctuation">-</span> 19037<span class="token punctuation">:</span><span class="token number">19037</span>      <span class="token key atrule">logging</span><span class="token punctuation">:</span>        <span class="token key atrule">driver</span><span class="token punctuation">:</span> <span class="token string">"json-file"</span>        <span class="token key atrule">options</span><span class="token punctuation">:</span>          <span class="token key atrule">max-size</span><span class="token punctuation">:</span> <span class="token string">"100m"</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="nas-tools-强烈推荐，神器！"><a href="#nas-tools-强烈推荐，神器！" class="headerlink" title="nas-tools(强烈推荐，神器！)"></a>nas-tools(强烈推荐，神器！)</h2><p>参考：</p><ol><li><a href="https://github.com/jxxghp/nas-tools/wiki/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B">wiki安装教程</a>，包括了各种额外的连接！强烈推荐</li><li><a href="https://post.smzdm.com/p/a7nxrz2g/%E5%BC%A0%E5%A4%A7%E5%A6%88%E4%B8%8A%E7%9A%84%E6%95%99%E7%A8%8B%EF%BC%8C%E5%BE%88%E8%AF%A6%E7%BB%86">https://post.smzdm.com/p/a7nxrz2g/张大妈上的教程，很详细</a></li><li><a href="https://post.smzdm.com/p/arqgoqp7/%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%BC%A0%E5%A4%A7%E5%A6%88%E7%9A%84%E6%95%99%E7%A8%8B%EF%BC%8C%E4%B9%9F%E5%BE%88%E8%AF%A6%E7%BB%86">https://post.smzdm.com/p/arqgoqp7/另一个张大妈的教程，也很详细</a></li><li><a href="https://blog.17lai.site/posts/9912bd5d/">使用jeckett,sonarr,iyuu,qt,emby打造全自动追剧流程</a>，安装wiki里的学习资源，<strong>强烈推荐看看！！！</strong>，对各种工具都介绍得很详细，方便直接按图上手</li></ol><p>参考下面的<code>compose.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.4"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">nastools</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> jxxghp/nas<span class="token punctuation">-</span>tools<span class="token punctuation">:</span>latest    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> nastools    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> nastools    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 3000<span class="token punctuation">:</span><span class="token number">3000</span>        <span class="token comment"># 默认的webui控制端口</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> $<span class="token punctuation">&#123;</span>USERDIR<span class="token punctuation">&#125;</span>/nastools/config<span class="token punctuation">:</span>/config   <span class="token comment"># 冒号左边请修改为你想保存配置的路径</span>      <span class="token punctuation">-</span> $<span class="token punctuation">&#123;</span>USERDIR<span class="token punctuation">&#125;</span>/<span class="token punctuation">[</span>path<span class="token punctuation">]</span>/Download<span class="token punctuation">:</span>/share/Download <span class="token comment"># 映射数据目录</span>      <span class="token comment">#- /你的媒体目录:/你想设置的容器内能见到的目录   # 媒体目录，多个目录需要分别映射进来</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> PUID=$<span class="token punctuation">&#123;</span>PUID<span class="token punctuation">&#125;</span>      <span class="token punctuation">-</span> PGID=$<span class="token punctuation">&#123;</span>PGID<span class="token punctuation">&#125;</span>      <span class="token punctuation">-</span> TZ=$<span class="token punctuation">&#123;</span>TZ<span class="token punctuation">&#125;</span>      <span class="token punctuation">-</span> UMASK=022 <span class="token comment"># 掩码权限，默认000，可以考虑设置为022</span>     <span class="token comment">#- REPO_URL=https://ghproxy.com/https://github.com/jxxghp/nas-tools.git  # 访问github困难的用户，可以取消本行注释，用以加速访问github</span>    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.4"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">nastools</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> jxxghp/nas<span class="token punctuation">-</span>tools<span class="token punctuation">:</span>latest    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> nastools    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> nastools    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 3000<span class="token punctuation">:</span><span class="token number">3000</span>            <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> /root/nas<span class="token punctuation">-</span>tools/config<span class="token punctuation">:</span>/config         <span class="token punctuation">-</span> /mnt/nas_wd_4t_1/downloads<span class="token punctuation">:</span>/share/Download       <span class="token punctuation">-</span> /mnt/nas_wd_4t_1/videos<span class="token punctuation">:</span>/videos    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> PUID=0      <span class="token punctuation">-</span> PGID=0      <span class="token punctuation">-</span> TZ=Asia/Shanghai      <span class="token punctuation">-</span> UMASK=022     <span class="token key atrule">restart</span><span class="token punctuation">:</span> always <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="LXC-xray"><a href="#LXC-xray" class="headerlink" title="LXC xray"></a>LXC xray</h1><h1 id="LXC-clash"><a href="#LXC-clash" class="headerlink" title="LXC clash"></a>LXC clash</h1><p>需要用特权容器，否则没有<code>iptables</code></p><h2 id="卡死在这个界面"><a href="#卡死在这个界面" class="headerlink" title="卡死在这个界面"></a>卡死在这个界面</h2><p><img src="/2022/06/26/pve-all/image-20220706010434212.png" alt="image-20220706010434212"></p><p>参考 <a href="https://github.com/vernesong/OpenClash/issues/1591">https://github.com/vernesong/OpenClash/issues/1591</a></p><p>切换为官方皮肤之后，发现实际是 外部控制设置</p><p><img src="/2022/06/26/pve-all/image-20220706011634834.png" alt="image-20220706011634834"></p><p>设置为当前LXC容器地址即可</p><h1 id="LXC-容器"><a href="#LXC-容器" class="headerlink" title="LXC 容器"></a>LXC 容器</h1><h2 id="新建特权lxc容器"><a href="#新建特权lxc容器" class="headerlink" title="新建特权lxc容器"></a>新建特权lxc容器</h2><p>注意设为特权（去除选择无特权，即有特权）。还可以把当前电脑默认的ssh公钥放上来</p><p><img src="/2022/06/26/pve-all/image-20220703151009100.png" alt="image-20220703151009100"></p><p>IP最好固定下来，网关填写路由器地址即可</p><p><img src="/2022/06/26/pve-all/image-20220703110344665.png" alt="image-20220703110344665"></p><p>最后再把这些选项都勾上，全部开启</p><p><img src="/2022/06/26/pve-all/image-20220703111131175.png" alt="image-20220703111131175"></p><p>注意！！实测用debian做容器更好！！</p><p><img src="/2022/06/26/pve-all/image-20220703150636521.png" alt="image-20220703150636521"></p><h3 id="中文乱码-1"><a href="#中文乱码-1" class="headerlink" title="中文乱码"></a>中文乱码</h3><p>参考<a href="https://lala.im/8090.html">https://lala.im/8090.html</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dpkg-reconfigure locales<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按空格确定</p><p><img src="/2022/06/26/pve-all/image-20220703185806837.png" alt="image-20220703185806837"></p><h2 id="显卡直通给LXC容器硬件"><a href="#显卡直通给LXC容器硬件" class="headerlink" title="显卡直通给LXC容器硬件"></a>显卡直通给LXC容器硬件</h2><p>参考</p><ol><li><a href="https://blog.csdn.net/weixin_38208216/article/details/122145751">https://blog.csdn.net/weixin_38208216/article/details/122145751</a></li><li><a href="https://blog.timzhong.top/2020/10/13/jellyfin-in-lxc/#%E9%87%8D%E5%A4%B4%E6%88%8F%EF%BC%8C%E9%85%8D%E7%BD%AE%E6%98%BE%E5%8D%A1%E6%8C%82%E8%BD%BD">https://blog.timzhong.top/2020/10/13/jellyfin-in-lxc/#%E9%87%8D%E5%A4%B4%E6%88%8F%EF%BC%8C%E9%85%8D%E7%BD%AE%E6%98%BE%E5%8D%A1%E6%8C%82%E8%BD%BD</a></li><li><strong>jellyfin的官方操作，非常重要</strong><a href="https://jellyfin.org/docs/general/administration/hardware-acceleration.html#va-api-and-qsv-hardware-acceleration-on-lxc-on-proxmox">https://jellyfin.org/docs/general/administration/hardware-acceleration.html#va-api-and-qsv-hardware-acceleration-on-lxc-on-proxmox</a></li></ol><h3 id="在pve宿主机上安装驱动"><a href="#在pve宿主机上安装驱动" class="headerlink" title="在pve宿主机上安装驱动"></a>在pve宿主机上安装驱动</h3><p>直接<code>apt install intel-media-va-driver-non-free</code>可能会报错，原因是没有对应的源</p><p><img src="/2022/06/26/pve-all/image-20220703003356773.png" alt="image-20220703003356773"></p><p>参考</p><ol><li><a href="https://zhuanlan.zhihu.com/p/385401945">https://zhuanlan.zhihu.com/p/385401945</a></li></ol><p>先去<a href="https://link.zhihu.com/?target=https://software.intel.com/content/www/us/en/develop/topics/graphics-linux-drivers.html">General Purpose GPU Drivers for Linux* Operating Systems</a>，按照教程一步步来</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lspci <span class="token parameter variable">-nn</span> <span class="token operator">|</span> <span class="token function">grep</span> VGA<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220703004411938.png" alt="image-20220703004411938"></p><p><img src="/2022/06/26/pve-all/image-20220703004434448.png" alt="image-20220703004434448"></p><p>查看到对应的核显直接用intel源，可能有问题</p><p><img src="/2022/06/26/pve-all/image-20220703004515037.png" alt="image-20220703004515037"></p><p>但实测没所谓。后退到前一页，点击ubuntu的安装方法， 按照<a href="https://dgpu-docs.intel.com/installation-guides/ubuntu/ubuntu-focal.html">Ubuntu* 20.04 (focal)</a>的安装方法来</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token parameter variable">-y</span> gpg-agent <span class="token function">wget</span><span class="token function">wget</span> <span class="token parameter variable">-qO</span> - https://repositories.intel.com/graphics/intel-graphics.key <span class="token operator">|</span>  <span class="token function">sudo</span> apt-key <span class="token function">add</span> -<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> software-properties-common<span class="token function">sudo</span> apt-add-repository <span class="token punctuation">\</span>  <span class="token string">'deb [arch=amd64] https://repositories.intel.com/graphics/ubuntu focal main'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再安装所有应用。实测速度比较慢，需要用代理</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> proxychains4 <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token punctuation">\</span>  intel-opencl-icd <span class="token punctuation">\</span>  intel-level-zero-gpu level-zero <span class="token punctuation">\</span>  intel-media-va-driver-non-free libmfx1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再按照参考1的教程安装一遍</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libmfx1 libmfx-tools<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libva-dev libmfx-dev intel-media-va-driver-non-free<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> vainfo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>按照官方教程</p><p><img src="/2022/06/26/pve-all/image-20220703005251022.png" alt="image-20220703005251022"></p><p>可以看到root是并没有权限的</p><p><img src="/2022/06/26/pve-all/image-20220703005305427.png" alt="image-20220703005305427"></p><p>因此需要用到这一步</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> gpasswd <span class="token parameter variable">-a</span> <span class="token variable">$&#123;<span class="token environment constant">USER</span>&#125;</span> rendernewgrp render<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>最后在安装vainfo，但发现并不行</strong>，原因参考知乎里说的，以及这个<a href="https://askubuntu.com/questions/1395620/chrome-libva-error-usr-lib-x86-64-linux-gnu-dri-ihd-drv-video-so-init-failed">https://askubuntu.com/questions/1395620/chrome-libva-error-usr-lib-x86-64-linux-gnu-dri-ihd-drv-video-so-init-failed</a></p><p><img src="/2022/06/26/pve-all/image-20220703011050663.png" alt="image-20220703011050663"></p><p><img src="/2022/06/26/pve-all/image-20220703011206252.png" alt="image-20220703011206252"></p><p>发现pve早已经安装了所需的驱动i965-va-driver。<strong>所以只需要按照vainfo</strong></p><p><strong>所以需要重新把所有驱动都卸载了</strong>，参考<a href="https://blog.csdn.net/get_set/article/details/51276609">https://blog.csdn.net/get_set/article/details/51276609</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 删除软件及其配置文件</span><span class="token function">apt-get</span> <span class="token parameter variable">--purge</span> remove <span class="token operator">&lt;</span>package<span class="token operator">></span><span class="token comment"># 删除没用的依赖包</span><span class="token function">apt-get</span> autoremove <span class="token operator">&lt;</span>package<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="合理步骤"><a href="#合理步骤" class="headerlink" title="合理步骤"></a>合理步骤</h4><ul><li>按照intel的页面添加源</li><li>仅仅只按照vainfo</li><li>根据<a href="https://forum.manjaro.org/t/va-api-driver-broken/30529">VA-API driver broken</a>以及知乎，在bashrc末尾添加<code>LIBVA_DRIVER_NAME=i965</code></li></ul><p>重新测试vainfo，发现无error正确输出</p><p><img src="/2022/06/26/pve-all/image-20220703011451062.png" alt="image-20220703011451062"></p><h4 id="关于4代架构的cpu是否可以使用ihd（即intel-media-driver"><a href="#关于4代架构的cpu是否可以使用ihd（即intel-media-driver" class="headerlink" title="关于4代架构的cpu是否可以使用ihd（即intel-media-driver)"></a>关于4代架构的cpu是否可以使用ihd（即<code>intel-media-driver</code>)</h4><p>参考<a href="https://wiki.archlinux.org/title/Hardware_video_acceleration_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/title/Hardware_video_acceleration_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p><p><img src="/2022/06/26/pve-all/image-20220903010234914.png" alt="image-20220903010234914"></p><p><strong>可以看到g3220这种haswell架构的并不能使用<code>intel-media-driver</code>，即不支持iHD，也即无法使用qsv硬解！</strong>，所以<strong>只能用i965的驱动，使用vaapi硬解</strong></p><h3 id="配置lxc容器的conf（关键步骤！！看这里！！）"><a href="#配置lxc容器的conf（关键步骤！！看这里！！）" class="headerlink" title="配置lxc容器的conf（关键步骤！！看这里！！）"></a>配置lxc容器的conf（关键步骤！！看这里！！）</h3><p>按照官方教程中的方法</p><p><img src="/2022/06/26/pve-all/image-20220703111436135.png" alt="image-20220703111436135"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lxc.cgroup2.devices.allow: c <span class="token number">226</span>:0 rwmlxc.cgroup2.devices.allow: c <span class="token number">226</span>:128 rwmlxc.mount.entry: /dev/dri/card0 dev/dri/card0 none bind,optional,create<span class="token operator">=</span>filelxc.mount.entry: /dev/dri/renderD128 dev/dri/renderD128 none bind,optional,create<span class="token operator">=</span>file<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220703111646408.png" alt="image-20220703111646408"></p><p>复制进来保存</p><h3 id="在lxc容器中安装驱动并配置"><a href="#在lxc容器中安装驱动并配置" class="headerlink" title="在lxc容器中安装驱动并配置"></a>在lxc容器中安装驱动并配置</h3><h4 id="前置设置"><a href="#前置设置" class="headerlink" title="前置设置"></a>前置设置</h4><p>首先登陆进去后调整ssh配置，允许root登陆</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vi</span> /etc/ssh/sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220703112041725.png" alt="image-20220703112041725"></p><p>保存后重启ssh服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> <span class="token function">ssh</span> restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="更换源"><a href="#更换源" class="headerlink" title="更换源"></a>更换源</h5><ul><li><del>ubuntu</del>，<strong>不推荐用ubuntu，docker可能有问题</strong></li></ul><p>首先进来更换源，参考<a href="https://mirrors.ustc.edu.cn/help/ubuntu.html">https://mirrors.ustc.edu.cn/help/ubuntu.html</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/archive.ubuntu.com/mirrors.ustc.edu.cn/g'</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220703125502472.png" alt="image-20220703125502472"></p><p>然后也是全部更新一遍</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> dist-upgrade <span class="token parameter variable">-y</span> <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">vim</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>debian</li></ul><p>Debian的话类似 <a href="https://mirrors.ustc.edu.cn/help/debian.html">https://mirrors.ustc.edu.cn/help/debian.html</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s|^deb http://ftp.debian.org|deb https://mirrors.ustc.edu.cn|g'</span> /etc/apt/sources.list<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s|^deb http://security.debian.org|deb https://mirrors.ustc.edu.cn/debian-security|g'</span> /etc/apt/sources.list<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/deb.debian.org/mirrors.ustc.edu.cn/g'</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 合并成一条</span><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s|^deb http://ftp.debian.org|deb https://mirrors.ustc.edu.cn|g'</span> /etc/apt/sources.list <span class="token operator">&amp;&amp;</span> <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s|^deb http://security.debian.org|deb https://mirrors.ustc.edu.cn/debian-security|g'</span> /etc/apt/sources.list <span class="token operator">&amp;&amp;</span> <span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">'s/deb.debian.org/mirrors.ustc.edu.cn/g'</span> /etc/apt/sources.list <span class="token operator">&amp;&amp;</span> <span class="token function">cat</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220703150030190.png" alt="image-20220703150030190"></p><p>安装sudo，然后把驱动全部更新一遍</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> dist-upgrade <span class="token parameter variable">-y</span> <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">vim</span> <span class="token function">sudo</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> i965-va-driver vainfo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再配置<code>bashrc</code>,<code>LIBVA_DRIVER_NAME=i965</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">LIBVA_DRIVER_NAME</span><span class="token operator">=</span>i965<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220703125953748.png" alt="image-20220703125953748"></p><p>可以看到已经成功拿到了驱动</p><p><img src="/2022/06/26/pve-all/image-20220703151757436.png" alt="image-20220703151757436"></p><h2 id="安装portainer"><a href="#安装portainer" class="headerlink" title="安装portainer"></a>安装portainer</h2><p>参考：</p><ol><li><a href="https://post.smzdm.com/p/aek7m57k/">https://post.smzdm.com/p/aek7m57k/</a></li><li><a href="https://docs.portainer.io/v/ce-2.9/start/install/server/docker/linux">Portainer官方教程</a>，</li><li><a href="https://docs.docker.com/engine/install/">docker安装官方教程</a></li></ol><h3 id="首先得安装docker"><a href="#首先得安装docker" class="headerlink" title="首先得安装docker"></a>首先得安装docker</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token punctuation">\</span>    ca-certificates <span class="token punctuation">\</span>    <span class="token function">curl</span> <span class="token punctuation">\</span>    gnupg <span class="token punctuation">\</span>    lsb-release<span class="token comment"># Add Docker’s official GPG key:</span><span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/apt/keyrings<span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class="token operator">|</span> <span class="token function">sudo</span> gpg <span class="token parameter variable">--dearmor</span> <span class="token parameter variable">-o</span> /etc/apt/keyrings/docker.gpg<span class="token comment"># Use the following command to set up the repository:</span><span class="token builtin class-name">echo</span> <span class="token punctuation">\</span>  <span class="token string">"deb [arch=<span class="token variable"><span class="token variable">$(</span>dpkg --print-architecture<span class="token variable">)</span></span> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \  <span class="token variable"><span class="token variable">$(</span>lsb_release <span class="token parameter variable">-cs</span><span class="token variable">)</span></span> stable"</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/apt/sources.list.d/docker.list <span class="token operator">></span> /dev/null  <span class="token comment"># Preparation for docker installation</span><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> docker-ce docker-ce-cli containerd.io docker-compose-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看可用的docker版本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-cache</span> madison docker-ce<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220703144105717.png" alt="image-20220703144105717"></p><p>这里选择最新版本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> docker-ce<span class="token operator">=</span><span class="token number">5</span>:20.10.17~3-0~ubuntu-jammy docker-ce-cli<span class="token operator">=</span><span class="token number">5</span>:20.10.17~3-0~ubuntu-jammy containerd.io docker-compose-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可能遇到这个问题  docker: Error response from daemon: AppArmor enabled on system but the docker-default profile could not be loaded: </p><p><img src="/2022/06/26/pve-all/image-20220703144355395.png" alt="image-20220703144355395"></p><p><del>原因：<strong>可能和CT模版是ubuntu有关。因此需要重新更换Debian模板！！！，实测ubuntu20也一样！！！</strong></del></p><p>原因已查明，实测是conf的问题，调整之后就可以了</p><h4 id="更简单的做法（推荐！！直接一键搞定）"><a href="#更简单的做法（推荐！！直接一键搞定）" class="headerlink" title="更简单的做法（推荐！！直接一键搞定）"></a>更简单的做法（推荐！！直接一键搞定）</h4><p>参考 <a href="https://kawsing.gitbook.io/opensystem/andoid-shou-ji/pomoxve/lxc-run-docker">https://kawsing.gitbook.io/opensystem/andoid-shou-ji/pomoxve/lxc-run-docker</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> <span class="token function">curl</span> <span class="token operator">&amp;&amp;</span> <span class="token function">curl</span> <span class="token parameter variable">-sSL</span> https://get.docker.com <span class="token operator">|</span> <span class="token function">sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装好之后，再运行一下helloworld测试一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220703151941065.png" alt="image-20220703151941065"></p><p>最后再把docker compose安装上。参考<a href="https://blog.csdn.net/pushiqiang/article/details/78682323">https://blog.csdn.net/pushiqiang/article/details/78682323</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">curl</span> <span class="token parameter variable">-L</span> https://get.daocloud.io/docker/compose/releases/download/1.25.1/docker-compose-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> <span class="token parameter variable">-s</span><span class="token variable">`</span></span>-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> <span class="token parameter variable">-m</span><span class="token variable">`</span></span> <span class="token parameter variable">-o</span> /usr/local/bin/docker-compose<span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220703152216748.png" alt="image-20220703152216748"></p><h4 id="修改docker镜像源（强烈推荐改一下）"><a href="#修改docker镜像源（强烈推荐改一下）" class="headerlink" title="修改docker镜像源（强烈推荐改一下）"></a>修改docker镜像源（强烈推荐改一下）</h4><p>参考<a href="https://mirrors.ustc.edu.cn/help/dockerhub.html">https://mirrors.ustc.edu.cn/help/dockerhub.html</a></p><p><img src="/2022/06/26/pve-all/image-20220703172036760.png" alt="image-20220703172036760"></p><p>在<code>/etc/docker/daemon.json</code>修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">&#123;</span>  <span class="token string">"registry-mirrors"</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token string">"https://docker.mirrors.ustc.edu.cn/"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>重启服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl restart <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="20220828-update-ubuntu-22安装docker全流程，强烈建议用ubuntu来作为ct模版！！"><a href="#20220828-update-ubuntu-22安装docker全流程，强烈建议用ubuntu来作为ct模版！！" class="headerlink" title="20220828 update ubuntu 22安装docker全流程，强烈建议用ubuntu来作为ct模版！！"></a>20220828 update ubuntu 22安装docker全流程，强烈建议用ubuntu来作为ct模版！！</h3><p>参考：</p><ol><li><a href="https://forum.proxmox.com/threads/run-docker-inside-lxc.112004/post-483176">https://forum.proxmox.com/threads/run-docker-inside-lxc.112004/post-483176</a> 完全就是一模一样的问题！！按照其中这个老哥的回答就能解决</li></ol><p>按照下面的配置，默认是<strong>特权容器+显卡直通</strong>！！</p><p>核心步骤：</p><ul><li>配置特权容器+所有选项开启</li></ul><p><img src="/2022/06/26/pve-all/image-20220829002752085.png" alt="image-20220829002752085"></p><ul><li>配置conf文件</li></ul><h4 id="新建ubuntu-22的LXC容器"><a href="#新建ubuntu-22的LXC容器" class="headerlink" title="新建ubuntu 22的LXC容器"></a>新建ubuntu 22的LXC容器</h4><p>要点：</p><ul><li>特权容器！！方便直通显卡</li><li>所有功能都开起来</li></ul><p><img src="/2022/06/26/pve-all/image-20220829002837623.png" alt="image-20220829002837623"></p><p>网关这里直接使用了openwrt的虚拟机作为旁路由，<strong>这样该lxc容器里的一切源都不需要更换了</strong></p><p><img src="/2022/06/26/pve-all/image-20220829002846701.png" alt="image-20220829002846701"></p><h4 id="配置conf（核心！！）"><a href="#配置conf（核心！！）" class="headerlink" title="配置conf（核心！！）"></a>配置conf（核心！！）</h4><p>参考参考1</p><p><img src="/2022/06/26/pve-all/image-20220829003034055.png" alt="image-20220829003034055"></p><p>加上显卡直通的配置，最后该lxc容器的conf如下：</p><p><img src="/2022/06/26/pve-all/image-20220829003208753.png" alt="image-20220829003208753"></p><p>核心即下面这段</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 解决AppArmor的问题</span>lxc.apparmor.profile: unconfinedlxc.cap.drop:<span class="token comment"># 显卡直通，来自jellyfin的安装教程</span>lxc.cgroup2.devices.allow: c <span class="token number">226</span>:0 rwmlxc.cgroup2.devices.allow: c <span class="token number">226</span>:128 rwmlxc.mount.entry: /dev/dri/card0 dev/dri/card0 none bind,optional,create<span class="token operator">=</span>filelxc.mount.entry: /dev/dri/renderD128 dev/dri/renderD128 none bind,optional,create<span class="token operator">=</span>file<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其余的和原来的配置相同</p><h3 id="安装Portainer"><a href="#安装Portainer" class="headerlink" title="安装Portainer"></a>安装Portainer</h3><p>参考：<a href="https://docs.portainer.io/start/install/server/docker/linux%E4%BB%A5%E5%8F%8Ahttps://docs.portainer.io/start/upgrade%EF%BC%88%E5%AE%89%E8%A3%85%E7%9A%84%E5%91%BD%E4%BB%A4%E4%B8%BB%E8%A6%81%E6%98%AF%E5%90%8E%E9%9D%A2%EF%BC%89">https://docs.portainer.io/start/install/server/docker/linux以及https://docs.portainer.io/start/upgrade（安装的命令主要是后面）</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> volume create portainer_data<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">8000</span>:8000 <span class="token parameter variable">-p</span> <span class="token number">9443</span>:9443 <span class="token parameter variable">--name</span><span class="token operator">=</span>portainer <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">-v</span> /var/run/docker.sock:/var/run/docker.sock <span class="token parameter variable">-v</span> portainer_data:/data portainer/portainer-ce:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>docker ps</code>查看情况</p><p><img src="/2022/06/26/pve-all/image-20220703152710439.png" alt="image-20220703152710439"></p><p>用<code>https://xxx.xxx.xx.xx:9443</code>登陆</p><p><img src="/2022/06/26/pve-all/image-20220703152816055.png" alt="image-20220703152816055"></p><h3 id="docker问题"><a href="#docker问题" class="headerlink" title="docker问题"></a>docker问题</h3><h4 id="docker-exec-it-lt-container-name-gt-bin-bash执行失败"><a href="#docker-exec-it-lt-container-name-gt-bin-bash执行失败" class="headerlink" title="docker exec -it &lt;container-name&gt; /bin/bash执行失败"></a><code>docker exec -it &lt;container-name&gt; /bin/bash</code>执行失败</h4><p>提示<code>OCI runtime exec failed: exec failed: unable to start container process: open /dev/pts/0: operation not permitted: unknown</code></p><p>参考：<a href="https://askubuntu.com/questions/1424317/docker-20-10-ubuntu-22-04-oci-runtime-exec-failed">https://askubuntu.com/questions/1424317/docker-20-10-ubuntu-22-04-oci-runtime-exec-failed</a></p><p>实测应该是版本不对，失败了，重新安装低版本的就好</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token assign-left variable">containerd.io</span><span class="token operator">=</span><span class="token number">1.6</span>.6-1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><h3 id="挂载nfs"><a href="#挂载nfs" class="headerlink" title="挂载nfs"></a>挂载nfs</h3><p>参考</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> nfs-common<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建本地文件夹并设置权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mnt/nas_wd_4t_1 <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> <span class="token parameter variable">-R</span> a+rw /mnt/nas_wd_4t_1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>挂载命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mount</span> <span class="token parameter variable">-t</span> nfs <span class="token number">192.168</span>.68.189:/volume1/nas4t /mnt/nas_wd_4t_1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="设置自动挂载"><a href="#设置自动挂载" class="headerlink" title="设置自动挂载"></a>设置自动挂载</h4><p>参考：</p><ol><li>man page，主要是看看参数的含义 <a href="https://linux.die.net/man/5/nfs">https://linux.die.net/man/5/nfs</a></li><li>不错的教程，还有部分参数的含义，<a href="https://linuxopsys.com/topics/linux-nfs-mount-entry-in-fstab-with-example">https://linuxopsys.com/topics/linux-nfs-mount-entry-in-fstab-with-example</a></li></ol><p>基本的范式是</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Server:/path/to/export /local_mountpoint nfs <span class="token operator">&lt;</span>options<span class="token operator">></span> <span class="token number">0</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>所以这里可以是</p><ul><li><code>timeo</code>参数不设置，默认是60sec的等待时间</li><li></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">192.168</span>.68.189:/volume1/nas4t /mnt/nas_wd_4t_1 nfs rw,hard,intr <span class="token number">0</span> <span class="token number">0</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑<code> /etc/fstab</code></p><p><img src="/2022/06/26/pve-all/image-20220703220334055.png" alt="image-20220703220334055"></p><h1 id="Portainer使用"><a href="#Portainer使用" class="headerlink" title="Portainer使用"></a>Portainer使用</h1><h2 id="基础设置"><a href="#基础设置" class="headerlink" title="基础设置"></a>基础设置</h2><h3 id="设置dockerhub账号"><a href="#设置dockerhub账号" class="headerlink" title="设置dockerhub账号"></a>设置dockerhub账号</h3><p><img src="/2022/06/26/pve-all/image-20220703161123780.png" alt="image-20220703161123780"></p><p>不设置的话，一天只有一百次</p><p>先去<a href="https://hub.docker.com/signup%E6%B3%A8%E5%86%8C%E8%B4%A6%E5%8F%B7">https://hub.docker.com/signup注册账号</a></p><p><img src="/2022/06/26/pve-all/image-20220703161839792.png" alt="image-20220703161839792"></p><p>然后输入账号密码即可</p><h3 id="新增中科大dockerhub源"><a href="#新增中科大dockerhub源" class="headerlink" title="新增中科大dockerhub源"></a>新增中科大dockerhub源</h3><p>直接添加<code>https://docker.mirrors.ustc.edu.cn/</code>即可</p><p><img src="/2022/06/26/pve-all/image-20220703172242287.png" alt="image-20220703172242287"></p><h2 id="jellyfin（不推荐下面的特供版，实测都会硬解失败）建议直接参考docker-jellyfin"><a href="#jellyfin（不推荐下面的特供版，实测都会硬解失败）建议直接参考docker-jellyfin" class="headerlink" title="jellyfin（不推荐下面的特供版，实测都会硬解失败）建议直接参考docker jellyfin"></a><del>jellyfin（不推荐下面的特供版，实测都会硬解失败）</del>建议直接参考<a href="#jellyfin%EF%BC%88%E6%9B%B4%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8%E8%BF%99%E4%B8%AA%EF%BC%89">docker jellyfin</a></h2><h3 id="jellyfin-docker版本选择"><a href="#jellyfin-docker版本选择" class="headerlink" title="jellyfin docker版本选择"></a><del>jellyfin docker版本选择</del></h3><p>参考自<a href="https://post.smzdm.com/p/ar65vrp7/">https://post.smzdm.com/p/ar65vrp7/</a></p><p><img src="/2022/06/26/pve-all/image-20220703212637080.png" alt="image-20220703212637080"></p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>参考：</p><ol><li>官方docker教程<a href="https://jellyfin.org/docs/general/administration/installing.html">https://jellyfin.org/docs/general/administration/installing.html</a></li><li>张大妈上很不错的教程<a href="https://post.smzdm.com/p/avxe2p87/">https://post.smzdm.com/p/avxe2p87/</a></li><li>稍微有点旧<a href="https://post.smzdm.com/p/andr9g9p/">https://post.smzdm.com/p/andr9g9p/</a></li></ol><p><del>这里选择的是中国特供版 <a href="https://registry.hub.docker.com/r/nyanmisaka/jellyfin/">https://registry.hub.docker.com/r/nyanmisaka/jellyfin/</a></del>实测不是很好用</p><p>然后基于官方教程</p><p><img src="/2022/06/26/pve-all/image-20220703165306864.png" alt="image-20220703165306864"></p><p>创建两个文件夹</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> jellyfin/config <span class="token function">mkdir</span> jellyfin/cache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="特供版"><a href="#特供版" class="headerlink" title="特供版"></a><del>特供版</del></h4><p>拉取最新的镜像，注意更换源，或者直接在portainer界面拉</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> pull nyanmisaka/jellyfin:latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>根据官方参数进行修改，以及张大妈上的教程，进行修改</p><p><img src="/2022/06/26/pve-all/image-20220703172554992.png" alt="image-20220703172554992"></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.5"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">jellyfin</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> docker.mirrors.ustc.edu.cn/nyanmisaka/jellyfin    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> jellyfin    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> <span class="token string">"host"</span>    <span class="token key atrule">user</span><span class="token punctuation">:</span> root    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> /root/jellyfin/config<span class="token punctuation">:</span>/config      <span class="token punctuation">-</span> /root/jellyfin/cache<span class="token punctuation">:</span>/cache      <span class="token punctuation">-</span> /mnt/nas_wd_4t_1<span class="token punctuation">:</span>/mnt/nas_wd_4t_1    <span class="token key atrule">restart</span><span class="token punctuation">:</span> <span class="token string">"unless-stopped"</span>    <span class="token key atrule">devices</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> /dev/dri/renderD128<span class="token punctuation">:</span>/dev/dri/renderD128      <span class="token punctuation">-</span> /dev/dri/card0<span class="token punctuation">:</span>/dev/dri/card0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="linuxserver版本"><a href="#linuxserver版本" class="headerlink" title="linuxserver版本"></a>linuxserver版本</h4><p>参考：<a href="https://wbsu2003.4everland.app/2021/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96PUID%E5%92%8CPGID/">https://wbsu2003.4everland.app/2021/03/12/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96PUID%E5%92%8CPGID/</a></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"2.1"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">jellyfin</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> docker.mirrors.ustc.edu.cn/linuxserver/jellyfin<span class="token punctuation">:</span>latest    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> jellyfin    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> PUID=1000      <span class="token punctuation">-</span> PGID=1000      <span class="token punctuation">-</span> TZ=Asia/Shanghai      <span class="token punctuation">-</span> JELLYFIN_PublishedServerUrl=192.168.0.5 <span class="token comment">#optional</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> /root/jellyfin/config<span class="token punctuation">:</span>/config      <span class="token punctuation">-</span> /root/jellyfin/cache<span class="token punctuation">:</span>/cache      <span class="token punctuation">-</span> /mnt/nas_wd_4t_1<span class="token punctuation">:</span>/mnt/nas_wd_4t_1    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8096<span class="token punctuation">:</span><span class="token number">8096</span>      <span class="token punctuation">-</span> 8920<span class="token punctuation">:</span><span class="token number">8920</span> <span class="token comment">#optional</span>      <span class="token punctuation">-</span> 7359<span class="token punctuation">:</span>7359/udp <span class="token comment">#optional</span>      <span class="token punctuation">-</span> 1900<span class="token punctuation">:</span>1900/udp <span class="token comment">#optional</span>    <span class="token key atrule">devices</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> /dev/dri<span class="token punctuation">:</span>/dev/dri    <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>PGID和PUID的设置</li></ul><p><img src="/2022/06/26/pve-all/image-20220703213302019.png" alt="image-20220703213302019"></p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>启动后出现下面这种情况，直接把原有的库删了然后就会自动重建了</p><h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p>无论是特供版还是linux-sever版，硬解始终会出问题，所以最后还是用LXC容器实现</p><p><img src="/2022/06/26/pve-all/image-20220703215958088.png" alt="image-20220703215958088"></p><h2 id="升级Portainer"><a href="#升级Portainer" class="headerlink" title="升级Portainer"></a>升级Portainer</h2><p>参考<a href="https://docs.portainer.io/v/ce-2.9/start/upgrade/docker">https://docs.portainer.io/v/ce-2.9/start/upgrade/docker</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> stop portainer<span class="token function">docker</span> <span class="token function">rm</span> portainer<span class="token function">docker</span> pull portainer/portainer-ce:latest <span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">8000</span>:8000 <span class="token parameter variable">-p</span> <span class="token number">9000</span>:9000 <span class="token parameter variable">-p</span> <span class="token number">9443</span>:9443 <span class="token punctuation">\</span>    <span class="token parameter variable">--name</span><span class="token operator">=</span>portainer <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\</span>    <span class="token parameter variable">-v</span> /var/run/docker.sock:/var/run/docker.sock <span class="token punctuation">\</span>    <span class="token parameter variable">-v</span> portainer_data:/data <span class="token punctuation">\</span>    portainer/portainer-ce:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="云映像Cloud-image使用"><a href="#云映像Cloud-image使用" class="headerlink" title="云映像Cloud-image使用"></a>云映像Cloud-image使用</h1><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><p>参考<a href="https://pve.proxmox.com/wiki/Cloud-Init_Support">https://pve.proxmox.com/wiki/Cloud-Init_Support</a></p><h2 id="debian"><a href="#debian" class="headerlink" title="debian"></a>debian</h2><p>参考：</p><ol><li><a href="https://fairysen.com/742.html%EF%BC%8C%E9%9D%9E%E5%B8%B8%E8%AF%A6%E7%BB%86%EF%BC%8C%E4%B8%94%E5%BE%88%E6%96%B0%E5%BE%88%E5%85%A8%EF%BC%8C%E5%BC%BA%E7%83%88%E5%BB%BA%E8%AE%AE">https://fairysen.com/742.html，非常详细，且很新很全，强烈建议</a></li><li><a href="https://262235.xyz/index.php/archives/611/%EF%BC%8C%E9%83%A8%E5%88%86%E5%8F%82%E8%80%83">https://262235.xyz/index.php/archives/611/，部分参考</a></li></ol><p>首先下载qcow2文件，比如这里就下载到了<code>/root/images</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://cloud.debian.org/images/cloud/bullseye/latest/debian-11-nocloud-amd64.qcow2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按照参考1的教程创建虚拟机，注意直接把硬盘删除（省了后续分离硬盘的操作），创建好的容器配置如下：</p><p><img src="/2022/06/26/pve-all/image-20220709175713724.png" alt="image-20220709175713724"></p><p>再添加cloud-init设备</p><p><img src="/2022/06/26/pve-all/image-20220709175738117.png" alt="image-20220709175738117"></p><p>进入下载目录，导入镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">qm importdisk <span class="token number">108</span> debian-11-nocloud-amd64.qcow2 local-lvm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220709175924730.png" alt="image-20220709175924730"></p><p>修改新添加的磁盘为SCSI，添加，并修改启动顺序</p><p><img src="/2022/06/26/pve-all/image-20220709175947592.png" alt="image-20220709175947592"></p><p><img src="/2022/06/26/pve-all/image-20220709180124867.png" alt="image-20220709180124867"></p><p>接下来修改Cloud-init的配置</p><p>参考参考1中所说的，这里具体设置用户为root，密码和网络设置自定义</p><blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">用户：Debian11 的模板系统，默认用户是 debian。如果是配置 root 或用户登录，此处需输入用户名即可，不输入用户名，则用默认的用户可登录。密码：可在此处输入上面用户的密码，建议输入，否则控制台端不能登录系统。DNS域：可输入虚拟机的域名，不输入则继承 PVE 主机的域名。DNS服务器：如果 VM 使用其它域名解析，可在此输入，不输入则继承 PVE 主机的域名解析服务器地址。SSH公钥：SSH 连接虚拟机的公钥，使用密钥登录 SSH。IP配置：不输入则使用 DHCP 给虚拟机分配 IPV4 和 IPV6，可在此定义该虚拟机的 IP 地址、子网掩码以及网关地址。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p><img src="/2022/06/26/pve-all/image-20220709180256796.png" alt="image-20220709180256796"></p><h3 id="debian更换源"><a href="#debian更换源" class="headerlink" title="debian更换源"></a>debian更换源</h3><p>除了按照，<a href="#%E6%9B%B4%E6%8D%A2%E6%BA%90">更换源</a>里面debian一节进行替换外，还需要更换security的源，参考<a href="https://mirrors.ustc.edu.cn/help/debian-security.html">https://mirrors.ustc.edu.cn/help/debian-security.html</a></p><p><img src="/2022/06/26/pve-all/image-20220710224335095.png" alt="image-20220710224335095"></p><p>具体来说就是把多余的<code>debian-security</code>删除</p><p>最后的<code>sources.list</code>文件</p><h3 id="cloud-init安装"><a href="#cloud-init安装" class="headerlink" title="cloud-init安装"></a><code>cloud-init</code>安装</h3><p>默认情况下是没有安装的，导致控制台那的配置无法生效。</p><p><img src="/2022/06/26/pve-all/image-20220710224451003.png" alt="image-20220710224451003"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> cloud-init <span class="token parameter variable">-y</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220710224552213.png" alt="image-20220710224552213"></p><h2 id="问题-2"><a href="#问题-2" class="headerlink" title="问题"></a>问题</h2><h2 id="ssh服务无法启动"><a href="#ssh服务无法启动" class="headerlink" title="ssh服务无法启动"></a>ssh服务无法启动</h2><h3 id="Failed-to-start-OpenBSD-Secure-Shell-server"><a href="#Failed-to-start-OpenBSD-Secure-Shell-server" class="headerlink" title="Failed to start OpenBSD Secure Shell server"></a>Failed to start OpenBSD Secure Shell server</h3><p><img src="/2022/06/26/pve-all/image-20220709181115530.png" alt="image-20220709181115530"></p><p>参考<a href="https://blog.csdn.net/qq_38225558/article/details/117793432">https://blog.csdn.net/qq_38225558/article/details/117793432</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-A</span>systemctl restart <span class="token function">ssh</span>systemctl restart sshd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Permission-denied-publickey"><a href="#Permission-denied-publickey" class="headerlink" title="Permission denied (publickey)."></a>Permission denied (publickey).</h3><p>参考 <a href="https://askubuntu.com/a/337827">https://askubuntu.com/a/337827</a></p><p>默认情况下<code>PasswordAuthentication</code>是no，所以需要把<code>PasswordAuthentication</code>改成yes</p><p>之后就可以通过这个password登陆了</p><p>然后再把本地公钥复制到<code>~/.ssh/authorized_key</code>进去，就可以免密码登陆了</p><h3 id="ip设置可能无效"><a href="#ip设置可能无效" class="headerlink" title="ip设置可能无效"></a>ip设置可能无效</h3><p>虽然在设置里面设置了192.168.68.34，但是在路由器里实际看到的是</p><p><img src="/2022/06/26/pve-all/image-20220709181514323.png" alt="image-20220709181514323"></p><h1 id="openwrt（旁路由）"><a href="#openwrt（旁路由）" class="headerlink" title="openwrt（旁路由）"></a>openwrt（旁路由）</h1><p>参考：</p><ol><li><a href="https://post.smzdm.com/p/awrx4lxm/p2/#comments">https://post.smzdm.com/p/awrx4lxm/p2/#comments</a> 相当详细，但是仅仅参考前面的配置即可</li><li><a href="https://post.smzdm.com/p/a7dg5pko/">https://post.smzdm.com/p/a7dg5pko/</a> 看看单臂路由即旁路由的设置</li><li><a href="https://azhuge233.com/proxmox-ve-%E5%8D%95%E7%BD%91%E5%8F%A3%E5%AE%89%E8%A3%85-koolshare-lede-x86/">https://azhuge233.com/proxmox-ve-%E5%8D%95%E7%BD%91%E5%8F%A3%E5%AE%89%E8%A3%85-koolshare-lede-x86/</a> 主要看看其中的安装步骤</li><li><a href="https://moisfool.notion.site/Openwrt-3c4be24395a94c3eb887247ad6d2754f">https://moisfool.notion.site/Openwrt-3c4be24395a94c3eb887247ad6d2754f</a> openwrt旁路网关的解说</li><li><del><a href="https://www.right.com.cn/forum/thread-4035785-1-1.html">https://www.right.com.cn/forum/thread-4035785-1-1.html</a> 旁路网关的基本概念</del>。实测不是很好用，esir佛跳墙版本的固件，直接默认的端口配置即可，<strong>而且当且仅当使用默认配置的时候，其余容器才能正常通过openwrt的固件进行访问</strong></li><li><a href="https://drive.google.com/drive/folders/1uRXg_krKHPrQneI3F2GNcSVRoCgkqESr">https://drive.google.com/drive/folders/1uRXg_krKHPrQneI3F2GNcSVRoCgkqESr</a> esir的固件</li><li><a href="https://www.scarletdrop.cn/archives/19#toc-head-9">https://www.scarletdrop.cn/archives/19#toc-head-9</a> <strong>重点看看这个的安装步骤！！</strong></li><li><a href="https://www.right.com.cn/forum/thread-2884039-1-1.html%EF%BC%8C%E5%92%8C%E7%9B%AE%E5%89%8D%E7%9A%84%E9%85%8D%E7%BD%AE%E5%87%A0%E4%B9%8E%E7%9B%B8%E5%90%8C%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%A5%BD%E5%A5%BD%E7%9C%8B%E7%9C%8B">https://www.right.com.cn/forum/thread-2884039-1-1.html，和目前的配置几乎相同，可以好好看看</a></li></ol><h2 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h2><p>基本按照默认配置来就可以了</p><ul><li>内存用1G绰绰有余</li></ul><p><img src="/2022/06/26/pve-all/image-20220814123514614.png" alt="image-20220814123514614"></p><ul><li>下载固件：<a href="https://drive.google.com/drive/folders/1uRXg_krKHPrQneI3F2GNcSVRoCgkqESr">https://drive.google.com/drive/folders/1uRXg_krKHPrQneI3F2GNcSVRoCgkqESr</a> 。这里选择了佛跳墙版本的，基本选择最新的就好</li></ul><p><img src="/2022/06/26/pve-all/image-20220828133054760.png" alt="image-20220828133054760"></p><ul><li>下载好之后加载img，并且通过下面这个命令加载进来，然后修改成sata或者scsi都可。然后修改启动顺序</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## 注意把 202 替换成自己的虚拟机 VM ID</span><span class="token comment">## 路径替换成上面上传镜像是记录的地址</span>qm importdisk <span class="token number">202</span> /var/lib/vz/template/iso/openwrt-buddha-version-v5_2022_-x86-64-generic-squashfs-legacy.img local-lvm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2022/06/26/pve-all/image-20220904112432372.png" alt="image-20220904112432372"></p><h2 id="设置-1"><a href="#设置-1" class="headerlink" title="设置"></a>设置</h2><p>用vnc进去之后，第一件事就是修改ip，<code>vi /etc/config/network</code>，主要是修改lan这部分：</p><ul><li>只需要修改<code>ipaddr</code>即可，后续的可以在前端管理页面修改</li></ul><p><img src="/2022/06/26/pve-all/image-20220904112719647.png" alt="image-20220904112719647"></p><p>修改好之后进入，默认的账号密码是root password</p><h3 id="网络-接口设置"><a href="#网络-接口设置" class="headerlink" title="网络-接口设置"></a>网络-接口设置</h3><p>进去之后先修改lan接口</p><p><img src="/2022/06/26/pve-all/image-20220904112943749.png" alt="image-20220904112943749"></p><p>修改重点：</p><ul><li><p>网关改成主路由的</p></li><li><p>关闭DHCP服务</p></li></ul><p>其余保持默认即可</p><p><img src="/2022/06/26/pve-all/image-20220904113028495.png" alt="image-20220904113028495"></p><p><img src="/2022/06/26/pve-all/image-20220904113059374.png" alt="image-20220904113059374"></p><p><img src="/2022/06/26/pve-all/image-20220904113145030.png" alt="image-20220904113145030"></p><p><img src="/2022/06/26/pve-all/image-20220904113153925.png" alt="image-20220904113153925"></p><p><img src="/2022/06/26/pve-all/image-20220904113218117.png" alt="image-20220904113218117"></p><p><img src="/2022/06/26/pve-all/image-20220904113227651.png" alt="image-20220904113227651"></p><p>额外可以优化的点：</p><ul><li>做旁路由的话，无需桥接，因此可以把桥接的选项去除，记得选择eth0</li></ul><h3 id="网络-防火墙设置"><a href="#网络-防火墙设置" class="headerlink" title="网络-防火墙设置"></a>网络-防火墙设置</h3><p>基本保持默认即可，<del>只需去除FullCone-NAT</del>，存疑，根据<a href="https://moisfool.notion.site/Openwrt-3c4be24395a94c3eb887247ad6d2754f">Openwrt 作为旁路网关</a>，只需要关闭SYN-flood防御，开启FullCone-NAT，<strong>实测开着FullCone-NAT也能正常代理，且速度差不多</strong></p><p><img src="/2022/06/26/pve-all/image-20220904113331934.png" alt="image-20220904113331934"></p><h3 id="PassWall设置"><a href="#PassWall设置" class="headerlink" title="PassWall设置"></a>PassWall设置</h3><p>按照上述步骤操作完之后，去PassWall先看看百度的连接状态，可以看到是联通的</p><p><img src="/2022/06/26/pve-all/image-20220904113452971.png" alt="image-20220904113452971"></p><p>接下来的设置比较简单，只需要添加订阅定制，然后自动订阅即可</p><p><img src="/2022/06/26/pve-all/image-20220904113547725.png" alt="image-20220904113547725"></p><p>配置完成后，直接连接，注意面板谷歌连接和ins连接不一定通（此时并不代表设置失败）</p><p><img src="/2022/06/26/pve-all/image-20220904113811088.png" alt="image-20220904113811088"></p><ul><li>可以在其他客户端直接改网关看看能否成功</li><li>也可以在LXC容器的网关处直接改成openwrt的地址，然后用<code>curl www.google.com</code>试试</li></ul><p><img src="/2022/06/26/pve-all/image-20220904115809196.png" alt="image-20220904115809196"></p><p>可以看到有内容返回，说明成功了</p><p><img src="/2022/06/26/pve-all/image-20220904120419484.png" alt="image-20220904120419484"></p><h3 id="smartdns-adgurad设置"><a href="#smartdns-adgurad设置" class="headerlink" title="smartdns+adgurad设置"></a>smartdns+adgurad设置</h3><p>参考：</p><ol><li><a href="https://github.com/luckyyyyy/blog/issues/57%EF%BC%8C%E9%9D%9E%E5%B8%B8%E8%AF%A6%E7%BB%86%E7%9A%84%E6%8F%8F%E8%BF%B0%EF%BC%8C%E6%BA%90%E4%BB%A3%E7%A0%81%E5%87%BA%E5%A4%84">https://github.com/luckyyyyy/blog/issues/57，非常详细的描述，源代码出处</a></li><li><a href="https://www.robinxb.com/posts/2022/setting-smartdns-with-adguardhome-and-passwall/%EF%BC%8C%E4%B8%8D%E9%94%99%E7%9A%84%E6%95%99%E7%A8%8B%EF%BC%8C%E5%8F%AF%E5%8F%82%E8%80%83">https://www.robinxb.com/posts/2022/setting-smartdns-with-adguardhome-and-passwall/，不错的教程，可参考</a></li><li><a href="https://www.xtime.fun/smartdns.html%EF%BC%8C%E5%9B%BE%E6%96%87%E5%B9%B6%E8%8C%82">https://www.xtime.fun/smartdns.html，图文并茂</a></li></ol><p>实测配了之后，提升不大，因此可以考虑不使用</p><h1 id="ipv6设置"><a href="#ipv6设置" class="headerlink" title="ipv6设置"></a>ipv6设置</h1><h2 id="路由器以及光猫ipv6设置"><a href="#路由器以及光猫ipv6设置" class="headerlink" title="路由器以及光猫ipv6设置"></a>路由器以及光猫ipv6设置</h2><p>参考：</p><ol><li><a href="https://post.smzdm.com/p/amxllm2d/%EF%BC%8C%E7%A7%BB%E5%8A%A8%E7%9A%84%E5%85%89%E7%8C%AB+%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F%E4%B8%8B%EF%BC%8C%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AEipv6%EF%BC%8C%E5%BE%88%E4%B8%8D%E9%94%99">https://post.smzdm.com/p/amxllm2d/，移动的光猫+桥接模式下，如何设置ipv6，很不错</a></li><li><a href="https://www.zhihu.com/question/479819582%EF%BC%8C%E7%9F%A5%E4%B9%8E%E7%9A%84%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E7%9C%8B%E5%A6%82%E6%9E%9C%E6%AD%A3%E7%A1%AE%E8%AE%BE%E7%BD%AE%E4%BA%86%EF%BC%8Cipv6%E5%9C%B0%E5%9D%80%E5%BA%94%E8%AF%A5%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84">https://www.zhihu.com/question/479819582，知乎的一个问题，可以看看如果正确设置了，ipv6地址应该是怎么样的</a></li><li><a href="https://zhuanlan.zhihu.com/p/146528034%EF%BC%8C%E6%9B%B4%E8%AF%A6%E7%BB%86%E7%9A%84%E7%A7%BB%E5%8A%A8%E5%85%89%E7%8C%AB+%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F+%E5%BC%80%E5%90%AFipv6">https://zhuanlan.zhihu.com/p/146528034，更详细的移动光猫+桥接模式+开启ipv6</a></li></ol><p>光猫除了改桥接，还需要<strong>关闭ipv6防火墙</strong></p><p><img src="/2022/06/26/pve-all/image-20220904143705384.png" alt="image-20220904143705384"></p><p>使用的路由器是京东路由宝：</p><ul><li>打开开关</li><li><strong>关闭防火墙！！特别注意这一点！！！！！！</strong></li></ul><p><img src="/2022/06/26/pve-all/image-20220904143402964.png" alt="image-20220904143402964"></p><h2 id="pve-7-ipv6设置"><a href="#pve-7-ipv6设置" class="headerlink" title="pve 7 ipv6设置"></a>pve 7 ipv6设置</h2><p>参考：</p><ol><li><a href="https://www.haiyun.me/archives/1416.html#comment-688">https://www.haiyun.me/archives/1416.html#comment-688</a> 感觉不一定好用，参考</li><li><a href="https://forum.proxmox.com/threads/ipv6-slaac-after-upgrading-from-6-4-to-7-1-6.100501/">https://forum.proxmox.com/threads/ipv6-slaac-after-upgrading-from-6-4-to-7-1-6.100501/</a> 亲测有用！！</li></ol><p><img src="/2022/06/26/pve-all/image-20220904162018482.png" alt="image-20220904162018482"></p><p>添加下面这三行到<code>/etc/network/interfaces</code>即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#This line needs to be here so that the next two get recognized</span>pre-up <span class="token builtin class-name">echo</span> <span class="token number">2</span> <span class="token operator">></span> /proc/sys/net/ipv6/conf/vmbr0/accept_rapost-up <span class="token builtin class-name">echo</span> <span class="token number">2</span> <span class="token operator">></span> /proc/sys/net/ipv6/conf/vmbr0/accept_ra<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>修改完之后重启，最后<code>ifconfig</code>看到有<code>240x</code>开头的ip即可</p><p><img src="/2022/06/26/pve-all/image-20220904162331722.png" alt="image-20220904162331722"></p><p>尝试直接用<code>http://[ipv6 addr]:8006</code>访问，可以正常打开</p><h2 id="群晖ipv6设置"><a href="#群晖ipv6设置" class="headerlink" title="群晖ipv6设置"></a>群晖ipv6设置</h2><p>不需要设置，只要光猫和路由器设置好之后，装在pve里的dsm能够自动获取到</p><p><img src="/2022/06/26/pve-all/image-20220904162737410.png" alt="image-20220904162737410"></p><p>同样可以通过<code>http://[ipv6 addr]:5000</code>来访问，<strong>注意要用下面长的那串ipv6地址！！</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;PVE安装&quot;&gt;&lt;a href=&quot;#PVE安装&quot; class=&quot;headerlink&quot; title=&quot;PVE安装&quot;&gt;&lt;/a&gt;PVE安装&lt;/h1&gt;&lt;p&gt;参考：主要来源于张大妈&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://post.smzdm.com/p</summary>
      
    
    
    
    <category term="nas" scheme="https://khalitt.github.io/categories/nas/"/>
    
    
    <category term="pve" scheme="https://khalitt.github.io/tags/pve/"/>
    
  </entry>
  
  <entry>
    <title>hexo algolia 使用</title>
    <link href="https://khalitt.github.io/2021/10/16/hexo-algolia-usage/"/>
    <id>https://khalitt.github.io/2021/10/16/hexo-algolia-usage/</id>
    <published>2021-10-16T04:26:33.000Z</published>
    <updated>2022-06-19T13:01:27.312Z</updated>
    
    <content type="html"><![CDATA[<p>参考</p><ol><li><a href="https://blog.ccknbc.cc/posts/hexo-butterfly-algolia/">https://blog.ccknbc.cc/posts/hexo-butterfly-algolia/</a> 相当详细，介绍了仅仅搜索标题了搜索全文的两种方法</li><li><a href="https://raycoder.me/p/hugo-search-with-algolia/">Hugo博客搭配Algolia实现站内搜索</a>，介绍了全文搜索的情况下自动更新</li></ol><h1 id="hexo-algolia和hexo-algoliasearch的区别"><a href="#hexo-algolia和hexo-algoliasearch的区别" class="headerlink" title="hexo-algolia和hexo-algoliasearch的区别"></a>hexo-algolia和hexo-algoliasearch的区别</h1><blockquote><p>分别是 <a href="https://github.com/oncletom/hexo-algolia">hexo-algolia</a> 和 <a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch">hexo-algoliasearch</a>，他们的介绍分别为</p><blockquote><p>Index your hexo website content to Algolia Search.<br>🔎 A plugin to index posts of your Hexo blog on Algolia</p></blockquote><p>也就很明显了，<strong>如果你想要全站搜索可选择前者，如果你只想搜索文章两者兼可</strong>。<strong>但前者不能将文章内容作为索引上传</strong>，后者可全文上传。<br>然后就是 HEXO 配置文件中添加以下内容，下文基本以 <code>hexo-algoliasearch</code> 为例，因为我个人认为访客只会搜文章吧（事实上是搜索根本没人用，毕竟也根本没人访问），hexo-algolia 可查看官方文档，注意配置和命令的区别</p></blockquote><h1 id="仅仅搜索标题"><a href="#仅仅搜索标题" class="headerlink" title="仅仅搜索标题"></a>仅仅搜索标题</h1><p>直接用hexo-algolia即可</p><p>然后修改目录下的<code>_config.butterfly.yml.yml</code>即可</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">algolia_search</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hits</span><span class="token punctuation">:</span>    <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>最后再按照 <a href="https://github.com/oncletom/hexo-algolia">hexo-algolia</a> 配置一下<code>_config.yml</code>中关于Algolia的选项</p><p><img src="/2021/10/16/hexo-algolia-usage/image-20211016124101223.png" alt="image-20211016124101223"></p><h1 id="搜索全文（文章内容）"><a href="#搜索全文（文章内容）" class="headerlink" title="搜索全文（文章内容）"></a>搜索全文（文章内容）</h1><p>基本按照这篇文章来就可以了<a href="https://blog.ccknbc.cc/posts/hexo-butterfly-algolia/">https://blog.ccknbc.cc/posts/hexo-butterfly-algolia/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.ccknbc.cc/posts/hexo-butterfly-algolia/&quot;&gt;https://blog.ccknbc.cc/posts/hexo-butterfly-algolia/&lt;/a&gt; 相</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo new 时的路径创建</title>
    <link href="https://khalitt.github.io/2021/10/16/misc/hexo-specify-path-when-creating/"/>
    <id>https://khalitt.github.io/2021/10/16/misc/hexo-specify-path-when-creating/</id>
    <published>2021-10-16T04:15:37.000Z</published>
    <updated>2022-06-19T13:01:27.328Z</updated>
    
    <content type="html"><![CDATA[<p>基本用法如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new layout <span class="token punctuation">[</span>article_name<span class="token punctuation">]</span> <span class="token parameter variable">-p</span> <span class="token punctuation">[</span>path<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>注意path末尾不用加<code>.md</code></strong></p><h1 id="hexo-new-layout-article-name-p-article-name"><a href="#hexo-new-layout-article-name-p-article-name" class="headerlink" title="hexo new layout [article_name] -p [article_name]"></a><code>hexo new layout [article_name] -p [article_name]</code></h1><p>这种默认是在<code>source/_posts</code>下创建</p><p>比如</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new article-img tttt <span class="token parameter variable">-p</span> tttt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/misc/hexo-specify-path-when-creating/image-20211016122015940.png" alt="image-20211016122015940"></p><h1 id="hexo-new-layout-article-name-p-subdir-article-name"><a href="#hexo-new-layout-article-name-p-subdir-article-name" class="headerlink" title="hexo new layout [article_name] -p subdir/[article_name]"></a><code>hexo new layout [article_name] -p subdir/[article_name]</code></h1><p>这种等价于在<code>source/_post/subdir</code>创建，如果<code>subdir</code>不存在则会自动创建</p><pre class="line-numbers language-none"><code class="language-none">hexo new article-img tttt -p misc_1&#x2F;tttt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/10/16/misc/hexo-specify-path-when-creating/image-20211016122510969.png" alt="image-20211016122510969"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;基本用法如下&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-bash&quot; data-language=&quot;bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;hexo new layout &lt;span class=&quot;token pu</summary>
      
    
    
    
    
    <category term="hexo" scheme="https://khalitt.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>gitignore忽略整个文件夹下所有文件但保留一些</title>
    <link href="https://khalitt.github.io/2021/08/20/misc/gitignore-all-but-a-few-files/"/>
    <id>https://khalitt.github.io/2021/08/20/misc/gitignore-all-but-a-few-files/</id>
    <published>2021-08-20T14:42:32.000Z</published>
    <updated>2022-06-19T13:01:27.312Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/u011475134/article/details/71521725">.gitignore设置跟踪忽略文件夹中文件</a>说的挺全的，可以好好参考</p><h1 id="常见错误原因"><a href="#常见错误原因" class="headerlink" title="常见错误原因"></a>常见错误原因</h1><p>假设想要忽略所有的名为Win7Release或release的文件夹下除.txt文件之外的文件，很容易写成如下错误形式</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">*<span class="token punctuation">[</span>Rr<span class="token punctuation">]</span>elease/<span class="token operator">!</span>*<span class="token punctuation">[</span>Rr<span class="token punctuation">]</span>elease/*.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意：上面已经说过git对于.gitignore配置文件是按行从上到下进行规则匹配的，<strong>由于先执行<code>*[Rr]elease/</code>忽略了所有符合条件的文件夹，接下来执行<code>!*[Rr]elease/*.txt</code>时找不到名为<code>*[Rr]elease</code>的文件夹，也就无法追踪这些文件夹下的txt文件了</strong>。</p><p>所以，在这里，<strong>第一步我们不应该忽略这些文件夹，而应该忽略这些文件夹下的所有文件</strong>，正确规则添加如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>Rr<span class="token punctuation">]</span>elease/*<span class="token operator">!</span>*<span class="token punctuation">[</span>Rr<span class="token punctuation">]</span>elease/*.txt<span class="token operator">!</span>*<span class="token punctuation">[</span>Rr<span class="token punctuation">]</span>elease/files/*<span class="token punctuation">[</span>Rr<span class="token punctuation">]</span>elease/files/*<span class="token operator">!</span>*<span class="token punctuation">[</span>Rr<span class="token punctuation">]</span>elease/files/*.txt*/bin/*<span class="token punctuation">[</span>Rr<span class="token punctuation">]</span>elease/*<span class="token operator">!</span>*/bin/*<span class="token punctuation">[</span>Rr<span class="token punctuation">]</span>elease/*.txt<span class="token operator">!</span>*/bin/*<span class="token punctuation">[</span>Rr<span class="token punctuation">]</span>elease/files/*/bin/*<span class="token punctuation">[</span>Rr<span class="token punctuation">]</span>elease/files/*<span class="token operator">!</span>*/bin/*<span class="token punctuation">[</span>Rr<span class="token punctuation">]</span>elease/files/*.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：</p><ol><li>执行<code>*[Rr]elease/*</code>，忽略根目录下符合条件的文件夹下的所有文件</li><li>执行<code>!*[Rr]elease/*.txt</code>，追踪根目录下符合条件的文件夹下的txt文件</li><li>执行<code>!*[Rr]elease/files/</code>，追踪根目录下符合条件的文件夹下的files文件夹</li><li>执行<code>*[Rr]elease/files/*</code>，忽略files文件夹下的所有文件</li><li>执行<code>!*[Rr]elease/files/*.txt</code>，追踪files文件夹下的txt文件</li></ol><p>所以这样的做法是不对的，这样并不能忽略target文件下除了jar文件外的所有文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">target<span class="token operator">!</span>target/*.jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="正确做法"><a href="#正确做法" class="headerlink" title="正确做法"></a>正确做法</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">target/*<span class="token operator">!</span>target/*.jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2021/08/20/misc/gitignore-all-but-a-few-files/image-20210820225100993.png" alt="image-20210820225100993"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u011475134/article/details/71521725&quot;&gt;.g</summary>
      
    
    
    
    
    <category term="git" scheme="https://khalitt.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>github多账号设置</title>
    <link href="https://khalitt.github.io/2021/08/07/multiple-github-accounts/"/>
    <id>https://khalitt.github.io/2021/08/07/multiple-github-accounts/</id>
    <published>2021-08-07T13:11:04.000Z</published>
    <updated>2022-06-19T13:01:27.328Z</updated>
    
    <content type="html"><![CDATA[<p>参考：</p><ol><li><a href="https://segmentfault.com/a/1190000022797854">GitHub 多账户设置</a></li><li><a href="https://gist.github.com/JoaquimLey/e6049a12c8fd2923611802384cd2fb4a#file-github_multiple-accounts-md"><strong>github_multiple-accounts.md</strong></a></li><li><a href="https://www.huaweicloud.com/articles/5e1b8d3cb0b673fae499eaa34a94205c.html">github 多账号使用ssh key</a></li></ol><p>适用场景：希望在同一台机器上使用多个github账号时</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p>核心步骤：</p><ol><li>创建一个新的SSH key（注意路径）并添加进ssh</li><li>在新的账号上添加新创建的public key</li><li>在本地添加一个config文件以作区别</li><li>enjoy！</li></ol><h2 id="创建一个新的ssh-key并添加"><a href="#创建一个新的ssh-key并添加" class="headerlink" title="创建一个新的ssh key并添加"></a>创建一个新的ssh key并添加</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"xxx email"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意这里不能一路回车，在下面这步需要输入新的位置，因为通常默认的是id_rsa，而这个已经被原来的账号所使用</p><p><img src="/2021/08/07/multiple-github-accounts/image-20210808103624410.png" alt="image-20210808103624410"></p><p>因为默认只读取id_rsa，为了让SSH识别新的私钥，需将其添加到SSH agent中，比如这里就把上面的key命名为id_rsa_wttong</p><p><img src="/2021/08/07/multiple-github-accounts/image-20210808103853450.png" alt="image-20210808103853450"></p><h2 id="在新的账号上添加新创建的public-key"><a href="#在新的账号上添加新创建的public-key" class="headerlink" title="在新的账号上添加新创建的public key"></a>在新的账号上添加新创建的public key</h2><p>进入github setting - SSH key相关的即可添加</p><h2 id="在本地添加config文件"><a href="#在本地添加config文件" class="headerlink" title="在本地添加config文件"></a>在本地添加config文件</h2><p>通常来说是默认是没有config文件的，所以要先创建，然后打开编辑</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">touch</span> ~/.ssh/config<span class="token function">vim</span> ~/.ssh/config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>具体的内容可参考：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Host github.com <span class="token comment"># 默认的账号</span>  HostName github.com  User <span class="token function">git</span>  IdentityFile ~/.ssh/id_rsaHost github.com-wttong <span class="token comment"># 新添加的账号</span>  HostName github.com  User <span class="token function">git</span>  IdentityFile ~/.ssh/id_rsa_wttong <span class="token comment"># 特别注意这里</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>核心就是把两个identityFile区分开来</p><p>最后检查两个是否都正常使用</p><p><img src="/2021/08/07/multiple-github-accounts/image-20210808104409486.png" alt="image-20210808104409486"></p><h1 id="具体使用的要注意的点"><a href="#具体使用的要注意的点" class="headerlink" title="具体使用的要注意的点"></a>具体使用的要注意的点</h1><ol><li>在clone等时候，如果使用ssh的方式，需要注意更改的地方：</li></ol><p>比如原本是：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone git@github.com:xxxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需要改为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone git@github.com-wttong:xxxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其他诸如push等类似</p><ol start="2"><li><p>对于已有的repo，需要注意config中是否需要修改，可以通过 <code>git config --list</code>查看，比如下面这种，看看是否需要和上面一样修改github.com</p><p><img src="/2021/08/07/multiple-github-accounts/image-20210808104727256.png" alt="image-20210808104727256"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000022797854&quot;&gt;GitHub 多账户设置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/Joaquim</summary>
      
    
    
    
    <category term="hexo" scheme="https://khalitt.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://khalitt.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>tensordot</title>
    <link href="https://khalitt.github.io/2021/07/24/misc/tensordot/"/>
    <id>https://khalitt.github.io/2021/07/24/misc/tensordot/</id>
    <published>2021-07-24T14:54:44.000Z</published>
    <updated>2021-07-24T16:27:26.548Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tensordot的理解"><a href="#tensordot的理解" class="headerlink" title="tensordot的理解"></a>tensordot的理解</h1><ol><li>参考 <a href="https://numpy.org/doc/stable/reference/generated/numpy.tensordot.html">numpy的tensordot的说明文档</a>，说的比较详细，但是依旧有点晦涩难懂</li></ol><p>在tensorflow中有一样的函数，功能和numpy中的一样。</p><p>顾名思义，tensordot的含义就是“张量的点积“，具体到numpy或者tensorflow中的使用，有两种：</p><ol><li>如果给定的axes是一个int N，则直接第一个张量的最后N维度和第二个张量的前N个维度逐个元素相乘，然后加起来（注意这里的加，对应+，对于number就是数字相加，对于字符串等价于拼接）</li><li>如果给第的axes是list，则其中每一个元素应该是一个tuple，tuple的第一个元素表示操作第一个张量对应的维度，第二个元素表示操作第二张量对应的维度</li></ol><p>比如：a的维度是$(2,3,4)$, b的维度是$(3,4,5)$:</p><ul><li><code>np.tensordot(a, b, 2)</code>的结果的维度应该是$(2,5)$​​​，具体的操作可以理解为，固定a的第一个维度和b的最后一个维度（依次取值，作为最外层的循环，即<code>i,j</code>），a的后两个和b的前两个维度相同位置的元素依次相乘，求和，作为对应位置的元素</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">ans <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>ans<span class="token punctuation">[</span>i<span class="token punctuation">,</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">,</span>k<span class="token punctuation">,</span>n<span class="token punctuation">]</span> <span class="token operator">*</span> a<span class="token punctuation">[</span>k<span class="token punctuation">,</span>n<span class="token punctuation">,</span>j<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>np.tensordot(a, b, (1, 0))</code>的结果的维度应该是$(2,4,4,5)$​​，具体操作可以理解为，固定<code>a[i,k,j]</code>和<code>b[n,f,g]</code>中的<code>i,j,f,g</code>维度（即对四个位置依次进行取值，作为最外层的循环），<code>k</code>和<code>n</code>这两个维度相同位置的元素依次进行相乘，求和</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">ans <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> f <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> g <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        ans<span class="token punctuation">[</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>f<span class="token punctuation">,</span>g<span class="token punctuation">]</span> <span class="token operator">+=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">,</span>k<span class="token punctuation">,</span>j<span class="token punctuation">]</span> <span class="token operator">*</span> a<span class="token punctuation">[</span>n<span class="token punctuation">,</span>f<span class="token punctuation">,</span>g<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>np.tensordot(a, b, ((1, 2), (0,1))</code>的结果的维度应该是$(2,5)$​​​，具体操作可以理解为，固定<code>a[i,k,n]</code>和<code>b[k,n,j]</code>中的<code>i,j</code>维度（即对两个位置依次进行取值，作为最外层的循环），<code>k</code>和<code>n</code>这两个维度，在两个张量中，相同位置的元素依次进行相乘，并求和。实际上这就等同于第一种情况<code>np.tensordot(a,b,2)</code></li></ul><p>按照上述的理解，自然也就不难理解下面的操作了：</p><p><img src="/2021/07/24/misc/tensordot/image-20210724225721272.png" alt="image-20210724225721272"></p><p>特别注意上面的<code>n</code>和<code>k</code>的顺序：<strong>是先4那个维度，再到3那个维度，因为<code>axes=[(1,0),[0,1]]</code>，所以最内层的循环是从<code>a[k, 0, i] * b[0, k, j]</code>开始</strong> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;tensordot的理解&quot;&gt;&lt;a href=&quot;#tensordot的理解&quot; class=&quot;headerlink&quot; title=&quot;tensordot的理解&quot;&gt;&lt;/a&gt;tensordot的理解&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;参考 &lt;a href=&quot;https://nump</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>使用python单例模式时要注意的key</title>
    <link href="https://khalitt.github.io/2021/02/07/problems-record/python-singleton-key/"/>
    <id>https://khalitt.github.io/2021/02/07/problems-record/python-singleton-key/</id>
    <published>2021-02-07T08:51:15.000Z</published>
    <updated>2021-02-07T10:59:55.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>训练时，只希望所有数据只有一份存储在内存中，即对于同样的一份数据只读取一次，但是又希望被多个不同的<code>dataset</code>或者<code>dataloader</code>共用，自然是需要单例模式。</p><p>一个经典的实现就是：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    _instances <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> cls_key <span class="token keyword">not</span> <span class="token keyword">in</span> cls<span class="token punctuation">.</span>_instances<span class="token punctuation">:</span>            cls<span class="token punctuation">.</span>_instances<span class="token punctuation">[</span>cls<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">super</span><span class="token punctuation">(</span>Singleton<span class="token punctuation">,</span> cls<span class="token punctuation">)</span><span class="token punctuation">.</span>__call__<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>        <span class="token keyword">return</span> cls<span class="token punctuation">.</span>_instances<span class="token punctuation">[</span>cls<span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">clear</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># MyClass.clear() to clear</span>        cls<span class="token punctuation">.</span>_instances <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是这种实现<strong>仅仅只能保证一个类只产生一个实例，但是对于想用一个类来初始化所有的数据来说，并不可行，等价于初始化完train，val和test都不会初始化了</strong></p><p>很自然能够想到直接使用下面这种，<strong>用<code>dataset_type</code>作为key来初始化</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    _instances <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># Might vary based on order in args</span>        cls_key <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> cls_key <span class="token keyword">not</span> <span class="token keyword">in</span> cls<span class="token punctuation">.</span>_instances<span class="token punctuation">:</span>            cls<span class="token punctuation">.</span>_instances<span class="token punctuation">[</span>cls_key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">super</span><span class="token punctuation">(</span>Singleton<span class="token punctuation">,</span> cls<span class="token punctuation">)</span><span class="token punctuation">.</span>__call__<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>        <span class="token keyword">return</span> cls<span class="token punctuation">.</span>_instances<span class="token punctuation">[</span>cls_key<span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">clear</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># MyClass.clear() to clear</span>        cls<span class="token punctuation">.</span>_instances <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment"># 继承上面的单例</span><span class="token keyword">class</span> <span class="token class-name">XRMBData</span><span class="token punctuation">(</span>metaclass<span class="token operator">=</span>Singleton<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> root<span class="token punctuation">,</span> dataset_type<span class="token punctuation">,</span> noise_type<span class="token punctuation">,</span> noise_rate<span class="token punctuation">,</span> seed<span class="token punctuation">,</span> modalities<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"XRMBData </span><span class="token interpolation"><span class="token punctuation">&#123;</span>dataset_type<span class="token punctuation">&#125;</span></span><span class="token string"> was called"</span></span><span class="token punctuation">)</span>        folder <span class="token operator">=</span> <span class="token string">'seed_&#123;:d&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span>        label_folder <span class="token operator">=</span> folder <span class="token operator">+</span> <span class="token string">'/labels/&#123;&#125;_&#123;:.1f&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>noise_type<span class="token punctuation">,</span> noise_rate<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>clean_labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> dataset_type <span class="token operator">==</span> <span class="token string">'test'</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>labels <span class="token operator">=</span> torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>np<span class="token punctuation">.</span>load<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> label_folder<span class="token punctuation">,</span> <span class="token string">'y_test.npy'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">long</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token comment"># val / train</span>            self<span class="token punctuation">.</span>labels <span class="token operator">=</span> torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>                np<span class="token punctuation">.</span>load<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> label_folder<span class="token punctuation">,</span> <span class="token string">'noisy_y_&#123;&#125;.npy'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>dataset_type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">long</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>clean_labels <span class="token operator">=</span> torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>                np<span class="token punctuation">.</span>load<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> label_folder<span class="token punctuation">,</span> <span class="token string">'clean_y_&#123;&#125;.npy'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>dataset_type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">long</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> md <span class="token keyword">in</span> modalities<span class="token punctuation">:</span>            md_mat <span class="token operator">=</span> np<span class="token punctuation">.</span>load<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> folder<span class="token punctuation">,</span> <span class="token string">'md_&#123;&#125;/x_&#123;&#125;.npy'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>md<span class="token punctuation">,</span> dataset_type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment"># Expect float otherwise be converted to Double</span>            self<span class="token punctuation">.</span>data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>md_mat<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>dataset_type <span class="token operator">=</span> dataset_type<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是注意到，这种实现只检查了<code>dataset_type</code>，如果说希望一次性跑多个<code>split</code>，那么上面这种处理就导致只有第一个split的数据被读入，之后的split都会用<code>split_0</code>的取代。</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>主要有两种，推荐第一种：</p><ul><li><strong>把split信息也添加进<code>cls_key</code></strong></li><li>每个<code>split</code>跑完之后都用<code>clear_instances</code>清除单例</li></ul><p>对于第一种方法：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    _instances <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># Might vary based on order in args</span>        cls_key <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># cls_key = args[1]</span>        <span class="token keyword">if</span> cls_key <span class="token keyword">not</span> <span class="token keyword">in</span> cls<span class="token punctuation">.</span>_instances<span class="token punctuation">:</span>            cls<span class="token punctuation">.</span>_instances<span class="token punctuation">[</span>cls_key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">super</span><span class="token punctuation">(</span>Singleton<span class="token punctuation">,</span> cls<span class="token punctuation">)</span><span class="token punctuation">.</span>__call__<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>        <span class="token keyword">return</span> cls<span class="token punctuation">.</span>_instances<span class="token punctuation">[</span>cls_key<span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">clear</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># MyClass.clear() to clear</span>        cls<span class="token punctuation">.</span>_instances <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对比修改前后：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">XRMBData train was calledtrain dataset with <span class="token number">329312</span> samplesOriginal fast dataloader finish with:7.8423 secondtrain dataset with <span class="token number">329312</span> samplesOriginal fast dataloader finish with:0.7790 secondtrain dataset with <span class="token number">329312</span> samplesOriginal fast dataloader finish with:0.7690 secondtrain dataset with <span class="token number">329312</span> samplesOriginal fast dataloader finish with:0.7571 secondtrain dataset with <span class="token number">329312</span> samplesOriginal fast dataloader finish with:0.7515 second<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">XRMBData train was calledtrain dataset with <span class="token number">329312</span> samples1st <span class="token function">split</span> 1st epoch 1st batch used <span class="token number">6.5541</span> seconds1st <span class="token function">split</span> 1st epoch used <span class="token number">6.7643</span> secondsOriginal fast dataloader finish with:7.2792 secondXRMBData train was calledtrain dataset with <span class="token number">329312</span> samplesOriginal fast dataloader finish with:0.6898 secondXRMBData train was calledtrain dataset with <span class="token number">329312</span> samplesOriginal fast dataloader finish with:0.7306 secondXRMBData train was calledtrain dataset with <span class="token number">329312</span> samplesOriginal fast dataloader finish with:0.6899 secondXRMBData train was calledtrain dataset with <span class="token number">329312</span> samplesOriginal fast dataloader finish with:0.6729 second<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;训练时，只希望所有数据只有一份存储在内存中，即对于同样的一份数据只读取一次，但是又希望被多个不同的&lt;code&gt;dataset&lt;/code&gt;或</summary>
      
    
    
    
    <category term="python" scheme="https://khalitt.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://khalitt.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pytorch加速与降低显存</title>
    <link href="https://khalitt.github.io/2021/02/04/pytorch-speed-up/"/>
    <id>https://khalitt.github.io/2021/02/04/pytorch-speed-up/</id>
    <published>2021-02-04T11:18:40.000Z</published>
    <updated>2021-02-12T16:18:35.657Z</updated>
    
    <content type="html"><![CDATA[<p>总体而言，主要从以下两个方面改善，不过能把第一个加速了就很好了：</p><ul><li>数据预处理部分</li><li>模型自身的部分</li></ul><p><img src="/2021/02/04/pytorch-speed-up/image-20210204192145256.png" alt="image-20210204192145256"></p><p><img src="/2021/02/04/pytorch-speed-up/image-20210204192130333.png" alt="image-20210204192130333"></p><p>当数据都在GPU时，prefetcher收益不大</p><p><img src="/2021/02/04/pytorch-speed-up/image-20210204194941623.png" alt="image-20210204194941623"></p><p>哪怕数据不在GPU，<code>FastDataloader</code>效果也不错</p><p><img src="/2021/02/04/pytorch-speed-up/image-20210204211759942.png" alt="image-20210204211759942"></p><p>而且GPU占用也不高</p><p><img src="/2021/02/04/pytorch-speed-up/image-20210204212019244.png" alt="image-20210204212019244"></p><p>测试脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">from</span> torchvision <span class="token keyword">import</span> datasets<span class="token punctuation">,</span> transforms<span class="token keyword">import</span> time<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    use_cuda <span class="token operator">=</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> num_workers <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 遍历worker数</span>        kwargs <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'num_workers'</span><span class="token punctuation">:</span> num_workers<span class="token punctuation">,</span> <span class="token string">'pin_memory'</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">&#125;</span> <span class="token keyword">if</span> use_cuda <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>        train_loader <span class="token operator">=</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data<span class="token punctuation">.</span>DataLoader<span class="token punctuation">(</span>            datasets<span class="token punctuation">.</span>MNIST<span class="token punctuation">(</span><span class="token string">'./data'</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                           transform<span class="token operator">=</span>transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>                               transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                               transforms<span class="token punctuation">.</span>Normalize<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0.1307</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0.3081</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                           <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>        start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> batch_idx<span class="token punctuation">,</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> target<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>train_loader<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 不断load</span>                <span class="token keyword">pass</span>        end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Finish with:&#123;&#125; second, num_workers=&#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token punctuation">,</span>num_workers<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>data_prefetch</code>核心代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">prefetcher <span class="token operator">=</span> DataPrefetcher<span class="token punctuation">(</span>self<span class="token punctuation">.</span>data_loader<span class="token punctuation">)</span>batch_data <span class="token operator">=</span> prefetcher<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>batch_idx <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> batch_data <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span><span class="token comment"># for batch_idx, batch_data in enumerate(self.data_loader):</span>    self<span class="token punctuation">.</span>train_metrics<span class="token punctuation">.</span>set_step<span class="token punctuation">(</span><span class="token punctuation">)</span>    inputs<span class="token punctuation">,</span> labels<span class="token punctuation">,</span> clean_labels <span class="token operator">=</span> batch_data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> batch_data<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> batch_data<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    batch_idx <span class="token operator">+=</span> <span class="token number">1</span>    batch_data <span class="token operator">=</span> prefetcher<span class="token punctuation">.</span><span class="token builtin">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>all_xs<span class="token punctuation">)</span><span class="token punctuation">:</span>    x_feats <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">with</span> profiler<span class="token punctuation">.</span>record_function<span class="token punctuation">(</span><span class="token string">"FORWARD-passing"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> x<span class="token punctuation">,</span> fc <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>all_xs<span class="token punctuation">,</span> self<span class="token punctuation">.</span>all_fcs<span class="token punctuation">)</span><span class="token punctuation">:</span>            x_feats<span class="token punctuation">.</span>append<span class="token punctuation">(</span>fc<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> profiler<span class="token punctuation">.</span>record_function<span class="token punctuation">(</span><span class="token string">"FORWARD-fusioning"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>fusion <span class="token operator">==</span> <span class="token string">'concat'</span><span class="token punctuation">:</span>            final <span class="token operator">=</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span>x_feats<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>            fc <span class="token operator">=</span> self<span class="token punctuation">.</span>fc<span class="token punctuation">(</span>final<span class="token punctuation">)</span>        <span class="token keyword">elif</span> self<span class="token punctuation">.</span>fusion <span class="token operator">==</span> <span class="token string">'sum'</span><span class="token punctuation">:</span>            x_feats <span class="token operator">=</span> torch<span class="token punctuation">.</span>stack<span class="token punctuation">(</span>x_feats<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>            <span class="token comment"># x_feats = torch.cat([torch.unsqueeze(x_feat, dim=0) for x_feat in x_feats])</span>            final <span class="token operator">=</span> torch<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>x_feats<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>            fc <span class="token operator">=</span> self<span class="token punctuation">.</span>fc<span class="token punctuation">(</span>final<span class="token punctuation">)</span>        <span class="token keyword">elif</span> self<span class="token punctuation">.</span>fusion <span class="token operator">==</span> <span class="token string">'outer'</span><span class="token punctuation">:</span>            bs <span class="token operator">=</span> x_feats<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>            device <span class="token operator">=</span> x_feats<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>device            _x_hs <span class="token operator">=</span> <span class="token punctuation">[</span>                torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">(</span>x_feat<span class="token punctuation">,</span> torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span>bs<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requires_grad<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">,</span> device<span class="token operator">=</span>device<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                          dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> x_feat <span class="token keyword">in</span> x_feats<span class="token punctuation">]</span>            fusion_xs <span class="token operator">=</span> <span class="token punctuation">[</span>torch<span class="token punctuation">.</span>matmul<span class="token punctuation">(</span>_x_h<span class="token punctuation">,</span> factor<span class="token punctuation">)</span> <span class="token keyword">for</span> _x_h<span class="token punctuation">,</span> factor <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>_x_hs<span class="token punctuation">,</span> self<span class="token punctuation">.</span>factors<span class="token punctuation">)</span><span class="token punctuation">]</span>            fusion_zy <span class="token operator">=</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span>mul<span class="token punctuation">,</span> fusion_xs<span class="token punctuation">)</span>            fc <span class="token operator">=</span> torch<span class="token punctuation">.</span>matmul<span class="token punctuation">(</span>self<span class="token punctuation">.</span>fusion_weights<span class="token punctuation">,</span> fusion_zy<span class="token punctuation">.</span>permute<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>fusion_bias            fc <span class="token operator">=</span> fc<span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">"Not implemented fusion method:&#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>fusion<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> fc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在IEG 原版上：有一定的提升：</p><p>一个epoch：<code>all_cuda=True</code></p><p><img src="/2021/02/04/pytorch-speed-up/image-20210205213212693.png" alt="image-20210205213212693"></p><p><code>all_cuda=False</code></p><p><img src="/2021/02/04/pytorch-speed-up/image-20210205213221551.png" alt="image-20210205213221551"></p><p>原来的：</p><p><img src="/2021/02/04/pytorch-speed-up/image-20210205213231966.png" alt="image-20210205213231966"></p><h1 id="待查看"><a href="#待查看" class="headerlink" title="待查看"></a>待查看</h1><p><a href="https://www.cnblogs.com/lylec/p/13597240.html">https://www.cnblogs.com/lylec/p/13597240.html</a></p><p><a href="https://tianws.github.io/skill/2019/08/27/gpu-volatile/">https://tianws.github.io/skill/2019/08/27/gpu-volatile/</a></p><h1 id="DALI使用"><a href="#DALI使用" class="headerlink" title="DALI使用"></a>DALI使用</h1><p>首先应该看看这个<a href="https://discuss.pytorch.org/t/speeding-up-dataloading-with-dali-tutorial/68130">Speeding up dataloading with DALI tutorial</a>，其中的post1 <a href="https://developer.nvidia.com/blog/case-study-resnet50-dali/">Case Study: ResNet50 with DALI</a>很重要</p><blockquote><p>To verify that CPU is indeed the bottleneck in our training, let’s conduct a simple experiment. Normally the preprocessing of dataset is performed on the CPU (using libraries like NumPy or Pillow) while the training runs on the GPU. Furthermore, they work in parallel – the CPU processing of a batch runs at the same time that the GPU conducts forward and back propagation of the previous batch.</p><p>Let’s compare the speed of a regular ResNet50 data processing pipeline and a synthetic pipeline, in which no data augmentation occurs, only training. At this point we don’t care that the neural network won’t train; all we need is to compare the performance of the two pipelines.</p><p><strong>If we observe no performance difference between these two pipelines in our experiment, then the CPU workload proves irrelevant</strong>. On the other hand, if we discover lower speed in the regular pipeline, it means that the CPU is the likely bottleneck for training.</p><p>Indeed, as table 1 shows, we observe a difference in the performance of these two pipelines. This observation indicates a bottleneck within the preprocessing pipeline occuring on the CPU. To address this situation, we can make use of DALI – the library exclusively designed to offload the preprocessing from CPU to GPU, thereby reducing or eliminating the CPU bottleneck.</p></blockquote><p>所以使用DALI之前，应该通过synthetic inputs来测试整个pipeline，比如如果很少用到augmentation，那么显然瓶颈应该不在这</p><p><a href="https://gitthhub.github.io/2019/08/26/pytorch-acc-dataloader/">PyTorch - Accelerate DataLoader</a> 其中提到，原博主自己使用过之后提升不明显</p><blockquote><p>实测效果与官方的transform比,速度提升不明显(约10%): FER-2013, batch&#x3D;256, epoch&#x3D;1, GPU&#x3D;0, 单GPU训练: 38s:43s FER-2013, batch&#x3D;256, epoch&#x3D;1, GPU&#x3D;0, 双GPU训练: 27s:34s 调整dali的num_threads对速度基本无影响 FER-2013, batch&#x3D;64, epoch&#x3D;1, GPU&#x3D;0, 双GPU训练: 41s:45s 在开始训练前, 官方的方法要等比较久的时间,而DALI开始的很快</p></blockquote><h1 id="Ravdess提速"><a href="#Ravdess提速" class="headerlink" title="Ravdess提速"></a>Ravdess提速</h1><h2 id="确认augmentation步骤费时"><a href="#确认augmentation步骤费时" class="headerlink" title="确认augmentation步骤费时"></a>确认augmentation步骤费时</h2><p>参照上面<a href="#DALI%E4%BD%BF%E7%94%A8">DALI 使用</a>，需要先把所有augmentation的步骤的关了进行对比</p><p>关闭augmentation：</p><p><img src="/2021/02/04/pytorch-speed-up/image-20210212144348576.png" alt="image-20210212144348576"></p><p><img src="/2021/02/04/pytorch-speed-up/image-20210212150043589.png" alt="image-20210212150043589"></p><p>开启单次augmentation：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">train_audio_transform <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token comment"># transforms.Resize((224, 224)),</span>    transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>train_image_transform <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>    transforms<span class="token punctuation">.</span>Resize<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    transforms<span class="token punctuation">.</span>RandomHorizontalFlip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    transforms<span class="token punctuation">.</span>RandomVerticalFlip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    transforms<span class="token punctuation">.</span>RandomRotation<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    transforms<span class="token punctuation">.</span>ColorJitter<span class="token punctuation">(</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">0.05</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/02/04/pytorch-speed-up/image-20210212144404990.png" alt="image-20210212144404990"></p><p><img src="/2021/02/04/pytorch-speed-up/image-20210212144650464.png" alt="image-20210212144650464"></p><p>增加的时间不多</p><p>如果把所有image的augmentation也关了，则：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">train_audio_transform <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token comment"># transforms.Resize((224, 224)),</span>    transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>train_image_transform <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token comment"># transforms.Resize((160, 160)),</span>    <span class="token comment"># transforms.RandomHorizontalFlip(),</span>    <span class="token comment"># transforms.RandomVerticalFlip(),</span>    <span class="token comment"># transforms.RandomRotation(10),</span>    <span class="token comment"># transforms.ColorJitter(0.05, 0.05, 0.05, 0.05),</span>    transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/02/04/pytorch-speed-up/image-20210212145640608.png" alt="image-20210212145640608"></p><p>也差不多要翻一倍</p><h2 id="实测单模态（image-x2F-audio），有无augmentation的区别"><a href="#实测单模态（image-x2F-audio），有无augmentation的区别" class="headerlink" title="实测单模态（image&#x2F;audio），有无augmentation的区别"></a>实测单模态（image&#x2F;audio），有无augmentation的区别</h2><p>audio由于本身就几乎没有augmentation（只有<code>totensor</code>），因此此处只记录一个情况：</p><p><img src="/2021/02/04/pytorch-speed-up/image-20210212233702896.png" alt="image-20210212233702896"></p><p><img src="/2021/02/04/pytorch-speed-up/image-20210212233729653.png" alt="image-20210212233729653"></p><p><img src="/2021/02/04/pytorch-speed-up/image-20210212233901416.png" alt="image-20210212233901416"></p><p>用时 111.650s</p><p>image下则显然更费时一些（哪怕完全关闭了augmentation）</p><p>完全没有augmentation：</p><pre class="line-numbers language-none"><code class="language-none">Save at &#x2F;home&#x2F;weitaotang&#x2F;multimodal&#x2F;pytorch_hydra_results_temp&#x2F;debug&#x2F;2021-02-12&#x2F;23-25-33-None<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/02/04/pytorch-speed-up/image-20210212233819006.png" alt="image-20210212233819006"></p><p><img src="/2021/02/04/pytorch-speed-up/image-20210212233939570.png" alt="image-20210212233939570"></p><p><img src="/2021/02/04/pytorch-speed-up/image-20210212233950162.png" alt="image-20210212233950162"></p><p>用时202.359s</p><p>单一augmentation：</p><p><img src="/2021/02/04/pytorch-speed-up/image-20210213001036258.png" alt="image-20210213001036258"></p><p><img src="/2021/02/04/pytorch-speed-up/image-20210213001049516.png" alt="image-20210213001049516"></p><p>用时201.045s</p><p>综合下来可以看到似乎差别不大</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;总体而言，主要从以下两个方面改善，不过能把第一个加速了就很好了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据预处理部分&lt;/li&gt;
&lt;li&gt;模型自身的部分&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2021/02/04/pytorch-speed-up/image-2021020</summary>
      
    
    
    
    <category term="pytorch" scheme="https://khalitt.github.io/categories/pytorch/"/>
    
    
    <category term="pytorch" scheme="https://khalitt.github.io/tags/pytorch/"/>
    
  </entry>
  
  <entry>
    <title>screen使用</title>
    <link href="https://khalitt.github.io/2021/02/04/screen-usage/"/>
    <id>https://khalitt.github.io/2021/02/04/screen-usage/</id>
    <published>2021-02-04T04:10:00.000Z</published>
    <updated>2021-02-04T04:15:28.169Z</updated>
    
    <content type="html"><![CDATA[<h1 id="修改srceenrc后不重启screen生效"><a href="#修改srceenrc后不重启screen生效" class="headerlink" title="修改srceenrc后不重启screen生效"></a>修改<code>srceenrc</code>后不重启screen生效</h1><p>来自 <a href="https://serverfault.com/questions/194597/how-to-reload-screenrc-without-restarting-screen">How to reload screenrc without restarting screen?</a></p><p><code>Ctrl-a :source ~/.screenrc</code>.</p><h1 id="开启自动刷新（altscreen）"><a href="#开启自动刷新（altscreen）" class="headerlink" title="开启自动刷新（altscreen）"></a>开启自动刷新（<code>altscreen</code>）</h1><p>具体原理说明参考：</p><ol><li><a href="https://serverfault.com/a/270169">GNU screen clearing on vim,less,etc. exit</a></li><li><a href="https://superuser.com/a/137751">Using screen, commands like less and man don’t clear the screen afterwards</a>，推荐，说的非常详细</li></ol><p>这是非常必要的设置，默认应该是关闭，则在使用vim等应用之后，上一页会残留，比如下面这样：</p><p><img src="/2021/02/04/screen-usage/image-20210204121301491.png" alt="image-20210204121301491"></p><p>开启<code>altscreen on</code>之后，编辑完直接退出，不会有残留</p><p><img src="/2021/02/04/screen-usage/image-20210204121411454.png" alt="image-20210204121411454"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;修改srceenrc后不重启screen生效&quot;&gt;&lt;a href=&quot;#修改srceenrc后不重启screen生效&quot; class=&quot;headerlink&quot; title=&quot;修改srceenrc后不重启screen生效&quot;&gt;&lt;/a&gt;修改&lt;code&gt;srceenrc&lt;/co</summary>
      
    
    
    
    <category term="linux" scheme="https://khalitt.github.io/categories/linux/"/>
    
    
    <category term="linux" scheme="https://khalitt.github.io/tags/linux/"/>
    
    <category term="screen" scheme="https://khalitt.github.io/tags/screen/"/>
    
  </entry>
  
  <entry>
    <title>解决Pytorch RuntimeError: element 0 of tensors does not require grad and does not have a grad_fn</title>
    <link href="https://khalitt.github.io/2021/02/03/problems-record/pytorch-does-not-require-grad-and-does-not-have-a-grad_fn/"/>
    <id>https://khalitt.github.io/2021/02/03/problems-record/pytorch-does-not-require-grad-and-does-not-have-a-grad_fn/</id>
    <published>2021-02-02T16:36:43.000Z</published>
    <updated>2021-02-03T06:09:56.361Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>使用IEG系列过程中，发生如下问题<code>RuntimeError: element 0 of tensors does not require grad and does not have a grad_fn</code>：</p><p><img src="/2021/02/03/problems-record/pytorch-does-not-require-grad-and-does-not-have-a-grad_fn/image-20210203004302851.png" alt="image-20210203004302851"></p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>模型写错了！！要注意要用meta module！！不能常规的<code>nn.Module</code>，因为这里面返回的<code>params</code>都是<code>nn.Paramter</code>而非像<code>MetaModule</code>那样是<code>torch.tensor</code></p><p><img src="/2021/02/03/problems-record/pytorch-does-not-require-grad-and-does-not-have-a-grad_fn/image-20210203004956976.png" alt="image-20210203004956976"></p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>直接改回来就好了！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;使用IEG系列过程中，发生如下问题&lt;code&gt;RuntimeError: element 0 of tensors does not req</summary>
      
    
    
    
    <category term="pytorch" scheme="https://khalitt.github.io/categories/pytorch/"/>
    
    
    <category term="pytorch" scheme="https://khalitt.github.io/tags/pytorch/"/>
    
  </entry>
  
  <entry>
    <title>pytorch nan处理</title>
    <link href="https://khalitt.github.io/2021/02/01/problems-record/pytorch-handling-nan/"/>
    <id>https://khalitt.github.io/2021/02/01/problems-record/pytorch-handling-nan/</id>
    <published>2021-02-01T12:36:37.000Z</published>
    <updated>2021-02-01T12:49:45.594Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>训练到中途出现Nan</p><p><img src="/2021/02/01/problems-record/pytorch-handling-nan/image-20210201204028670.png" alt="image-20210201204028670"></p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>暂时未知，按照 <a href="https://discuss.pytorch.org/t/weights-become-nan-values-after-first-batch-step/87594">Weights become NaN values after first batch step</a>中提到的方法：</p><ul><li><p><code>torch.autograd.set_detect_anomaly(True)</code></p></li><li><p>&#96;&#96;&#96;python<br>for name, param in model.named_parameters():<br>print(name, torch.isfinite(param.grad).all())</p><pre class="line-numbers language-none"><code class="language-none">好像在发生问题之前都是正常的：![image-20210201204550453](&#x2F;image-20210201204550453.png)![image-20210201204701789](&#x2F;image-20210201204701789.png)# 解决方法基本无解，只能做一个异常捕捉的处理&#96;&#96;&#96;python            loss &#x3D; (w_loss + eps_loss) &#x2F; 2. + un_loss + penalty            if torch.isnan(loss):                raise ValueError(f&quot;Found invalid nan trains at batch &#123;batch_idx&#125; &#x2F; epoch &#123;epoch&#125;&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>    res <span class="token operator">=</span> trainer<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">except</span> ValueError <span class="token keyword">as</span> e<span class="token punctuation">:</span>    logger<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">, return 0.0 res"</span></span><span class="token punctuation">)</span>    <span class="token keyword">break</span><span class="token keyword">if</span> res <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>    all_res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;训练到中途出现Nan&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2021/02/01/problems-record/pytorch-handli</summary>
      
    
    
    
    <category term="pytorch" scheme="https://khalitt.github.io/categories/pytorch/"/>
    
    
    <category term="pytorch" scheme="https://khalitt.github.io/tags/pytorch/"/>
    
  </entry>
  
  <entry>
    <title>hydra可重复性</title>
    <link href="https://khalitt.github.io/2021/02/01/problems-record/hydra-reproducibility/"/>
    <id>https://khalitt.github.io/2021/02/01/problems-record/hydra-reproducibility/</id>
    <published>2021-01-31T16:06:31.000Z</published>
    <updated>2021-01-31T16:20:51.345Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>虽然设置了pytorch和numpy的seed，然而同样的参数，用<code>joblib</code>跑出来的实验结果仍然是不同的，但是奇怪的是如果不用<code>joblib</code>，默认的launcher同样的参数直接跑却没问题</p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>具体原因不详，猜测是和<code>joblib</code>有关。后通过实验验证：在<code>main()</code>外面设置的seed，在<code>joblib</code>的环境下不起效。</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><h2 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h2><p>很简单，直接在<code>main()</code>函数内部设置<code>seed</code>就可以了</p><h2 id="pytorch"><a href="#pytorch" class="headerlink" title="pytorch"></a>pytorch</h2><p>稍微有点麻烦：</p><ul><li>如果不用gpu，即不设置CUDA相关的<code>deterministic</code>的行为，和numpy一样在<code>main</code>函数内部直接设置<code>seed</code>即可</li><li>但是如果要使用<code>gpu</code>，则大概率要设置CUDA相关的<code>deterministic</code>的参数，此时直接在<code>main()</code>内部设置<code>seed</code>将会直接报错：<code>TypeError: can&#39;t pickle CudnnModule objects</code>，后查阅资料，<a href="https://github.com/ray-project/ray/issues/8569#issuecomment-632993176">Can’t pickle CudnnModule objects</a>，发现ray也有这个问题，参考这个回答的做法就可以了</li></ul><h2 id="汇总"><a href="#汇总" class="headerlink" title="汇总"></a>汇总</h2><p>从原来的：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> logging<span class="token keyword">import</span> hydra<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> torchlogger <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>SEED <span class="token operator">=</span> <span class="token number">1234</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>SEED<span class="token punctuation">)</span>torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>deterministic <span class="token operator">=</span> <span class="token boolean">True</span>torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>benchmark <span class="token operator">=</span> <span class="token boolean">False</span>torch<span class="token punctuation">.</span>manual_seed<span class="token punctuation">(</span>SEED<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@hydra<span class="token punctuation">.</span>main</span><span class="token punctuation">(</span>config_path<span class="token operator">=</span><span class="token string">'./'</span><span class="token punctuation">,</span> config_name<span class="token operator">=</span><span class="token string">'myconfig_multi'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hydra_main</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># logger.info(f"num iter:&#123;config.num_iters&#125; pytorch int:&#123;torch.randint(10, (1,))&#125;")</span>    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"num iter:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span>num_iters<span class="token punctuation">&#125;</span></span><span class="token string"> int:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> pytorch int:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>torch<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    hydra_main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>改成下面这种</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> logging<span class="token keyword">import</span> hydra<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> torchlogger <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>SEED <span class="token operator">=</span> <span class="token number">1234</span><span class="token decorator annotation punctuation">@hydra<span class="token punctuation">.</span>main</span><span class="token punctuation">(</span>config_path<span class="token operator">=</span><span class="token string">'./'</span><span class="token punctuation">,</span> config_name<span class="token operator">=</span><span class="token string">'myconfig_multi'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hydra_main</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">import</span> torch    torch<span class="token punctuation">.</span>manual_seed<span class="token punctuation">(</span>SEED<span class="token punctuation">)</span>    torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>deterministic <span class="token operator">=</span> <span class="token boolean">True</span>    torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>benchmark <span class="token operator">=</span> <span class="token boolean">False</span>    np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>SEED<span class="token punctuation">)</span>    <span class="token comment"># logger.info(f"num iter:&#123;config.num_iters&#125; pytorch int:&#123;torch.randint(10, (1,))&#125;")</span>    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"num iter:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>config<span class="token punctuation">.</span>num_iters<span class="token punctuation">&#125;</span></span><span class="token string"> int:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> pytorch int:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>torch<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    hydra_main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>后面脚本的效果</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:23,724<span class="token punctuation">]</span><span class="token punctuation">[</span>HYDRA<span class="token punctuation">]</span> Joblib.Parallel<span class="token punctuation">(</span>n_jobs<span class="token operator">=</span><span class="token number">5</span>,backend<span class="token operator">=</span>loky,prefer<span class="token operator">=</span>processes,require<span class="token operator">=</span>None,verbose<span class="token operator">=</span><span class="token number">0</span>,timeout<span class="token operator">=</span>None,pre_dispatch<span class="token operator">=</span><span class="token number">2</span>*n_jobs,batch_size<span class="token operator">=</span>auto,temp_folder<span class="token operator">=</span>None,max_nbytes<span class="token operator">=</span>None,mmap_mode<span class="token operator">=</span>r<span class="token punctuation">)</span> is launching <span class="token number">10</span> <span class="token function">jobs</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:23,725<span class="token punctuation">]</span><span class="token punctuation">[</span>HYDRA<span class="token punctuation">]</span> Launching jobs, sweep output <span class="token function">dir</span> <span class="token builtin class-name">:</span> multirun/2021-02-01/00-18-21<span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:23,725<span class="token punctuation">]</span><span class="token punctuation">[</span>HYDRA<span class="token punctuation">]</span>        <span class="token comment">#0 : num_iters=0</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:23,725<span class="token punctuation">]</span><span class="token punctuation">[</span>HYDRA<span class="token punctuation">]</span>        <span class="token comment">#1 : num_iters=1</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:23,725<span class="token punctuation">]</span><span class="token punctuation">[</span>HYDRA<span class="token punctuation">]</span>        <span class="token comment">#2 : num_iters=2</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:23,725<span class="token punctuation">]</span><span class="token punctuation">[</span>HYDRA<span class="token punctuation">]</span>        <span class="token comment">#3 : num_iters=3</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:23,725<span class="token punctuation">]</span><span class="token punctuation">[</span>HYDRA<span class="token punctuation">]</span>        <span class="token comment">#4 : num_iters=4</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:23,726<span class="token punctuation">]</span><span class="token punctuation">[</span>HYDRA<span class="token punctuation">]</span>        <span class="token comment">#5 : num_iters=5</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:23,726<span class="token punctuation">]</span><span class="token punctuation">[</span>HYDRA<span class="token punctuation">]</span>        <span class="token comment">#6 : num_iters=6</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:23,726<span class="token punctuation">]</span><span class="token punctuation">[</span>HYDRA<span class="token punctuation">]</span>        <span class="token comment">#7 : num_iters=7</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:23,726<span class="token punctuation">]</span><span class="token punctuation">[</span>HYDRA<span class="token punctuation">]</span>        <span class="token comment">#8 : num_iters=8</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:23,726<span class="token punctuation">]</span><span class="token punctuation">[</span>HYDRA<span class="token punctuation">]</span>        <span class="token comment">#9 : num_iters=9</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:52,994<span class="token punctuation">]</span><span class="token punctuation">[</span>__main__<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - num iter:0 int:3 pytorch int:2<span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:53,089<span class="token punctuation">]</span><span class="token punctuation">[</span>__main__<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - num iter:1 int:3 pytorch int:2<span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:53,350<span class="token punctuation">]</span><span class="token punctuation">[</span>__main__<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - num iter:2 int:3 pytorch int:2<span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:54,099<span class="token punctuation">]</span><span class="token punctuation">[</span>__main__<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - num iter:4 int:3 pytorch int:2<span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:54,232<span class="token punctuation">]</span><span class="token punctuation">[</span>__main__<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - num iter:3 int:3 pytorch int:2<span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:54,610<span class="token punctuation">]</span><span class="token punctuation">[</span>__main__<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - num iter:5 int:3 pytorch int:2<span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:54,740<span class="token punctuation">]</span><span class="token punctuation">[</span>__main__<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - num iter:6 int:3 pytorch int:2<span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:54,860<span class="token punctuation">]</span><span class="token punctuation">[</span>__main__<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - num iter:7 int:3 pytorch int:2<span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:55,134<span class="token punctuation">]</span><span class="token punctuation">[</span>__main__<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - num iter:8 int:3 pytorch int:2<span class="token punctuation">[</span><span class="token number">2021</span>-02-01 00:18:55,147<span class="token punctuation">]</span><span class="token punctuation">[</span>__main__<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - num iter:9 int:3 pytorch int:2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;虽然设置了pytorch和numpy的seed，然而同样的参数，用&lt;code&gt;joblib&lt;/code&gt;跑出来的实验结果仍然是不同的，但是奇</summary>
      
    
    
    
    <category term="hydra" scheme="https://khalitt.github.io/categories/hydra/"/>
    
    
    <category term="hydra" scheme="https://khalitt.github.io/tags/hydra/"/>
    
    <category term="joblib" scheme="https://khalitt.github.io/tags/joblib/"/>
    
  </entry>
  
  <entry>
    <title>pytorch不同Dataloader实现方式的比较</title>
    <link href="https://khalitt.github.io/2021/01/21/problems-record/comparision-different_loading_methods/"/>
    <id>https://khalitt.github.io/2021/01/21/problems-record/comparision-different_loading_methods/</id>
    <published>2021-01-21T07:15:16.000Z</published>
    <updated>2021-01-21T07:57:23.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>主要是两种实现方式：</p><ul><li>同一个数据集，按照不同split的方式切分（比如5 Fold Validation），保存到本地，然后依次读入5种split</li><li>同一个数据集，全部一次性读入，然后按照不同的split的方式进行切分，按照迭代器或者生成器的方式返回切分后的dataset或者Dataloader</li></ul><p>核心代码：</p><p>第一种方式</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Reuters</span><span class="token punctuation">(</span>BaseDataLoader<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> root<span class="token punctuation">,</span> batch_size<span class="token punctuation">,</span> dataset_type<span class="token punctuation">,</span> noise_type<span class="token punctuation">,</span> noise_rate<span class="token punctuation">,</span> seed<span class="token punctuation">,</span> balance<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                 modalities<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> num_workers<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>dataset <span class="token operator">=</span> ReutersDataset<span class="token punctuation">(</span>root<span class="token punctuation">,</span> dataset_type<span class="token punctuation">,</span> noise_type<span class="token punctuation">,</span> noise_rate<span class="token punctuation">,</span> seed<span class="token punctuation">,</span> balance<span class="token punctuation">,</span> modalities<span class="token punctuation">)</span>        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'&#123;&#125; dataset with &#123;&#125; samples'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>dataset_type<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>dataset<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">.</span>dataset<span class="token punctuation">,</span> batch_size<span class="token punctuation">,</span> shuffle<span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> num_workers<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二种方式：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">get_reuters_cv_dataloader</span><span class="token punctuation">(</span>og_data<span class="token punctuation">,</span> batch_size<span class="token punctuation">,</span> noise_type<span class="token punctuation">,</span> noise_rate<span class="token punctuation">,</span> n_classes<span class="token punctuation">,</span> seed<span class="token punctuation">,</span> val_test_split<span class="token punctuation">,</span> n_splits<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>                              deal_imbalance<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                              modalities<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> num_workers<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># List[Dataset]</span>    all_train_dataset<span class="token punctuation">,</span> all_val_dataset<span class="token punctuation">,</span> all_test_dataset <span class="token operator">=</span> get_reuters_cv_dataset<span class="token punctuation">(</span>og_data<span class="token punctuation">,</span> noise_type<span class="token punctuation">,</span> noise_rate<span class="token punctuation">,</span>                                                                                  n_classes<span class="token punctuation">,</span> seed<span class="token punctuation">,</span> val_test_split<span class="token punctuation">,</span>                                                                                  n_splits<span class="token operator">=</span>n_splits<span class="token punctuation">,</span>                                                                                  deal_imbalance<span class="token operator">=</span>deal_imbalance<span class="token punctuation">,</span>                                                                                  modalities<span class="token operator">=</span>modalities<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n_splits<span class="token punctuation">)</span><span class="token punctuation">:</span>        train_data_loader <span class="token operator">=</span> BaseDataLoader<span class="token punctuation">(</span>all_train_dataset<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> batch_size<span class="token punctuation">,</span> shuffle<span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> num_workers<span class="token punctuation">)</span>        val_data_loader <span class="token operator">=</span> BaseDataLoader<span class="token punctuation">(</span>all_val_dataset<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> batch_size<span class="token punctuation">,</span> shuffle<span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> num_workers<span class="token punctuation">)</span>        test_data_loader <span class="token operator">=</span> BaseDataLoader<span class="token punctuation">(</span>all_test_dataset<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> batch_size<span class="token punctuation">,</span> shuffle<span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> num_workers<span class="token punctuation">)</span>        <span class="token keyword">yield</span> train_data_loader<span class="token punctuation">,</span> val_data_loader<span class="token punctuation">,</span> test_data_loader<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h1><p>比较的方式：5种切分方式（5 Fold Validation），跑10次取平均，并输出每一次两种初始化方式的总时间</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">from</span> omegaconf <span class="token keyword">import</span> OmegaConf<span class="token keyword">from</span> srcs<span class="token punctuation">.</span>data_loader<span class="token punctuation">.</span>all_data_loaders <span class="token keyword">import</span> get_reuters_cv_dataloader<span class="token keyword">from</span> srcs<span class="token punctuation">.</span>utils <span class="token keyword">import</span> instantiateconfig <span class="token operator">=</span> OmegaConf<span class="token punctuation">.</span>load<span class="token punctuation">(</span>    <span class="token string">'/home/weitaotang/multimodal/hydra_templates/srcs/independent_utlis/test_different_loaders/reuters_all_cv_train.yaml'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">independent_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    begin <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>n_splits<span class="token punctuation">)</span><span class="token punctuation">:</span>        config<span class="token punctuation">.</span>root <span class="token operator">=</span> config<span class="token punctuation">.</span>root<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>        train_data_loader <span class="token operator">=</span> instantiate<span class="token punctuation">(</span>config<span class="token punctuation">.</span>train<span class="token punctuation">)</span>        valid_data_loader <span class="token operator">=</span> instantiate<span class="token punctuation">(</span>config<span class="token punctuation">.</span>val<span class="token punctuation">)</span>        test_data_loader <span class="token operator">=</span> instantiate<span class="token punctuation">(</span>config<span class="token punctuation">.</span>test<span class="token punctuation">)</span>        <span class="token comment"># end = time.time()</span>        <span class="token comment"># print("Split &#123;&#125; used &#123;:.3f&#125;s".format(i, end - begin))</span>    end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Independent init used &#123;:.3f&#125; seconds'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end <span class="token operator">-</span> begin<span class="token punctuation">)</span><span class="token punctuation">)</span>    res <span class="token operator">=</span> end <span class="token operator">-</span> begin    <span class="token keyword">return</span> res<span class="token keyword">def</span> <span class="token function">all_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    begin <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    cv_dataloader <span class="token operator">=</span> get_reuters_cv_dataloader<span class="token punctuation">(</span>config<span class="token punctuation">.</span>og_data<span class="token punctuation">,</span> config<span class="token punctuation">.</span>batch_size<span class="token punctuation">,</span> config<span class="token punctuation">.</span>noise_type<span class="token punctuation">,</span> config<span class="token punctuation">.</span>noise_rate<span class="token punctuation">,</span>                                              config<span class="token punctuation">.</span>n_classes<span class="token punctuation">,</span> config<span class="token punctuation">.</span>seed<span class="token punctuation">,</span> config<span class="token punctuation">.</span>val_test_split<span class="token punctuation">,</span>                                              config<span class="token punctuation">.</span>n_splits<span class="token punctuation">,</span> config<span class="token punctuation">.</span>deal_imbalance<span class="token punctuation">,</span> config<span class="token punctuation">.</span>modalities<span class="token punctuation">,</span>                                              config<span class="token punctuation">.</span>num_workers<span class="token punctuation">,</span> config<span class="token punctuation">.</span>shuffle<span class="token punctuation">)</span>    <span class="token comment"># cv_dataloader_iter = iter(cv_dataloader)</span>    <span class="token comment"># train, valid, test = next(cv_dataloader_iter)</span>    <span class="token keyword">for</span> i<span class="token punctuation">,</span> <span class="token punctuation">(</span>train<span class="token punctuation">,</span> valid<span class="token punctuation">,</span> test<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>cv_dataloader<span class="token punctuation">)</span><span class="token punctuation">:</span>        end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># print("Split &#123;&#125; used &#123;:.3f&#125;s".format(i, end - begin))</span>        <span class="token keyword">pass</span>    end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'ALL init used &#123;:.3f&#125; seconds'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end <span class="token operator">-</span> begin<span class="token punctuation">)</span><span class="token punctuation">)</span>    res <span class="token operator">=</span> end <span class="token operator">-</span> begin    <span class="token keyword">return</span> res<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    all_res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        all_res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>independent_init<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        all_res<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>all_init<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Independent avg:&#123;:.6f&#125; | all avg: &#123;:.6f&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">(</span>all_res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1.</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>all_res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                                            <span class="token builtin">sum</span><span class="token punctuation">(</span>all_res<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1.</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>all_res<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Independent init used <span class="token number">6.621</span> secondsALL init used <span class="token number">6.215</span> secondsIndependent init used <span class="token number">6.875</span> secondsALL init used <span class="token number">6.074</span> secondsIndependent init used <span class="token number">6.661</span> secondsALL init used <span class="token number">6.247</span> secondsIndependent init used <span class="token number">6.416</span> secondsALL init used <span class="token number">5.833</span> secondsIndependent init used <span class="token number">6.244</span> secondsALL init used <span class="token number">6.292</span> secondsIndependent init used <span class="token number">7.124</span> secondsALL init used <span class="token number">5.922</span> secondsIndependent init used <span class="token number">6.636</span> secondsALL init used <span class="token number">6.253</span> secondsIndependent init used <span class="token number">6.307</span> secondsALL init used <span class="token number">6.150</span> secondsIndependent init used <span class="token number">6.520</span> secondsALL init used <span class="token number">5.989</span> secondsIndependent init used <span class="token number">6.841</span> secondsALL init used <span class="token number">6.281</span> secondsIndependent avg:6.624528 <span class="token operator">|</span> all avg: <span class="token number">6.125607</span>Process finished with <span class="token builtin class-name">exit</span> code <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到总体上还是<strong>方式二快一些</strong>，<strong>直接读入所有数据然后直接进行处理</strong>。<strong>但是弊端也比较明显</strong>：</p><ul><li>不够灵活，比如不想进行validation的时候，就需要另外再重新实现</li><li>占用内存可能较大，比如不想载入全部数据时候，等于浪费了内存</li></ul><p>因此如果<strong>不是密集io的情况，方式一就够了，更灵活</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;主要是两种实现方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同一个数据集，按照不同split的方式切分（比如5 Fold Validation），保存到</summary>
      
    
    
    
    <category term="python" scheme="https://khalitt.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://khalitt.github.io/tags/python/"/>
    
    <category term="io" scheme="https://khalitt.github.io/tags/io/"/>
    
  </entry>
  
  <entry>
    <title>hydra optuna sweeper TypeError: &#39;float&#39; object is not iterable的错误</title>
    <link href="https://khalitt.github.io/2021/01/20/problems-record/hydra-optuna-TypeError/"/>
    <id>https://khalitt.github.io/2021/01/20/problems-record/hydra-optuna-TypeError/</id>
    <published>2021-01-20T08:42:06.000Z</published>
    <updated>2021-01-20T12:47:28.710Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>不论是直接跑 <a href="https://github.com/toshihikoyanase/hydra-optuna-sweeper">hydra-optuna-sweeper</a>或者 <a href="https://github.com/facebookresearch">facebookresearch</a>&#x2F;**<a href="https://github.com/facebookresearch/hydra">hydra</a>**的官方例子，都会报错<code>TypeError: &#39;float&#39; object is not iterable</code></p><p><img src="/2021/01/20/problems-record/hydra-optuna-TypeError/image-20210120164237711.png" alt="image-20210120164237711"></p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>optuna从2.4.0开始之后，要求主函数的返回的结果必须得是<code>List[]</code>类型的。这里出错的阶段是把运行结果<code>tell</code>给optuna的过程中，返回的结果是单一的float而不是list</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>在返回结果中添加一个<code>list</code>即可</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> Any<span class="token keyword">import</span> hydra<span class="token keyword">from</span> omegaconf <span class="token keyword">import</span> DictConfig<span class="token decorator annotation punctuation">@hydra<span class="token punctuation">.</span>main</span><span class="token punctuation">(</span>config_path<span class="token operator">=</span><span class="token string">"conf"</span><span class="token punctuation">,</span> config_name<span class="token operator">=</span><span class="token string">"config"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">evaluate</span><span class="token punctuation">(</span>cfg<span class="token punctuation">:</span> DictConfig<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> Any<span class="token punctuation">:</span>    x <span class="token operator">=</span> cfg<span class="token punctuation">.</span>x    y <span class="token operator">=</span> cfg<span class="token punctuation">.</span>y    <span class="token comment"># return (x - 2) ** 2 + y # 报错的原版</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> y<span class="token punctuation">]</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    evaluate<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;不论是直接跑 &lt;a href=&quot;https://github.com/toshihikoyanase/hydra-optuna-sweepe</summary>
      
    
    
    
    <category term="optuna" scheme="https://khalitt.github.io/categories/optuna/"/>
    
    
    <category term="hydra" scheme="https://khalitt.github.io/tags/hydra/"/>
    
    <category term="optuna" scheme="https://khalitt.github.io/tags/optuna/"/>
    
  </entry>
  
  <entry>
    <title>docker-mongodb-sacred</title>
    <link href="https://khalitt.github.io/2021/01/19/problems-record/docker-mongdb-sacred/"/>
    <id>https://khalitt.github.io/2021/01/19/problems-record/docker-mongdb-sacred/</id>
    <published>2021-01-19T07:17:46.000Z</published>
    <updated>2021-01-19T13:42:37.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Exit-100-的问题"><a href="#Exit-100-的问题" class="headerlink" title="Exit(100)的问题"></a>Exit(100)的问题</h1><p>尝试用下述的命令启动MongoDB：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run <span class="token parameter variable">--name</span> mongo <span class="token parameter variable">-p</span> <span class="token number">27018</span>:27018 <span class="token parameter variable">-v</span> /home/weitaotang/multimodal/pytorch_hydra_results_temp/mongo_data:/data/db mongo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/01/19/problems-record/docker-mongdb-sacred/image-20210119152405533.png" alt="image-20210119152405533"></p><p>猜测应该是权限问题，根据 <a href="https://stackoverflow.com/a/44782245">Permission error with mongo when running docker</a>：最佳的解决方法<strong>是不挂载，后期单独导出即可</strong></p><p>但是这里还是想存到一个固定的地方，则这里只可以存在<code>/tmp</code>旗下的地方，不好。最好还是定期的export即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Exit-100-的问题&quot;&gt;&lt;a href=&quot;#Exit-100-的问题&quot; class=&quot;headerlink&quot; title=&quot;Exit(100)的问题&quot;&gt;&lt;/a&gt;Exit(100)的问题&lt;/h1&gt;&lt;p&gt;尝试用下述的命令启动MongoDB：&lt;/p&gt;
&lt;pre cl</summary>
      
    
    
    
    <category term="problems" scheme="https://khalitt.github.io/categories/problems/"/>
    
    
    <category term="docker" scheme="https://khalitt.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>ipython无法启动</title>
    <link href="https://khalitt.github.io/2021/01/13/problems-record/ipython-hanging/"/>
    <id>https://khalitt.github.io/2021/01/13/problems-record/ipython-hanging/</id>
    <published>2021-01-13T01:41:50.000Z</published>
    <updated>2021-01-13T07:04:33.545Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>ipython无法启动：</p><ul><li>无法使用remote debugger，表现为在ipython console中一输入命令就卡死。而后尝试单独用ipython&#x2F;ipdb，发现症状类似，同样是输入ipython就会卡死</li><li>细查进程，发现一旦在ipython console开始输入命令后，就从原来的<code>SL+</code>变成了<code>DL+</code></li><li><code>ipython --log-version=DEBUG</code>发现卡死在搜索config中</li></ul><p><img src="/2021/01/13/problems-record/ipython-hanging/image-20210113111830260.png" alt="image-20210113111830260"></p><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>参考 <a href="https://github.com/ipython/ipython/issues/11678#issuecomment-527597571">ipython won’t start</a></p><p>NFS文件系统挂载目录发生了变化，导致默认的sqlite无法使用。</p><blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#  By default, IPython will put the history database in the IPython profile</span><span class="token comment">#  directory.  If you would rather share one history among profiles, you can set</span><span class="token comment">#  this value in each, so that they are consistent.</span><span class="token comment">#</span><span class="token comment">#  Due to an issue with fcntl, SQLite is known to misbehave on some NFS mounts.</span><span class="token comment">#  If you see IPython hanging, try setting this to something on a local disk,</span><span class="token comment">#  e.g::</span><span class="token comment">#</span><span class="token comment">#      ipython --HistoryManager.hist_file=/tmp/ipython_hist.sqlite</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><ol><li>通过<code>ipython create profile</code>在<code>~/.ipython/profile_default</code>下创建两个config python脚本：<code>ipython_config.py</code> 和<code>ipython_kernel_config.py</code></li><li>修改<code>ipython_config.py</code>中的<code>c.HistoryAccessor.hist_file</code>为有效的目录，比如按照注释中的<code>/tmp/ipython_hist.sqlite</code>（**推荐：由于NFS存在问题，因此最好在<code>/tmp</code>目录下创建属于自己的<code>sqlite</code>，比如<code>/tmp/xiaoming_ipython_hist.sqlite</code>**）：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">c.HistoryAccessor.hist_file <span class="token operator">=</span> <span class="token string">'/tmp/ipython_hist.sqlite'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h1><h2 id="修改ipython默认的configure-files"><a href="#修改ipython默认的configure-files" class="headerlink" title="修改ipython默认的configure files"></a>修改ipython默认的configure files</h2><p>参考 <a href="https://stackoverflow.com/a/28254181">Setting iPython default profile</a></p><p>最简单的方法是<strong>直接修改<code>profile_default</code>中的文件</strong>，或者<strong>启动时指定<code>profile</code>：<code>--profile=testing</code></strong></p><blockquote><p>Take a backup of profile_default and then rename profile_testing to profile_default.</p><p>Or you can copy the contents of profile_testing to profile_default.</p></blockquote><h2 id="jupyter-notebook有类似的hanging的问题"><a href="#jupyter-notebook有类似的hanging的问题" class="headerlink" title="jupyter notebook有类似的hanging的问题"></a>jupyter notebook有类似的hanging的问题</h2><p>原因和ipython hanging的原因一样，因此解决方法类似：</p><ol><li>如果没有config文件， 首先通过<code>jupyter notebook --generate-config</code></li><li>然后在<code>~/.jupyter</code>下找到<code>jupyter_notebook_config.py</code>，然后编辑其中的<code>NotebookNotary.db_fileUnicode</code>选项</li></ol><blockquote><p>NotebookNotary.db_fileUnicode</p><p>Default: <code>&#39;&#39;</code></p><p>The sqlite file in which to store notebook signatures. By default, this will be in your Jupyter data directory. You can set it to ‘:memory:’ to disable sqlite writing to the filesystem.</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">## The sqlite file in which to store notebook signatures. By default, this will</span><span class="token comment">#  be in your Jupyter data directory. You can set it to ':memory:' to disable</span><span class="token comment">#  sqlite writing to the filesystem.</span>c<span class="token punctuation">.</span>NotebookNotary<span class="token punctuation">.</span>db_file <span class="token operator">=</span> <span class="token string">'/tmp/weitaotang_jupyter.sqlite'</span><span class="token comment">#c.NotebookNotary.db_file = ''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;ipython无法启动：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法使用remote debugger，表现为在ipython console中一输入命</summary>
      
    
    
    
    <category term="problems" scheme="https://khalitt.github.io/categories/problems/"/>
    
    
    <category term="ipython" scheme="https://khalitt.github.io/tags/ipython/"/>
    
  </entry>
  
  <entry>
    <title>experiments-record</title>
    <link href="https://khalitt.github.io/2021/01/12/experiments-record/"/>
    <id>https://khalitt.github.io/2021/01/12/experiments-record/</id>
    <published>2021-01-12T04:41:49.000Z</published>
    <updated>2021-02-28T01:09:18.607Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Image单模态，LR设为0-1不可训练（不可行）"><a href="#Image单模态，LR设为0-1不可训练（不可行）" class="headerlink" title="Image单模态，LR设为0.1不可训练（不可行）"></a>Image单模态，LR设为0.1不可训练（不可行）</h1><p><strong>并没有tanaka在joint optimization中提到的high learning rate能有助于不学习label noise</strong></p><p>可以看到symmetric 0.4或者asymmetric 0.6在lr 0.1(10x)的情况下，准确率很差</p><p><img src="/2021/01/12/experiments-record/image-20210112124443147.png" alt="image-20210112124443147"></p><ul><li>symmetric noise 0.4，lr 0.1 vs lr 0.01</li></ul><p><img src="/2021/01/12/experiments-record/image-20210112124654925.png" alt="image-20210112124654925"></p><ul><li>asymmetric 0.4 lr 0.1 vs lr 0.01</li></ul><p><img src="/2021/01/12/experiments-record/image-20210112124934367.png" alt="image-20210112124934367"></p><h2 id="LR设为0-05-0-005也不可行"><a href="#LR设为0-05-0-005也不可行" class="headerlink" title="LR设为0.05 0.005也不可行"></a>LR设为0.05 0.005也不可行</h2><ul><li>symmetric noise 0.4的情况下，对比可以看到0.1，0.05,0.005都不太行，只有0.01比较好</li></ul><p><img src="/2021/01/12/experiments-record/image-20210112142024373.png" alt="image-20210112142024373"></p><p>看loss也可以一开始的loss都是不太一样的，但是后面越训练越趋近</p><p><img src="/2021/01/12/experiments-record/image-20210112142103537.png" alt="image-20210112142103537"></p><h1 id="T-Revision-MNIST测试"><a href="#T-Revision-MNIST测试" class="headerlink" title="T Revision MNIST测试"></a>T Revision MNIST测试</h1><h2 id="symmetric-noise-0-4"><a href="#symmetric-noise-0-4" class="headerlink" title="symmetric noise 0.4"></a>symmetric noise 0.4</h2><h3 id="默认参数测试"><a href="#默认参数测试" class="headerlink" title="默认参数测试"></a>默认参数测试</h3><p>MNIST 默认<code>batch_size=128</code>来看，估计的还算比较准确</p><p><img src="/2021/01/12/experiments-record/image-20210112142453614.png" alt="image-20210112142453614"></p><h4 id="batch-size-12800-lr-0-1"><a href="#batch-size-12800-lr-0-1" class="headerlink" title="batch_size = 12800, lr = 0.1"></a><code>batch_size = 12800, lr = 0.1</code></h4><p>可以看到效果更差了，还是默认的参数比较好。<strong>而且也和估计前学习到的classifier有关</strong></p><p><img src="/2021/01/12/experiments-record/image-20210112144126932.png" alt="image-20210112144126932"></p><h2 id="asymmetric-noise-0-4"><a href="#asymmetric-noise-0-4" class="headerlink" title="asymmetric noise 0.4"></a>asymmetric noise 0.4</h2><h4 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Estimated transition matrix:tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">7</span>.2138e-01, <span class="token number">2</span>.7854e-01, <span class="token number">3</span>.0262e-06, <span class="token number">3</span>.6738e-07, <span class="token number">1</span>.2981e-07, <span class="token number">5</span>.1001e-06,         <span class="token number">1</span>.8148e-05, <span class="token number">3</span>.1714e-05, <span class="token number">1</span>.3197e-06, <span class="token number">1</span>.8157e-05<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">5</span>.7726e-04, <span class="token number">6</span>.2115e-01, <span class="token number">3</span>.7681e-01, <span class="token number">1</span>.3360e-04, <span class="token number">3</span>.5784e-04, <span class="token number">8</span>.6032e-05,         <span class="token number">5</span>.3814e-05, <span class="token number">1</span>.9459e-04, <span class="token number">4</span>.5552e-04, <span class="token number">1</span>.8873e-04<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">9</span>.7088e-06, <span class="token number">8</span>.9477e-04, <span class="token number">6</span>.8011e-01, <span class="token number">3</span>.0870e-01, <span class="token number">6</span>.0487e-03, <span class="token number">1</span>.5677e-04,         <span class="token number">2</span>.0933e-04, <span class="token number">3</span>.5460e-04, <span class="token number">3</span>.0163e-03, <span class="token number">4</span>.9286e-04<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">1</span>.3503e-05, <span class="token number">7</span>.5012e-05, <span class="token number">9</span>.7758e-04, <span class="token number">5</span>.4234e-01, <span class="token number">4</span>.5637e-01, <span class="token number">1</span>.6872e-04,         <span class="token number">5</span>.0566e-05, <span class="token number">1</span>.7940e-07, <span class="token number">3</span>.3701e-06, <span class="token number">8</span>.3027e-06<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">4</span>.8065e-06, <span class="token number">9</span>.4964e-06, <span class="token number">6</span>.2487e-05, <span class="token number">3</span>.7153e-05, <span class="token number">7</span>.0554e-01, <span class="token number">2</span>.9411e-01,         <span class="token number">1</span>.7484e-04, <span class="token number">4</span>.4826e-05, <span class="token number">8</span>.6875e-06, <span class="token number">5</span>.9524e-06<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">7</span>.3357e-05, <span class="token number">1</span>.3101e-05, <span class="token number">1</span>.3800e-06, <span class="token number">5</span>.4869e-05, <span class="token number">6</span>.3327e-04, <span class="token number">6</span>.3130e-01,         <span class="token number">3</span>.6769e-01, <span class="token number">9</span>.2295e-05, <span class="token number">6</span>.4091e-05, <span class="token number">7</span>.0743e-05<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">1</span>.5855e-03, <span class="token number">8</span>.7621e-04, <span class="token number">3</span>.1088e-05, <span class="token number">7</span>.7596e-06, <span class="token number">6</span>.9697e-05, <span class="token number">2</span>.1452e-02,         <span class="token number">6</span>.4550e-01, <span class="token number">3</span>.3030e-01, <span class="token number">6</span>.9375e-05, <span class="token number">1</span>.0396e-04<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">8</span>.1278e-04, <span class="token number">2</span>.3544e-04, <span class="token number">5</span>.0871e-05, <span class="token number">7</span>.7580e-05, <span class="token number">7</span>.5762e-05, <span class="token number">8</span>.7224e-04,         <span class="token number">3</span>.7420e-04, <span class="token number">6</span>.6014e-01, <span class="token number">3</span>.3609e-01, <span class="token number">1</span>.2711e-03<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">1</span>.9071e-03, <span class="token number">3</span>.5230e-04, <span class="token number">2</span>.1717e-03, <span class="token number">9</span>.8912e-04, <span class="token number">1</span>.4255e-03, <span class="token number">3</span>.2609e-04,         <span class="token number">2</span>.6533e-04, <span class="token number">1</span>.0653e-04, <span class="token number">6</span>.1251e-01, <span class="token number">3</span>.7995e-01<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">4</span>.0376e-01, <span class="token number">5</span>.3920e-07, <span class="token number">3</span>.7207e-07, <span class="token number">5</span>.6868e-06, <span class="token number">4</span>.2000e-04, <span class="token number">1</span>.2035e-04,         <span class="token number">7</span>.1814e-07, <span class="token number">1</span>.5838e-04, <span class="token number">2</span>.0765e-04, <span class="token number">5</span>.9533e-01<span class="token punctuation">]</span><span class="token punctuation">]</span>, <span class="token assign-left variable">device</span><span class="token operator">=</span><span class="token string">'cuda:0'</span><span class="token punctuation">)</span>True transition matrix:<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span><span class="token punctuation">]</span><span class="token punctuation">]</span>The estimation error is <span class="token number">0.11802714886404604</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总体还是估计的比较准</p><h1 id="T-Revision-CIFAR10测试"><a href="#T-Revision-CIFAR10测试" class="headerlink" title="T Revision CIFAR10测试"></a>T Revision CIFAR10测试</h1><h2 id="symmetric-noise-0-4-1"><a href="#symmetric-noise-0-4-1" class="headerlink" title="symmetric noise 0.4"></a>symmetric noise 0.4</h2><p>默认参数</p><ul><li>可以看到还是有一定的准确率的，至少能够保证对角线上的元素不会接近于1，但同时也是同一行最大的元素</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>       <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>       <span class="token punctuation">]</span><span class="token punctuation">]</span>Val Loss: <span class="token number">1.945421</span>, Acc: <span class="token number">0.431000</span>                                                                                                                                                                     <span class="token punctuation">[</span><span class="token number">0</span>/373<span class="token punctuation">]</span>epoch <span class="token number">20</span>Train Loss: <span class="token number">1.740070</span>, Acc: <span class="token number">0.479556</span>Val Loss: <span class="token number">1.973744</span>, Acc: <span class="token number">0.431400</span>Estimated transition matrix:tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.4469</span>, <span class="token number">0.0260</span>, <span class="token number">0.1041</span>, <span class="token number">0.0390</span>, <span class="token number">0.1306</span>, <span class="token number">0.0741</span>, <span class="token number">0.0450</span>, <span class="token number">0.0878</span>, <span class="token number">0.0115</span>,         <span class="token number">0.0351</span><span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">0.0220</span>, <span class="token number">0.6145</span>, <span class="token number">0.0254</span>, <span class="token number">0.0339</span>, <span class="token number">0.0490</span>, <span class="token number">0.0716</span>, <span class="token number">0.0512</span>, <span class="token number">0.0372</span>, <span class="token number">0.0461</span>,         <span class="token number">0.0492</span><span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">0.0606</span>, <span class="token number">0.0301</span>, <span class="token number">0.4259</span>, <span class="token number">0.0794</span>, <span class="token number">0.0816</span>, <span class="token number">0.0407</span>, <span class="token number">0.0582</span>, <span class="token number">0.0853</span>, <span class="token number">0.0927</span>,         <span class="token number">0.0454</span><span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">0.0399</span>, <span class="token number">0.0185</span>, <span class="token number">0.0344</span>, <span class="token number">0.5259</span>, <span class="token number">0.0116</span>, <span class="token number">0.1639</span>, <span class="token number">0.0885</span>, <span class="token number">0.0600</span>, <span class="token number">0.0253</span>,         <span class="token number">0.0321</span><span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">0.0338</span>, <span class="token number">0.0265</span>, <span class="token number">0.0805</span>, <span class="token number">0.0910</span>, <span class="token number">0.5191</span>, <span class="token number">0.0445</span>, <span class="token number">0.0589</span>, <span class="token number">0.0735</span>, <span class="token number">0.0252</span>,         <span class="token number">0.0470</span><span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">0.0309</span>, <span class="token number">0.0330</span>, <span class="token number">0.0383</span>, <span class="token number">0.0972</span>, <span class="token number">0.0380</span>, <span class="token number">0.4335</span>, <span class="token number">0.0312</span>, <span class="token number">0.2013</span>, <span class="token number">0.0714</span>,         <span class="token number">0.0252</span><span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">0.0274</span>, <span class="token number">0.0401</span>, <span class="token number">0.0219</span>, <span class="token number">0.0906</span>, <span class="token number">0.1141</span>, <span class="token number">0.0547</span>, <span class="token number">0.5203</span>, <span class="token number">0.0391</span>, <span class="token number">0.0442</span>,         <span class="token number">0.0476</span><span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">0.0377</span>, <span class="token number">0.0196</span>, <span class="token number">0.0225</span>, <span class="token number">0.0213</span>, <span class="token number">0.0454</span>, <span class="token number">0.0261</span>, <span class="token number">0.0224</span>, <span class="token number">0.7676</span>, <span class="token number">0.0175</span>,         <span class="token number">0.0199</span><span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">0.0248</span>, <span class="token number">0.0538</span>, <span class="token number">0.0659</span>, <span class="token number">0.0488</span>, <span class="token number">0.0559</span>, <span class="token number">0.0609</span>, <span class="token number">0.0244</span>, <span class="token number">0.0700</span>, <span class="token number">0.4952</span>,         <span class="token number">0.1002</span><span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">0.0261</span>, <span class="token number">0.0160</span>, <span class="token number">0.0332</span>, <span class="token number">0.0479</span>, <span class="token number">0.0088</span>, <span class="token number">0.0322</span>, <span class="token number">0.0142</span>, <span class="token number">0.0486</span>, <span class="token number">0.0229</span>,         <span class="token number">0.7501</span><span class="token punctuation">]</span><span class="token punctuation">]</span>, <span class="token assign-left variable">device</span><span class="token operator">=</span><span class="token string">'cuda:0'</span><span class="token punctuation">)</span>True transition matrix:<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span> <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>        <span class="token number">0.04444444</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span>  <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.04444444</span> <span class="token number">0.6</span>       <span class="token punctuation">]</span><span class="token punctuation">]</span>The estimation error is <span class="token number">0.32300532655583486</span>Estimate finish<span class="token punctuation">..</span><span class="token punctuation">..</span>.Training<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="asymmetric-0-4"><a href="#asymmetric-0-4" class="headerlink" title="asymmetric 0.4"></a>asymmetric 0.4</h2><ul><li>默认参数</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Actual noise <span class="token number">0.40</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span><span class="token punctuation">]</span><span class="token punctuation">]</span>Actual noise <span class="token number">0.40</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span><span class="token punctuation">]</span><span class="token punctuation">]</span>Estimate transition matirx<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Waiting<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>epoch <span class="token number">1</span>Train Loss: <span class="token number">1.020411</span>, Acc: <span class="token number">0.518000</span>Val Loss: <span class="token number">1.220109</span>, Acc: <span class="token number">0.464000</span>epoch <span class="token number">20</span>Train Loss: <span class="token number">1.005580</span>, Acc: <span class="token number">0.521067</span>Val Loss: <span class="token number">1.226898</span>, Acc: <span class="token number">0.463200</span>Estimated transition matrix:tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">7</span>.4242e-01, <span class="token number">2</span>.4246e-01, <span class="token number">2</span>.7850e-03, <span class="token number">8</span>.4317e-04, <span class="token number">4</span>.9211e-04, <span class="token number">5</span>.2459e-04,         <span class="token number">1</span>.8819e-04, <span class="token number">7</span>.3340e-04, <span class="token number">4</span>.9761e-03, <span class="token number">4</span>.5775e-03<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">6</span>.8398e-04, <span class="token number">6</span>.4443e-01, <span class="token number">3</span>.5391e-01, <span class="token number">2</span>.6642e-05, <span class="token number">1</span>.2400e-05, <span class="token number">1</span>.3245e-05,         <span class="token number">1</span>.8296e-04, <span class="token number">1</span>.0236e-04, <span class="token number">2</span>.1593e-04, <span class="token number">4</span>.2654e-04<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">3</span>.7985e-05, <span class="token number">5</span>.2442e-01, <span class="token number">4</span>.7549e-01, <span class="token number">2</span>.8910e-07, <span class="token number">3</span>.6711e-08, <span class="token number">6</span>.9056e-08,         <span class="token number">1</span>.0048e-07, <span class="token number">3</span>.4097e-07, <span class="token number">4</span>.7454e-06, <span class="token number">4</span>.9120e-05<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">8</span>.2929e-03, <span class="token number">1</span>.5819e-03, <span class="token number">3</span>.0692e-02, <span class="token number">5</span>.7357e-01, <span class="token number">3</span>.0599e-01, <span class="token number">2</span>.9479e-02,         <span class="token number">2</span>.8462e-02, <span class="token number">1</span>.5182e-02, <span class="token number">2</span>.5711e-03, <span class="token number">4</span>.1792e-03<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">1</span>.3662e-03, <span class="token number">1</span>.9915e-04, <span class="token number">7</span>.3622e-03, <span class="token number">1</span>.8071e-02, <span class="token number">5</span>.7474e-01, <span class="token number">3</span>.8528e-01,         <span class="token number">9</span>.2216e-03, <span class="token number">3</span>.4835e-03, <span class="token number">2</span>.1991e-04, <span class="token number">5</span>.0631e-05<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">1</span>.0864e-03, <span class="token number">6</span>.3302e-04, <span class="token number">8</span>.7667e-03, <span class="token number">6</span>.2122e-02, <span class="token number">5</span>.6899e-02, <span class="token number">4</span>.8854e-01,         <span class="token number">3</span>.3600e-01, <span class="token number">3</span>.4640e-02, <span class="token number">1</span>.1092e-02, <span class="token number">2</span>.2156e-04<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">1</span>.5093e-04, <span class="token number">8</span>.9852e-05, <span class="token number">1</span>.7349e-04, <span class="token number">4</span>.1022e-04, <span class="token number">3</span>.8422e-04, <span class="token number">1</span>.3375e-04,         <span class="token number">6</span>.2308e-01, <span class="token number">3</span>.7530e-01, <span class="token number">1</span>.9503e-04, <span class="token number">8</span>.2571e-05<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">1</span>.1851e-03, <span class="token number">1</span>.3255e-03, <span class="token number">7</span>.4400e-04, <span class="token number">3</span>.6824e-04, <span class="token number">1</span>.6724e-03, <span class="token number">1</span>.8169e-03,         <span class="token number">4</span>.6614e-04, <span class="token number">6</span>.3631e-01, <span class="token number">3</span>.5525e-01, <span class="token number">8</span>.6169e-04<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">3</span>.1831e-03, <span class="token number">1</span>.4675e-03, <span class="token number">2</span>.6400e-04, <span class="token number">5</span>.8988e-05, <span class="token number">7</span>.8735e-05, <span class="token number">3</span>.5662e-05,         <span class="token number">1</span>.6588e-05, <span class="token number">1</span>.1765e-04, <span class="token number">6</span>.6807e-01, <span class="token number">3</span>.2671e-01<span class="token punctuation">]</span>,        <span class="token punctuation">[</span><span class="token number">2</span>.4795e-01, <span class="token number">5</span>.7143e-02, <span class="token number">4</span>.9979e-02, <span class="token number">6</span>.4383e-06, <span class="token number">8</span>.2659e-07, <span class="token number">1</span>.5378e-06,         <span class="token number">5</span>.9085e-06, <span class="token number">2</span>.6324e-06, <span class="token number">4</span>.2720e-05, <span class="token number">6</span>.4487e-01<span class="token punctuation">]</span><span class="token punctuation">]</span>, <span class="token assign-left variable">device</span><span class="token operator">=</span><span class="token string">'cuda:0'</span><span class="token punctuation">)</span>True transition matrix:<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span> <span class="token number">0</span>. <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span> <span class="token number">0.4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.4</span> <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0</span>.  <span class="token number">0.6</span><span class="token punctuation">]</span><span class="token punctuation">]</span>The estimation error is <span class="token number">0.2717611408448902</span>Estimate finish<span class="token punctuation">..</span><span class="token punctuation">..</span>.Training<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="关于DMI"><a href="#关于DMI" class="headerlink" title="关于DMI"></a>关于DMI</h1><h2 id="无论是哪个任务，都需要在pretrain"><a href="#无论是哪个任务，都需要在pretrain" class="headerlink" title="无论是哪个任务，都需要在pretrain"></a>无论是哪个任务，都需要在pretrain</h2><p>参考 <a href="https://github.com/Newbeeer/L_DMI/issues/11#issuecomment-655433642">Why bad performance without model pre-training?</a></p><p>作者的观点：</p><blockquote><p>Hi,</p><p>Sorry for the late response. It’s a very good question. My guess is that if we don’t pretrain and directly apply L_dmi for training, the gradient is exploded and it’s very hard to schedule the learning rate.</p><p>To illustrate this, the gradient to the matrix A under $L_dmi$ loss is : $\partial log(∣det(A)∣) &#x3D;(A^{−1})^T$. <strong>Note that when we random intialize a classifiers, the $det(A)$ or $det(submatrix of A)$ is rathely small</strong>. It leads to very large elements in $(A^{−1})^T$. <strong>Hence the gradient explode</strong>.</p><p><strong>If we pretrain the model for a while, det(A) or det(submatrix of A) would be much more amendable.</strong></p><p>Thanks.</p><p>Yilun</p></blockquote><p>具体操作：</p><ol><li>把原来的noisy train set划分出一个noisy validation set，预训练和正式训练差不多的epoch数，然后<strong>保存在noisy&#x2F;clean validation上最好的模型</strong></li><li>load 1中获得的模型，继续用DMI LOSS在同一的noisy validation set上训练，同样通过noisy&#x2F;clean validation set筛选出“最好的”模型，在clean test set上学习。</li></ol><p>例如：</p><ol><li>在CIFAR10的实验中，用的是noisy validation</li><li>在Clothing 1M中，则是用的clean validation（50k clean training数据）</li></ol><h2 id="对DMI的尝试"><a href="#对DMI的尝试" class="headerlink" title="对DMI的尝试"></a>对DMI的尝试</h2><h3 id="symmetric-noise-0-4-pretrain-15-epochs"><a href="#symmetric-noise-0-4-pretrain-15-epochs" class="headerlink" title="symmetric noise 0.4 + pretrain 15 epochs"></a>symmetric noise 0.4 + pretrain 15 epochs</h3><ul><li>加载ckpt <code>/home/weitaotang/multimodal/results_temp/image_single_frame/models/ravdess_symmetric_image_single_frame_0.4_no_h_score/0111_180507_93108/checkpoint-epoch15.pth</code></li><li>SGD: lr 1e-07, mementum 0.9, weight_decay 1e-3</li></ul><p>可以看到总体来说是<strong>能够学习到clean的信息的</strong>：</p><ul><li>clean sample的frame accuracy比noisy sample的大</li><li>在validation set上的accuracy经过16个epoch的训练后两个点的提升</li></ul><p><img src="/2021/01/12/experiments-record/image-20210113221318924.png" alt="image-20210113221318924"></p><p>但是训练不是非常稳定，比如loss有所反弹：</p><p><img src="/2021/01/12/experiments-record/image-20210113221527155.png" alt="image-20210113221527155"></p><p><img src="/2021/01/12/experiments-record/image-20210113221541423.png" alt="image-20210113221541423"></p><h1 id="image-single-frame实验结果"><a href="#image-single-frame实验结果" class="headerlink" title="image single frame实验结果"></a>image single frame实验结果</h1><h2 id="symmetric"><a href="#symmetric" class="headerlink" title="symmetric"></a>symmetric</h2><ul><li>val frame acc</li></ul><p><img src="/2021/01/12/experiments-record/image-20210119224313250.png" alt="image-20210119224313250"></p><ul><li>val sample acc</li></ul><p><img src="/2021/01/12/experiments-record/image-20210119224336766.png" alt="image-20210119224336766"></p><h2 id="asymmetric"><a href="#asymmetric" class="headerlink" title="asymmetric"></a>asymmetric</h2><p><img src="/2021/01/12/experiments-record/image-20210119224436046.png" alt="image-20210119224436046"></p><p><img src="/2021/01/12/experiments-record/image-20210119224448660.png" alt="image-20210119224448660"></p><h1 id="audio实验结果"><a href="#audio实验结果" class="headerlink" title="audio实验结果"></a>audio实验结果</h1><ul><li>frame acc</li></ul><p><img src="/2021/01/12/experiments-record/image-20210119223953152.png" alt="image-20210119223953152"></p><ul><li>val sample acc</li></ul><p><img src="/2021/01/12/experiments-record/image-20210119224016383.png" alt="image-20210119224016383"></p><h1 id="复现MINIST的learn-clean-patterns-first的现象"><a href="#复现MINIST的learn-clean-patterns-first的现象" class="headerlink" title="复现MINIST的learn clean patterns first的现象"></a>复现MINIST的learn clean patterns first的现象</h1><p>一言蔽之：不是非常明显，很难像A closer look at … 中如此明显。MLP有所体现，<strong>CNN干脆就没有先上升后下降的趋势</strong></p><h2 id="2-layer-MLP"><a href="#2-layer-MLP" class="headerlink" title="2-layer  MLP"></a>2-layer  MLP</h2><ul><li>clean val</li></ul><p><img src="/2021/01/12/experiments-record/image-20210119223835696.png" alt="image-20210119223835696"></p><h2 id="CNN"><a href="#CNN" class="headerlink" title="CNN"></a>CNN</h2><ul><li>clean val</li></ul><p><img src="/2021/01/12/experiments-record/image-20210119223658643.png" alt="image-20210119223658643"></p><h1 id="T-Revision-ravdess尝试"><a href="#T-Revision-ravdess尝试" class="headerlink" title="T Revision ravdess尝试"></a>T Revision ravdess尝试</h1><ul><li><p>总体来看，<strong>是有效果的</strong>，特别是单一模态时，error更小。因此可以考虑<strong>先单模态pretrain，再基于pretrain的结果进行训练</strong>！</p></li><li><p>除此之外，可以看到epoch较小时的checkpoint对应的T更准确，<strong>因此一开始pretrain不用太久！！</strong></p></li><li><p>symmetric总体估计得不如asymmetric准，可以<strong>推测noise rate越大越难估计（估计越不准）</strong></p></li></ul><p>实验设置：从epoch 5 ~ 30每5个epoch的ckpt载入，打印error最小的matrix以及对应的epoch checkpoint</p><h2 id="image"><a href="#image" class="headerlink" title="image"></a>image</h2><ul><li>trial 1</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>01:5<span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>00:00,  <span class="token number">5</span>.97s/it<span class="token punctuation">]</span>Found better revision t with err:0.392519 with ckpt:/home/weitaotang/multimodal/results_temp/image_single_frame/models/ravdess_symmetric_noise_0.4_image_single_frame_no_h_score/0113_220659_93722/checkpoint-epoch5.pth<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">7</span>.37014813e-01 <span class="token number">5</span>.49748095e-02 <span class="token number">1</span>.91551456e-02 <span class="token number">1</span>.06802471e-02  <span class="token number">7</span>.75371623e-03 <span class="token number">1</span>.70421249e-01<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span>.49264102e-02 <span class="token number">7</span>.05651750e-01 <span class="token number">1</span>.33411816e-01 <span class="token number">2</span>.91340008e-02  <span class="token number">7</span>.21719406e-02 <span class="token number">4</span>.47040626e-02<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span>.69836739e-01 <span class="token number">5</span>.79755422e-02 <span class="token number">5</span>.83608894e-01 <span class="token number">3</span>.76570563e-02  <span class="token number">5</span>.09809138e-02 <span class="token number">9</span>.99408390e-02<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">5</span>.90787815e-03 <span class="token number">6</span>.60515847e-02 <span class="token number">3</span>.96423090e-04 <span class="token number">7</span>.94890272e-01  <span class="token number">4</span>.54765739e-03 <span class="token number">1</span>.28206202e-01<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">5</span>.04207044e-02 <span class="token number">3</span>.06661356e-02 <span class="token number">6</span>.10200234e-02 <span class="token number">3</span>.16125759e-02  <span class="token number">8</span>.15995386e-01 <span class="token number">1</span>.02851814e-02<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span>.68665471e-02 <span class="token number">2</span>.29821654e-01 <span class="token number">2</span>.43432482e-03 <span class="token number">6</span>.61020219e-02  <span class="token number">1</span>.24099067e-02 <span class="token number">6</span>.72365573e-01<span class="token punctuation">]</span><span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>01:5<span class="token operator"><span class="token file-descriptor important">9</span>&lt;</span>00:00,  <span class="token number">6</span>.30s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>01:5<span class="token operator"><span class="token file-descriptor important">5</span>&lt;</span>00:00,  <span class="token number">6</span>.05s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>01:5<span class="token operator"><span class="token file-descriptor important">5</span>&lt;</span>00:00,  <span class="token number">6</span>.06s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>01:5<span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>00:00,  <span class="token number">6</span>.04s/it<span class="token punctuation">]</span>--------------------------------------------------------------------------------noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>01:5<span class="token operator"><span class="token file-descriptor important">5</span>&lt;</span>00:00,  <span class="token number">6</span>.07s/it<span class="token punctuation">]</span>Found better revision t with err:0.077368 with ckpt:/home/weitaotang/multimodal/results_temp/image_single_frame/models/ravdess_asymmetric_noise_0.4_image_single_frame_no_h_score/0114_014042_93722/checkpoint-epoch5.pth<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">9</span>.99978390e-01 <span class="token number">4</span>.24855948e-08 <span class="token number">4</span>.22028800e-06 <span class="token number">7</span>.55608108e-09  <span class="token number">1</span>.72387464e-05 <span class="token number">1</span>.00746411e-07<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">5</span>.97121342e-05 <span class="token number">6</span>.31816556e-01 <span class="token number">7</span>.50882308e-03 <span class="token number">3</span>.53185713e-01  <span class="token number">6</span>.74934108e-03 <span class="token number">6</span>.79860689e-04<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span>.92773897e-08 <span class="token number">2</span>.28556597e-05 <span class="token number">5</span>.49387958e-01 <span class="token number">1</span>.72671389e-05  <span class="token number">4</span>.50389371e-01 <span class="token number">1</span>.82462852e-04<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span>.87757505e-06 <span class="token number">4</span>.13954102e-01 <span class="token number">5</span>.28141591e-04 <span class="token number">5</span>.85183560e-01  <span class="token number">2</span>.97371327e-04 <span class="token number">3</span>.29412852e-05<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span>.75910082e-07 <span class="token number">2</span>.36618023e-04 <span class="token number">2</span>.86706670e-01 <span class="token number">4</span>.47445345e-05  <span class="token number">7</span>.12622216e-01 <span class="token number">3</span>.89617483e-04<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span>.74123657e-04 <span class="token number">2</span>.17408124e-03 <span class="token number">8</span>.70988746e-04 <span class="token number">2</span>.19455221e-03  <span class="token number">1</span>.13185740e-03 <span class="token number">9</span>.93454396e-01<span class="token punctuation">]</span><span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>01:5<span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>00:00,  <span class="token number">6</span>.23s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>01:5<span class="token operator"><span class="token file-descriptor important">7</span>&lt;</span>00:00,  <span class="token number">6</span>.19s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">1</span>&lt;</span>00:00,  <span class="token number">6</span>.40s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>01:5<span class="token operator"><span class="token file-descriptor important">7</span>&lt;</span>00:00,  <span class="token number">6</span>.17s/it<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>trail 2</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:1<span class="token operator"><span class="token file-descriptor important">5</span>&lt;</span>00:00,  <span class="token number">7</span>.14s/it<span class="token punctuation">]</span>Found better revision t with err:0.340032 with ckpt:/home/weitaotang/multimodal/results_temp/image_single_frame/models/ravdess_symmetric_noise_0.4_image_single_frame_no_h_score/0113_220659_93722/checkpoint-epoch5.pth<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.74072658</span> <span class="token number">0.01935282</span> <span class="token number">0.07026559</span> <span class="token number">0.00596408</span> <span class="token number">0.01678354</span> <span class="token number">0.14690741</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.03586634</span> <span class="token number">0.71411037</span> <span class="token number">0.12696856</span> <span class="token number">0.01515382</span> <span class="token number">0.02747697</span> <span class="token number">0.08042397</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.06790715</span> <span class="token number">0.15041716</span> <span class="token number">0.58079056</span> <span class="token number">0.05768638</span> <span class="token number">0.02814293</span> <span class="token number">0.1150558</span> <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04842931</span> <span class="token number">0.04216269</span> <span class="token number">0.00557405</span> <span class="token number">0.80087784</span> <span class="token number">0.0454859</span>  <span class="token number">0.05747022</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.02076734</span> <span class="token number">0.08967834</span> <span class="token number">0.03257319</span> <span class="token number">0.02381871</span> <span class="token number">0.80996074</span> <span class="token number">0.02320168</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.05548994</span> <span class="token number">0.07312605</span> <span class="token number">0.01950351</span> <span class="token number">0.04691109</span> <span class="token number">0.12951871</span> <span class="token number">0.6754507</span> <span class="token punctuation">]</span><span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">9</span>&lt;</span>00:00,  <span class="token number">6</span>.82s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">9</span>&lt;</span>00:00,  <span class="token number">6</span>.83s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:1<span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>00:00,  <span class="token number">7</span>.06s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:1<span class="token operator"><span class="token file-descriptor important">1</span>&lt;</span>00:00,  <span class="token number">6</span>.93s/it<span class="token punctuation">]</span>--------------------------------------------------------------------------------noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:1<span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>00:00,  <span class="token number">6</span>.98s/it<span class="token punctuation">]</span>Found better revision t with err:0.071826 with ckpt:/home/weitaotang/multimodal/results_temp/image_single_frame/models/ravdess_asymmetric_noise_0.4_image_single_frame_no_h_score/0114_014042_93722/checkpoint-epoch5.pth<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">9</span>.99978176e-01 <span class="token number">8</span>.94074767e-08 <span class="token number">3</span>.23012549e-07 <span class="token number">1</span>.69097617e-07  <span class="token number">3</span>.21461266e-07 <span class="token number">2</span>.09213347e-05<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span>.55739884e-08 <span class="token number">6</span>.30913114e-01 <span class="token number">1</span>.07774438e-04 <span class="token number">3</span>.68945120e-01  <span class="token number">3</span>.26208051e-05 <span class="token number">1</span>.32215717e-06<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">5</span>.65324598e-06 <span class="token number">7</span>.42724068e-03 <span class="token number">5</span>.52161788e-01 <span class="token number">4</span>.20391930e-03  <span class="token number">4</span>.35413689e-01 <span class="token number">7</span>.87712614e-04<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">4</span>.74741598e-06 <span class="token number">4</span>.17344832e-01 <span class="token number">2</span>.14540049e-04 <span class="token number">5</span>.82112667e-01  <span class="token number">9</span>.40623789e-05 <span class="token number">2</span>.29176453e-04<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">5</span>.60341346e-08 <span class="token number">3</span>.45309488e-04 <span class="token number">2</span>.88416076e-01 <span class="token number">1</span>.09513552e-04  <span class="token number">7</span>.11108615e-01 <span class="token number">2</span>.04272590e-05<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span>.81705001e-03 <span class="token number">2</span>.85893997e-03 <span class="token number">2</span>.13714621e-04 <span class="token number">1</span>.92421779e-03  <span class="token number">2</span>.76464435e-04 <span class="token number">9</span>.92909613e-01<span class="token punctuation">]</span><span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:1<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00,  <span class="token number">6</span>.88s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:1<span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>00:00,  <span class="token number">7</span>.17s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:1<span class="token operator"><span class="token file-descriptor important">9</span>&lt;</span>00:00,  <span class="token number">7</span>.32s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:1<span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>00:00,  <span class="token number">7</span>.20s/it<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="audio"><a href="#audio" class="headerlink" title="audio"></a>audio</h2><ul><li>trail 1</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>00:00,  <span class="token number">1</span>.04it/s<span class="token punctuation">]</span>Found better revision t with err:0.415975 with ckpt:/home/weitaotang/multimodal/results_temp/audio/models/ravdess_symmetric_noise_0.4_audio_no_h_score/0113_215056_93711/checkpoint-epoch5.pth<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.25389571</span> <span class="token number">0.09228479</span> <span class="token number">0.20698934</span> <span class="token number">0.27409103</span> <span class="token number">0.09113397</span> <span class="token number">0.08160515</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.08750636</span> <span class="token number">0.51496097</span> <span class="token number">0.0436491</span>  <span class="token number">0.10722706</span> <span class="token number">0.17794909</span> <span class="token number">0.06870737</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.15156065</span> <span class="token number">0.07283055</span> <span class="token number">0.35790298</span> <span class="token number">0.07674008</span> <span class="token number">0.29612027</span> <span class="token number">0.04484543</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.24321621</span> <span class="token number">0.06782876</span> <span class="token number">0.12313364</span> <span class="token number">0.49200456</span> <span class="token number">0.04399101</span> <span class="token number">0.02982585</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.06249942</span> <span class="token number">0.11504411</span> <span class="token number">0.2359151</span>  <span class="token number">0.01695025</span> <span class="token number">0.52651856</span> <span class="token number">0.04307259</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.13342992</span> <span class="token number">0.10467964</span> <span class="token number">0.05116186</span> <span class="token number">0.06034019</span> <span class="token number">0.08603964</span> <span class="token number">0.56434879</span><span class="token punctuation">]</span><span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>00:00,  <span class="token number">1</span>.38it/s<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>00:00,  <span class="token number">1</span>.40it/s<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">7</span>&lt;</span>00:00,  <span class="token number">1</span>.09it/s<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>00:00,  <span class="token number">1</span>.31it/s<span class="token punctuation">]</span>--------------------------------------------------------------------------------noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>00:00,  <span class="token number">1</span>.40it/s<span class="token punctuation">]</span>Found better revision t with err:0.128727 with ckpt:/home/weitaotang/multimodal/results_temp/audio/models/ravdess_asymmetric_noise_0.4_audio_no_h_score/0113_232736_93711/checkpoint-epoch5.pth<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">9</span>.94958350e-01 <span class="token number">1</span>.78187583e-03 <span class="token number">3</span>.13801594e-04 <span class="token number">1</span>.89794601e-03  <span class="token number">9</span>.41193957e-04 <span class="token number">1</span>.06832134e-04<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">7</span>.20291405e-03 <span class="token number">5</span>.80317192e-01 <span class="token number">8</span>.54483371e-04 <span class="token number">4</span>.06137146e-01  <span class="token number">5</span>.16415342e-03 <span class="token number">3</span>.24093753e-04<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">9</span>.26777205e-04 <span class="token number">2</span>.19786319e-04 <span class="token number">4</span>.24290703e-01 <span class="token number">1</span>.18924458e-04  <span class="token number">5</span>.74408175e-01 <span class="token number">3</span>.56532273e-05<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">9</span>.01317605e-02 <span class="token number">3</span>.95732577e-01 <span class="token number">2</span>.24156240e-06 <span class="token number">5</span>.10228427e-01  <span class="token number">5</span>.46904859e-06 <span class="token number">3</span>.89954887e-03<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span>.46361430e-04 <span class="token number">3</span>.27936719e-04 <span class="token number">3</span>.12342425e-01 <span class="token number">3</span>.77159894e-04  <span class="token number">6</span>.86280551e-01 <span class="token number">3</span>.25555057e-04<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span>.31755906e-03 <span class="token number">4</span>.51953487e-05 <span class="token number">8</span>.15807118e-04 <span class="token number">6</span>.51472547e-05  <span class="token number">1</span>.80661353e-03 <span class="token number">9</span>.95949677e-01<span class="token punctuation">]</span><span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">7</span>&lt;</span>00:00,  <span class="token number">1</span>.09it/s<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">5</span>&lt;</span>00:00,  <span class="token number">1</span>.19it/s<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">5</span>&lt;</span>00:00,  <span class="token number">1</span>.23it/s<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>00:00,  <span class="token number">1</span>.17it/s<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>trail 2</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>00:00,  <span class="token number">1</span>.17it/s<span class="token punctuation">]</span>Found better revision t with err:0.478438 with ckpt:/home/weitaotang/multimodal/results_temp/audio/models/ravdess_symmetric_noise_0.4_audio_no_h_score/0113_215056_93711/checkpoint-epoch5.pth<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.25386552</span> <span class="token number">0.02816301</span> <span class="token number">0.09211877</span> <span class="token number">0.6069223</span>  <span class="token number">0.01289129</span> <span class="token number">0.00603905</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.08574092</span> <span class="token number">0.52417734</span> <span class="token number">0.04768458</span> <span class="token number">0.10971049</span> <span class="token number">0.15698343</span> <span class="token number">0.07570327</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.21533155</span> <span class="token number">0.06798532</span> <span class="token number">0.35652673</span> <span class="token number">0.10144213</span> <span class="token number">0.12699098</span> <span class="token number">0.1317233</span> <span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.15600043</span> <span class="token number">0.18612409</span> <span class="token number">0.03740445</span> <span class="token number">0.48830468</span> <span class="token number">0.06292662</span> <span class="token number">0.06923976</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.06397119</span> <span class="token number">0.06777771</span> <span class="token number">0.29985431</span> <span class="token number">0.00756286</span> <span class="token number">0.52437398</span> <span class="token number">0.03645993</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.16910183</span> <span class="token number">0.04342578</span> <span class="token number">0.11727054</span> <span class="token number">0.06100427</span> <span class="token number">0.03611601</span> <span class="token number">0.57308157</span><span class="token punctuation">]</span><span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>00:00,  <span class="token number">1</span>.28it/s<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>00:00,  <span class="token number">1</span>.32it/s<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>00:00,  <span class="token number">1</span>.28it/s<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>00:00,  <span class="token number">1</span>.17it/s<span class="token punctuation">]</span>--------------------------------------------------------------------------------noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>00:00,  <span class="token number">1</span>.29it/s<span class="token punctuation">]</span>Found better revision t with err:0.132613 with ckpt:/home/weitaotang/multimodal/results_temp/audio/models/ravdess_asymmetric_noise_0.4_audio_no_h_score/0113_232736_93711/checkpoint-epoch5.pth<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">9</span>.95695854e-01 <span class="token number">6</span>.25396754e-07 <span class="token number">4</span>.48640111e-04 <span class="token number">7</span>.03666878e-07  <span class="token number">6</span>.73638844e-04 <span class="token number">3</span>.18053830e-03<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span>.93859078e-03 <span class="token number">5</span>.79728069e-01 <span class="token number">2</span>.81209447e-05 <span class="token number">4</span>.16929769e-01  <span class="token number">2</span>.67289118e-04 <span class="token number">1</span>.08146436e-04<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span>.07288345e-02 <span class="token number">1</span>.81161874e-02 <span class="token number">4</span>.22044809e-01 <span class="token number">1</span>.34290555e-02  <span class="token number">5</span>.08058915e-01 <span class="token number">1</span>.76222138e-02<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span>.08152351e-02 <span class="token number">4</span>.81431427e-01 <span class="token number">2</span>.01069297e-04 <span class="token number">5</span>.06482765e-01  <span class="token number">9</span>.92116654e-04 <span class="token number">7</span>.74050277e-05<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">9</span>.88331764e-05 <span class="token number">9</span>.43107348e-03 <span class="token number">3</span>.02070525e-01 <span class="token number">3</span>.79505090e-03  <span class="token number">6</span>.84582485e-01 <span class="token number">2</span>.20230922e-05<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span>.28925497e-03 <span class="token number">4</span>.81048368e-04 <span class="token number">1</span>.09156753e-04 <span class="token number">7</span>.81982182e-04  <span class="token number">1</span>.99329388e-04 <span class="token number">9</span>.96139228e-01<span class="token punctuation">]</span><span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>00:00,  <span class="token number">1</span>.30it/s<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>00:00,  <span class="token number">1</span>.30it/s<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>00:00,  <span class="token number">1</span>.17it/s<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">5</span>&lt;</span>00:00,  <span class="token number">1</span>.25it/s<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="fusion"><a href="#fusion" class="headerlink" title="fusion"></a>fusion</h2><ul><li>trail 1</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:2<span class="token operator"><span class="token file-descriptor important">7</span>&lt;</span>00:00,  <span class="token number">7</span>.78s/it<span class="token punctuation">]</span>Found better revision t with err:0.245888 with ckpt:/home/weitaotang/multimodal/results_temp/fusion_no_h_score/models/ravdess_symmetric_noise_0.4_fusion_no_h_score/0111_034422_93107/checkpoint-epoch5.pth<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.69146853</span> <span class="token number">0.04797358</span> <span class="token number">0.07543566</span> <span class="token number">0.0422144</span>  <span class="token number">0.0418038</span>  <span class="token number">0.10110403</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.06336676</span> <span class="token number">0.67239938</span> <span class="token number">0.04360678</span> <span class="token number">0.06516055</span> <span class="token number">0.06039333</span> <span class="token number">0.09507321</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.02475316</span> <span class="token number">0.22107349</span> <span class="token number">0.59225173</span> <span class="token number">0.08914785</span> <span class="token number">0.03218814</span> <span class="token number">0.04058563</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.11797382</span> <span class="token number">0.08672993</span> <span class="token number">0.0874175</span>  <span class="token number">0.56456794</span> <span class="token number">0.11069051</span> <span class="token number">0.03262029</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.08571974</span> <span class="token number">0.04161564</span> <span class="token number">0.08419766</span> <span class="token number">0.04760431</span> <span class="token number">0.70514424</span> <span class="token number">0.03571841</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.19450805</span> <span class="token number">0.11750432</span> <span class="token number">0.02888204</span> <span class="token number">0.01387309</span> <span class="token number">0.0077209</span>  <span class="token number">0.63751161</span><span class="token punctuation">]</span><span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">9</span>&lt;</span>00:00,  <span class="token number">6</span>.80s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples <span class="token number">42</span>%<span class="token operator">|</span>███████████████████████████████████████████████████████████████████████▏                                                                                                 <span class="token operator">|</span> <span class="token number">8</span>/19 <span class="token punctuation">[</span>01:0<span class="token operator"><span class="token file-descriptor important">1</span>&lt;</span>00:32,  <span class="token number">2</span>.97s/it<span class="token punctuation">]</span><span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>00:00,  <span class="token number">6</span>.75s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">9</span>&lt;</span>00:00,  <span class="token number">6</span>.80s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>00:00,  <span class="token number">6</span>.55s/it<span class="token punctuation">]</span>--------------------------------------------------------------------------------noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>00:00,  <span class="token number">6</span>.65s/it<span class="token punctuation">]</span>Found better revision t with err:0.118717 with ckpt:/home/weitaotang/multimodal/results_temp/fusion_no_h_score/models/ravdess_asymmetric_noise_0.4_fusion_no_h_score/0111_060526_93108/checkpoint-epoch5.pth<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">9</span>.99985077e-01 <span class="token number">3</span>.33303029e-09 <span class="token number">1</span>.19833905e-05 <span class="token number">9</span>.64756076e-11  <span class="token number">1</span>.57460504e-06 <span class="token number">1</span>.36118361e-06<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">9</span>.70278939e-03 <span class="token number">4</span>.84771640e-01 <span class="token number">4</span>.20865655e-03 <span class="token number">4</span>.39756108e-01  <span class="token number">3</span>.93429270e-03 <span class="token number">5</span>.76265214e-02<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">5</span>.33318368e-03 <span class="token number">1</span>.10967220e-03 <span class="token number">6</span>.32902630e-01 <span class="token number">4</span>.49600731e-04  <span class="token number">3</span>.57397716e-01 <span class="token number">2</span>.80720290e-03<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">7</span>.46599467e-07 <span class="token number">2</span>.64882552e-01 <span class="token number">4</span>.20716284e-05 <span class="token number">7</span>.35061120e-01  <span class="token number">6</span>.29869710e-06 <span class="token number">7</span>.20326376e-06<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">4</span>.85154986e-05 <span class="token number">1</span>.44868214e-03 <span class="token number">3</span>.41783826e-01 <span class="token number">4</span>.48218386e-04  <span class="token number">6</span>.56216939e-01 <span class="token number">5</span>.38136212e-05<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span>.01609887e-03 <span class="token number">1</span>.56412889e-03 <span class="token number">1</span>.38539968e-04 <span class="token number">2</span>.01553172e-03  <span class="token number">2</span>.38128770e-04 <span class="token number">9</span>.95027572e-01<span class="token punctuation">]</span><span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:1<span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>00:00,  <span class="token number">6</span>.98s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:1<span class="token operator"><span class="token file-descriptor important">5</span>&lt;</span>00:00,  <span class="token number">7</span>.12s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:1<span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>00:00,  <span class="token number">7</span>.08s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:1<span class="token operator"><span class="token file-descriptor important">1</span>&lt;</span>00:00,  <span class="token number">6</span>.93s/it<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>trail 2</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:4<span class="token operator"><span class="token file-descriptor important">1</span>&lt;</span>00:00,  <span class="token number">8</span>.47s/it<span class="token punctuation">]</span>Found better revision t with err:0.269013 with ckpt:/home/weitaotang/multimodal/results_temp/fusion_no_h_score/models/ravdess_symmetric_noise_0.4_fusion_no_h_score/0111_034422_93107/checkpoint-epoch5.pth<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.69253284</span> <span class="token number">0.01924669</span> <span class="token number">0.16257553</span> <span class="token number">0.08773406</span> <span class="token number">0.01293883</span> <span class="token number">0.02497208</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.04376511</span> <span class="token number">0.67207418</span> <span class="token number">0.10325625</span> <span class="token number">0.03216256</span> <span class="token number">0.07928783</span> <span class="token number">0.06945408</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.07502832</span> <span class="token number">0.09878149</span> <span class="token number">0.58612365</span> <span class="token number">0.20223092</span> <span class="token number">0.02060406</span> <span class="token number">0.01723154</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.11923723</span> <span class="token number">0.04975081</span> <span class="token number">0.12028455</span> <span class="token number">0.56648084</span> <span class="token number">0.03154257</span> <span class="token number">0.11270397</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.07270622</span> <span class="token number">0.03229545</span> <span class="token number">0.12604801</span> <span class="token number">0.05031482</span> <span class="token number">0.70455036</span> <span class="token number">0.01408514</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.10690363</span> <span class="token number">0.08137329</span> <span class="token number">0.1370423</span>  <span class="token number">0.01977044</span> <span class="token number">0.01520107</span> <span class="token number">0.63970925</span><span class="token punctuation">]</span><span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:3<span class="token operator"><span class="token file-descriptor important">1</span>&lt;</span>00:00,  <span class="token number">7</span>.99s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:3<span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>00:00,  <span class="token number">8</span>.36s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:4<span class="token operator"><span class="token file-descriptor important">4</span>&lt;</span>00:00,  <span class="token number">8</span>.68s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">5</span>&lt;</span>00:00,  <span class="token number">6</span>.59s/it<span class="token punctuation">]</span>--------------------------------------------------------------------------------noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>00:00,  <span class="token number">6</span>.68s/it<span class="token punctuation">]</span>Found better revision t with err:0.121845 with ckpt:/home/weitaotang/multimodal/results_temp/fusion_no_h_score/models/ravdess_asymmetric_noise_0.4_fusion_no_h_score/0111_060526_93108/checkpoint-epoch5.pth<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">9</span>.99986581e-01 <span class="token number">6</span>.27810544e-08 <span class="token number">1</span>.22991693e-05 <span class="token number">1</span>.14747236e-08  <span class="token number">9</span>.95566532e-07 <span class="token number">5</span>.01988354e-08<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">6</span>.52518578e-07 <span class="token number">4</span>.85241528e-01 <span class="token number">4</span>.11671817e-05 <span class="token number">5</span>.14657624e-01  <span class="token number">3</span>.47765738e-05 <span class="token number">2</span>.42646967e-05<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span>.75373673e-04 <span class="token number">3</span>.39331788e-07 <span class="token number">6</span>.35205075e-01 <span class="token number">1</span>.25685331e-08  <span class="token number">3</span>.64508174e-01 <span class="token number">1</span>.10258772e-05<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span>.24452450e-06 <span class="token number">2</span>.44520915e-01 <span class="token number">1</span>.56135444e-02 <span class="token number">7</span>.34597455e-01  <span class="token number">5</span>.13995242e-03 <span class="token number">1</span>.26881283e-04<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span>.60336132e-04 <span class="token number">7</span>.43004952e-04 <span class="token number">3</span>.45211557e-01 <span class="token number">1</span>.79845275e-04  <span class="token number">6</span>.53511809e-01 <span class="token number">9</span>.34460413e-05<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">4</span>.71479600e-03 <span class="token number">9</span>.33652473e-05 <span class="token number">5</span>.41087780e-05 <span class="token number">6</span>.36025079e-05  <span class="token number">7</span>.86016301e-05 <span class="token number">9</span>.94995526e-01<span class="token punctuation">]</span><span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">5</span>&lt;</span>00:00,  <span class="token number">6</span>.61s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>00:00,  <span class="token number">6</span>.76s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>00:00,  <span class="token number">6</span>.66s/it<span class="token punctuation">]</span>noisy_train dataset with <span class="token number">24180</span> samples<span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">19</span>/19 <span class="token punctuation">[</span>02:0<span class="token operator"><span class="token file-descriptor important">5</span>&lt;</span>00:00,  <span class="token number">6</span>.58s/it<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="reuters-验证learn-clean-patterns-first"><a href="#reuters-验证learn-clean-patterns-first" class="headerlink" title="reuters 验证learn clean patterns first"></a>reuters 验证learn clean patterns first</h1><ul><li>总体上来说是有learn clean pattern first的现象的，因为<strong>可以看到在前5~10个epochs内，clean acc始终比nosiy acc高，且clean ce loss 始终比 nosiy ce loss 高</strong></li><li>因此可以考虑dividemix那一类方法</li></ul><h2 id="0模态"><a href="#0模态" class="headerlink" title="0模态"></a>0模态</h2><h2 id="01模态"><a href="#01模态" class="headerlink" title="01模态"></a>01模态</h2><ul><li>loss</li></ul><p><img src="/2021/01/12/experiments-record/image-20210115204346546.png" alt="image-20210115204346546"></p><ul><li>accuracy</li></ul><p><img src="/2021/01/12/experiments-record/image-20210115204521254.png" alt="image-20210115204521254"></p><h1 id="L2R-reuters尝试"><a href="#L2R-reuters尝试" class="headerlink" title="L2R reuters尝试"></a>L2R reuters尝试</h1><p>总体来看，<strong>用SGD优化</strong>的情况下是有效果的，在未调参的情况下能够对比baseline有4-5个点的提升乃至10个点的提升。但是观察曲线可以发现<strong>noisy acc始终还是在上升的，即仍然会对noisy samples过拟合，因此要尽快考虑regularization的方法比如mixup</strong></p><p><img src="/2021/01/12/experiments-record/image-20210119114745327.png" alt="image-20210119114745327"></p><p><img src="/2021/01/12/experiments-record/image-20210119114805972.png" alt="image-20210119114805972"></p><h2 id="对比-baseline"><a href="#对比-baseline" class="headerlink" title="对比 baseline"></a>对比 baseline</h2><ul><li>0.4</li></ul><p><img src="/2021/01/12/experiments-record/image-20210119120427076.png" alt="image-20210119120427076"></p><p><img src="/2021/01/12/experiments-record/image-20210119120437196.png" alt="image-20210119120437196"></p><ul><li>0.6</li></ul><p><img src="/2021/01/12/experiments-record/image-20210119120456236.png" alt="image-20210119120456236"></p><p><img src="/2021/01/12/experiments-record/image-20210119120508626.png" alt="image-20210119120508626"></p><ul><li>0.7</li></ul><p><img src="/2021/01/12/experiments-record/image-20210119120609912.png" alt="image-20210119120609912"></p><p><img src="/2021/01/12/experiments-record/image-20210119120627710.png" alt="image-20210119120627710"></p><h1 id="DivideMix"><a href="#DivideMix" class="headerlink" title="DivideMix"></a>DivideMix</h1><h2 id="sym-0-4"><a href="#sym-0-4" class="headerlink" title="sym 0.4"></a>sym 0.4</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-------------------------------------------------------------------------------------------------------------------------------------------------------------Exp: reuters-balance-symmetric_0.4-dividemix-fusion_<span class="token punctuation">[</span><span class="token number">0</span>, <span class="token number">1</span><span class="token punctuation">]</span>-SGD_lr0.01-clean_val         h_score  loss    loss_2 label_loss_1  loss    loss_1   entropy unlabeled_loss_1 unlabeled_loss_2    loss_2 label_loss_2    loss_1 duration  accuracy           train valid     valid        train train     valid     valid            train            train     train        train     train    train     validepoch-25     NaN   NaN  <span class="token number">1.177624</span>     <span class="token number">0.777585</span>   NaN  <span class="token number">1.060939</span>  <span class="token number">0.767858</span>         <span class="token number">0.008861</span>         <span class="token number">0.011454</span>  <span class="token number">1.231793</span>     <span class="token number">0.860347</span>  <span class="token number">1.097191</span>  <span class="token number">19</span>.891s  <span class="token number">0.660138</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>Best val epoch on run <span class="token number">2</span>:11, <span class="token builtin class-name">test</span> accuracy: <span class="token number">0.6828</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token number">3</span> runs avg accuracy: <span class="token number">0.6897</span>/0.0051. Each run <span class="token builtin class-name">test</span> accuracy:<span class="token punctuation">[</span><span class="token string">'0.6914'</span>, <span class="token string">'0.6948'</span>, <span class="token string">'0.6828'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="sym-0-6"><a href="#sym-0-6" class="headerlink" title="sym 0.6"></a>sym 0.6</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-------------------------------------------------------------------------------------------------------------------------------------------------------------Exp: reuters-balance-symmetric_0.6-dividemix-fusion_<span class="token punctuation">[</span><span class="token number">0</span>, <span class="token number">1</span><span class="token punctuation">]</span>-SGD_lr0.01-clean_val           entropy  loss_1 h_score unlabeled_loss_2 label_loss_2    loss_2           label_loss_1  accuracy    loss_1 unlabeled_loss_1  loss duration  loss             valid   train   train            train        train     valid     train        train     valid     valid            train train    train validepoch-25  <span class="token number">0.753669</span>  <span class="token number">1.4467</span>     NaN         <span class="token number">0.007444</span>      <span class="token number">0.23004</span>  <span class="token number">2.827142</span>  <span class="token number">1.358757</span>     <span class="token number">0.354897</span>  <span class="token number">0.165899</span>  <span class="token number">2.842674</span>         <span class="token number">0.016391</span>   NaN  <span class="token number">23</span>.219s   NaN<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>Best val epoch on run <span class="token number">2</span>:11, <span class="token builtin class-name">test</span> accuracy: <span class="token number">0.1672</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token number">3</span> runs avg accuracy: <span class="token number">0.3029</span>/0.0976. Each run <span class="token builtin class-name">test</span> accuracy:<span class="token punctuation">[</span><span class="token string">'0.3931'</span>, <span class="token string">'0.3483'</span>, <span class="token string">'0.1672'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="sym-0-7"><a href="#sym-0-7" class="headerlink" title="sym 0.7"></a>sym 0.7</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-------------------------------------------------------------------------------------------------------------------------------------------------------------Exp: reuters-balance-symmetric_0.7-dividemix-fusion_<span class="token punctuation">[</span><span class="token number">0</span>, <span class="token number">1</span><span class="token punctuation">]</span>-SGD_lr0.01-clean_val           entropy    loss_1 h_score unlabeled_loss_2 label_loss_2    loss_2           label_loss_1  accuracy    loss_1 unlabeled_loss_1  loss duration  loss             valid     train   train            train        train     valid     train        train     valid     valid            train train    train validepoch-25  <span class="token number">0.897166</span>  <span class="token number">1.642383</span>     NaN         <span class="token number">0.007334</span>     <span class="token number">0.228026</span>  <span class="token number">2.936547</span>  <span class="token number">1.381694</span>     <span class="token number">0.562114</span>  <span class="token number">0.167051</span>  <span class="token number">2.332163</span>         <span class="token number">0.029605</span>   NaN  <span class="token number">14</span>.290s   NaN<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>Best val epoch on run <span class="token number">2</span>:17, <span class="token builtin class-name">test</span> accuracy: <span class="token number">0.3069</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token number">3</span> runs avg accuracy: <span class="token number">0.3397</span>/0.0283. Each run <span class="token builtin class-name">test</span> accuracy:<span class="token punctuation">[</span><span class="token string">'0.3759'</span>, <span class="token string">'0.3362'</span>, <span class="token string">'0.3069'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="IEG"><a href="#IEG" class="headerlink" title="IEG"></a>IEG</h1><h2 id="可能尝试的点（DONE）"><a href="#可能尝试的点（DONE）" class="headerlink" title="可能尝试的点（DONE）"></a>可能尝试的点（DONE）</h2><h3 id="无法augment的数据"><a href="#无法augment的数据" class="headerlink" title="无法augment的数据"></a>无法augment的数据</h3><ul><li>对于reuters这种难以augment的数据，主要会影响的点在于原版中的pseudo label部分，因此可以考虑：<ul><li>按照K&#x3D;1的情况进行，即直接用iteration output作为pseudo label，然后也去除掉KL loss，剩下原来的四部分</li><li>类似于ICT这种用同一个batch内的unlabelled sample进行mixup然后算一个unsupervised loss，代替KL loss，这么做等价于5个loss中有三个mixup loss</li></ul></li><li>根据noisy student的观点：noise可以分为两类：input noise和model noise。前者主要指的是data augmentation，后者则是dropout和stochastic depth<ul><li>mixmatch及其变种中大多数是利用了data augmentation即input noise，但是很多数据比如像reuters这种直接提取好特征找不到元数据的数据集，是没办法直接进行augment的。</li><li>因此对于这种情况，只能考虑后面的model noise。但是显然model noise并不是对sample进行处理的，直接套并不现实。<strong>并且model noise和input noise在theory上是否等同？</strong>这个点也是需要考虑的。如果不等同，显然不是一个好主意。</li><li>mixmatch中用到的data augmentation大多数还是为了保证consistency regularization，而consistency regularization在ICT的文章中说的也挺清楚的，最核心要把握的点就是保证在low density region中的样本有consistency regularization，即small perturbation不会让模型的输出发生变化</li></ul></li></ul><h3 id="hard-weights和percentile的影响"><a href="#hard-weights和percentile的影响" class="headerlink" title="hard weights和percentile的影响"></a>hard weights和percentile的影响</h3><p>当前的实现是使用归一化后的weight（-min &#x2F; max - min）来实现的，但是实际上<strong>可能更好的方式直接利用<code>torch.quantile</code>找出对应的分位数</strong>，然后用这个作为阈值直接去卡<code>weights</code>。当前实测两种方法筛选出来的样本有一定差异(7&#x2F;256)，<strong>总体差异可能不是太大，待实验</strong></p><h2 id="注意TensorFlow的实现中是没有使用threshold的"><a href="#注意TensorFlow的实现中是没有使用threshold的" class="headerlink" title="注意TensorFlow的实现中是没有使用threshold的"></a>注意TensorFlow的实现中是没有使用threshold的</h2><p>原文中的Algorithm的step 4有提到说有一个threshold的设置，只有低于threshold的才认为是possibly mislabeled的samples，需要用guessed  labels去代替。但是注意看Appendix B，里面最后提到了：</p><blockquote><p>Algorithm 1 step 4 uses a weight threshold T to divide the training batch to possibly clean set and possibly mislabeled set. <strong>In our experiments, we find setting T to be highest is optimal in terms of training stability</strong>, i.e. <strong>all data is treated as possibly mislabeled</strong>, because it makes the batch size fixed to compute other losses that use data with pseudo labels  </p></blockquote><p>这里可以理解为：对于 Sec 4.4里面的两个CE loss，如果不是按照原文那样的设置，将会导致这两个loss对应的样本始终在变化，也即导致loss的大小可能变化地很剧烈。</p><p><strong>具体实验的时候还要具体考虑一下。可能需要还原回原文的设置</strong></p><h2 id="注意batch-size对meta-valid-data-loader的影响"><a href="#注意batch-size对meta-valid-data-loader的影响" class="headerlink" title="注意batch size对meta_valid_data_loader的影响"></a>注意batch size对<code>meta_valid_data_loader</code>的影响</h2><p>默认是使用下面这个<code>inf_loop</code>来实现无穷枚举</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">inf_loop</span><span class="token punctuation">(</span>data_loader<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">''' wrapper function for endless data loader. '''</span>    <span class="token keyword">for</span> loader <span class="token keyword">in</span> repeat<span class="token punctuation">(</span>data_loader<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> <span class="token keyword">from</span> loader<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>但这种方式有两个问题：</p><ol><li>由于默认<code>drop_last=False</code>，因此如果<code>len(dataset)</code>不能被<code>batch_size</code>整除，则<strong>最后一小部分会被单独取出</strong>（因为这里本质上就是不断把一个个batch从data_loader中循环取出）。导致<code>batch_size</code>不是恒定的。</li><li>如果整个<code>len(dataset)</code>默认就比<code>batch_size</code>小，则每次取出的batch必然都会比设定的<code>batch_size</code>小</li></ol><p>特别上面，下面这种做法在<code>meta_valid_data_loader.dataset</code>的大小比默认的<code>batch_size</code>小的时候，每次取出的<code>meta_data</code>必然是不足的；如果不能被整除，则末尾那个<code>meta_batch</code>的大小也不正常。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> batch_idx<span class="token punctuation">,</span> <span class="token punctuation">(</span>batch_data<span class="token punctuation">,</span> meta_data<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>data_loader<span class="token punctuation">,</span> self<span class="token punctuation">.</span>meta_valid_data_loader<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>正确做法可以用类似下面这种思路：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">g</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    all_res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> t <span class="token keyword">in</span> cycle<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>all_res<span class="token punctuation">)</span> <span class="token operator">>=</span> size<span class="token punctuation">:</span>            <span class="token keyword">yield</span> all_res            all_res <span class="token operator">=</span> <span class="token punctuation">[</span>t<span class="token punctuation">]</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            all_res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>t<span class="token punctuation">)</span>            iter_1 <span class="token operator">=</span> <span class="token builtin">iter</span><span class="token punctuation">(</span>g<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">next</span><span class="token punctuation">(</span>iter_1<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token number">0</span>, <span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span>, <span class="token number">4</span>, <span class="token number">0</span>, <span class="token number">1</span>, <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span>, <span class="token number">4</span>, <span class="token number">0</span>, <span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span>, <span class="token number">4</span>, <span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这里需要做的是改一下merge的逻辑</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">inf_loop_v2</span><span class="token punctuation">(</span>data_loader<span class="token punctuation">,</span> batch_size<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">''' wrapper function for endless data loader. Fix batch_size bug for torch only'''</span>    merged_batch <span class="token operator">=</span> <span class="token punctuation">[</span>torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> idx<span class="token punctuation">,</span> batch <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>cycle<span class="token punctuation">(</span>data_loader<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> idx <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            merged_batch <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>batch<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            merged_batch <span class="token operator">=</span> <span class="token punctuation">[</span>torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">[</span>data<span class="token punctuation">,</span> cur_data<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">for</span> data<span class="token punctuation">,</span> cur_data <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>merged_batch<span class="token punctuation">,</span> batch<span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> merged_batch<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">>=</span> batch_size<span class="token punctuation">:</span>            return_data <span class="token operator">=</span> <span class="token punctuation">[</span>data<span class="token punctuation">[</span><span class="token punctuation">:</span>batch_size<span class="token punctuation">]</span> <span class="token keyword">for</span> data <span class="token keyword">in</span> merged_batch<span class="token punctuation">]</span>            <span class="token keyword">yield</span> return_data            merged_batch <span class="token operator">=</span> <span class="token punctuation">[</span>data<span class="token punctuation">[</span>batch_size<span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token keyword">for</span> data <span class="token keyword">in</span> merged_batch<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="unsupervised-loss中对probe-image的permutation操作"><a href="#unsupervised-loss中对probe-image的permutation操作" class="headerlink" title="unsupervised loss中对probe image的permutation操作"></a>unsupervised loss中对probe image的permutation操作</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">n_probe_to_mix <span class="token operator">=</span> tf<span class="token punctuation">.</span>shape<span class="token punctuation">(</span>aug_images<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>probe <span class="token operator">=</span> tf<span class="token punctuation">.</span>tile<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">10.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> tf<span class="token punctuation">.</span>shape<span class="token punctuation">(</span>probe_images<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>idx <span class="token operator">=</span> tf<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>tf<span class="token punctuation">.</span>random<span class="token punctuation">.</span>categorical<span class="token punctuation">(</span>probe<span class="token punctuation">,</span> n_probe_to_mix<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>上面这段操作本质上应该是不需要的，推测的原因可能是<strong>为了MixMode中不同mixup操作方式</strong>的需要。故可以考虑保留</p><h2 id="augmented-samples的labels"><a href="#augmented-samples的labels" class="headerlink" title="augmented samples的labels"></a>augmented samples的labels</h2><p>总体来说都是和未增强前的samples共用label</p><ul><li>对于possibly clean samples来说，就是未增强前的label，即一个hard label</li><li>对于possibly mislabeled samples来说，就是用g，即一个soft label</li></ul><h2 id="pytorch实验尝试"><a href="#pytorch实验尝试" class="headerlink" title="pytorch实验尝试"></a>pytorch实验尝试</h2><h3 id="sym0-4"><a href="#sym0-4" class="headerlink" title="sym0.4"></a>sym0.4</h3><p>最好的尝试：固定<code>mis_threshold=1.1</code>即如原文那样</p><p><code>2021-01-26/16-47-27-None/</code> </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>Best val epoch on run <span class="token number">0</span>:13, <span class="token builtin class-name">test</span> accuracy: <span class="token number">0.7655</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token number">1</span> runs avg accuracy: <span class="token number">0.7655</span>/0.0000. Each run <span class="token builtin class-name">test</span> accuracy:<span class="token punctuation">[</span><span class="token string">'0.7655'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>2021-01-26/16-51-09-None</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>Best val epoch on run <span class="token number">0</span>:18, <span class="token builtin class-name">test</span> accuracy: <span class="token number">0.7655</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token number">1</span> runs avg accuracy: <span class="token number">0.7655</span>/0.0000. Each run <span class="token builtin class-name">test</span> accuracy:<span class="token punctuation">[</span><span class="token string">'0.7655'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>尝试用动态<code>ce_factor</code>的方法：不太好，不如固定的</p><p><code>2021-01-26/19-51-01-None/</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2021</span>-01-26/19-51-01-None/reuters_ieg_train.log:1619:<span class="token punctuation">[</span><span class="token number">2021</span>-01-26 <span class="token number">20</span>:03:53,889<span class="token punctuation">]</span><span class="token punctuation">[</span>base-trainer<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - Best val epoch on run <span class="token number">0</span>:14, <span class="token builtin class-name">test</span> accuracy: <span class="token number">0.6948</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="sym-0-6-1"><a href="#sym-0-6-1" class="headerlink" title="sym 0.6"></a>sym 0.6</h3><p>同样是固定ce_factor</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2021</span>-01-26/19-50-32-None/reuters_ieg_train.log:3923:<span class="token punctuation">[</span><span class="token number">2021</span>-01-26 <span class="token number">20</span>:24:25,578<span class="token punctuation">]</span><span class="token punctuation">[</span>base-trainer<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - Best val epoch on run <span class="token number">0</span>:16, <span class="token builtin class-name">test</span> accuracy: <span class="token number">0.6241</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="尝试fake-augment（两次mixup）"><a href="#尝试fake-augment（两次mixup）" class="headerlink" title="尝试fake augment（两次mixup）"></a>尝试fake augment（两次mixup）</h3><p><strong>效果不大</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Exp: reuters-balance-symmetric_0.4-ieg-meta_fusion_<span class="token punctuation">[</span><span class="token number">0</span>, <span class="token number">1</span><span class="token punctuation">]</span>-SGD_lr0.01-clean_val          meta_acc weight_acc meta_loss  accuracy h_score unlabeled_loss      loss  eps_loss  <span class="token punctuation">..</span>.  ema_loss unlabeled_u_loss      loss unlabeled_kl_loss   eps_acc duration    w_loss unlabeled_l_loss             train      train     train     valid   train          train     valid     train  <span class="token punctuation">..</span>.     valid            train     train             train     train    train     train            trainepoch-25  <span class="token number">0.004568</span>   <span class="token number">0.402382</span>  <span class="token number">0.035882</span>  <span class="token number">0.704598</span>     NaN       <span class="token number">2.032226</span>  <span class="token number">0.856156</span>  <span class="token number">0.713818</span>  <span class="token punctuation">..</span>.  <span class="token number">0.953503</span>         <span class="token number">0.343933</span>  <span class="token number">2.463873</span>           <span class="token number">0.00215</span>  <span class="token number">0.732781</span>  <span class="token number">41</span>.601s  <span class="token number">0.149475</span>         <span class="token number">0.310409</span><span class="token punctuation">[</span><span class="token number">1</span> rows x <span class="token number">17</span> columns<span class="token punctuation">]</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>Best val epoch on run <span class="token number">0</span>:10, <span class="token builtin class-name">test</span> accuracy: <span class="token number">0.7534</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token number">1</span> runs avg accuracy: <span class="token number">0.7534</span>/0.0000. Each run <span class="token builtin class-name">test</span> accuracy:<span class="token punctuation">[</span><span class="token string">'0.7534'</span><span class="token punctuation">]</span>Save at /home/weitaotang/multimodal/pytorch_hydra_results_temp/debug/2021-01-27/16-15-34-None<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Exp: reuters-balance-symmetric_0.4-ieg-meta_fusion_<span class="token punctuation">[</span><span class="token number">0</span>, <span class="token number">1</span><span class="token punctuation">]</span>-SGD_lr0.01-clean_val         unlabeled_l_loss duration     loss           unlabeled_loss h_score  meta_acc meta_loss  <span class="token punctuation">..</span>.   eps_acc    w_loss  eps_loss  ema_loss  accuracy weight_acc ema_accuracy unlabeled_u_loss                    train    train    valid     train          train   train     train     train  <span class="token punctuation">..</span>.     train     train     train     valid     valid      train        valid            trainepoch-20         <span class="token number">0.454691</span>  <span class="token number">41</span>.396s  <span class="token number">0.78376</span>  <span class="token number">3.406944</span>       <span class="token number">2.877247</span>     NaN  <span class="token number">0.004635</span>  <span class="token number">0.035477</span>  <span class="token punctuation">..</span>.  <span class="token number">0.749871</span>  <span class="token number">0.152077</span>  <span class="token number">0.907316</span>  <span class="token number">0.982341</span>  <span class="token number">0.751724</span>   <span class="token number">0.402382</span>     <span class="token number">0.710345</span>         <span class="token number">0.479111</span><span class="token punctuation">[</span><span class="token number">1</span> rows x <span class="token number">17</span> columns<span class="token punctuation">]</span>Normal model <span class="token builtin class-name">test</span> on <span class="token number">580</span> samples <span class="token operator">|</span> Acc <span class="token number">0.7431</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>Best val epoch on run <span class="token number">0</span>:20, <span class="token builtin class-name">test</span> accuracy: <span class="token number">0.7431</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token number">1</span> runs avg accuracy: <span class="token number">0.7431</span>/0.0000. Each run <span class="token builtin class-name">test</span> accuracy:<span class="token punctuation">[</span><span class="token string">'0.7431'</span><span class="token punctuation">]</span>Save at /home/weitaotang/multimodal/pytorch_hydra_results_temp/debug/2021-01-27/16-40-22-None<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="0128-调参记录：暂时是效果最好的，acc能到0-81637"><a href="#0128-调参记录：暂时是效果最好的，acc能到0-81637" class="headerlink" title="0128 调参记录：暂时是效果最好的，acc能到0.81637"></a>0128 调参记录：暂时是效果最好的，acc能到0.81637</h2><h1 id="IEG-DivideMix"><a href="#IEG-DivideMix" class="headerlink" title="IEG + DivideMix"></a>IEG + DivideMix</h1><h2 id="可能可以尝试的点"><a href="#可能可以尝试的点" class="headerlink" title="可能可以尝试的点"></a>可能可以尝试的点</h2><ul><li>inconsistency error？就是KL，不过不是minimize而是maximize</li></ul><h2 id="尝试1：-IEG-仅仅加入weighted-guessed-labels"><a href="#尝试1：-IEG-仅仅加入weighted-guessed-labels" class="headerlink" title="尝试1： IEG + 仅仅加入weighted guessed labels"></a>尝试1： IEG + 仅仅加入weighted guessed labels</h2><p>基本是IEG的底子，两个模型，同时是step-based的更新方式，计算所有loss都是用自己所挑选出来的那一份数据。区别在使用了weighted  labels作为最后的unlabelled部分的输出。</p><p><code>mis_threshold=1.1</code>因此默认所有samples都是unlabelled samples，因此直接使用<code>weighted_guess_labels</code>的时候能够很方便地直接相加</p><p>有一定效果（取平均，大概2-3个点）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>Best val epoch on run <span class="token number">0</span>:17, <span class="token builtin class-name">test</span> accuracy: <span class="token number">0.8121</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token number">1</span> runs avg accuracy: <span class="token number">0.8121</span>/0.0000. Each run <span class="token builtin class-name">test</span> accuracy:<span class="token punctuation">[</span><span class="token string">'0.8121'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>核心代码部分：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">mis_logits_1<span class="token punctuation">,</span> mis_inputs_1<span class="token punctuation">,</span> all_c_inputs_1<span class="token punctuation">,</span> all_c_labels_1<span class="token punctuation">,</span> mis_idx_1 <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_mis_c<span class="token punctuation">(</span>hard_weight_1<span class="token punctuation">,</span>                                                                                        logits_1<span class="token punctuation">,</span>                                                                                        inputs<span class="token punctuation">,</span>                                                                                        meta_inputs_1<span class="token punctuation">,</span>                                                                                        meta_clean_labels_1<span class="token punctuation">,</span>                                                                                        labels<span class="token punctuation">)</span>mis_logits_2<span class="token punctuation">,</span> mis_inputs_2<span class="token punctuation">,</span> all_c_inputs_2<span class="token punctuation">,</span> all_c_labels_2<span class="token punctuation">,</span> mis_idx_2 <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_mis_c<span class="token punctuation">(</span>hard_weight_2<span class="token punctuation">,</span>                                                                                        logits_2<span class="token punctuation">,</span>                                                                                        inputs<span class="token punctuation">,</span>                                                                                        meta_inputs_2<span class="token punctuation">,</span>                                                                                        meta_clean_labels_2<span class="token punctuation">,</span>                                                                                        labels<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">_weighted_guess_label</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> batch_logits_1<span class="token punctuation">,</span> w1<span class="token punctuation">,</span> batch_logits_2<span class="token punctuation">,</span> w2<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># K = batch_logits.size(0)</span>    <span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># old_w1, old_w2 = w1.clone().detach(), w2.clone().detach()</span>        invalid_index <span class="token operator">=</span> torch<span class="token punctuation">.</span>logical_and<span class="token punctuation">(</span>w1 <span class="token operator">==</span> <span class="token number">0.0</span><span class="token punctuation">,</span> w2 <span class="token operator">==</span> <span class="token number">0.0</span><span class="token punctuation">)</span>        w1<span class="token punctuation">[</span>invalid_index<span class="token punctuation">]</span><span class="token punctuation">,</span> w2<span class="token punctuation">[</span>invalid_index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1e-8</span><span class="token punctuation">,</span> <span class="token number">1e-8</span>        reweight_w1 <span class="token operator">=</span> <span class="token punctuation">(</span>w1 <span class="token operator">/</span> <span class="token punctuation">(</span>w1 <span class="token operator">+</span> w2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        reweight_w2 <span class="token operator">=</span> <span class="token punctuation">(</span>w2 <span class="token operator">/</span> <span class="token punctuation">(</span>w1 <span class="token operator">+</span> w2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment"># expected K x batch x num_feat</span>        all_u_logits_1 <span class="token operator">=</span> torch<span class="token punctuation">.</span>unbind<span class="token punctuation">(</span>batch_logits_1<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>        norm_logits_1 <span class="token operator">=</span> <span class="token punctuation">[</span>logit_norm<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> reweight_w1 <span class="token keyword">for</span> x <span class="token keyword">in</span> all_u_logits_1<span class="token punctuation">]</span>        p_model_y_1 <span class="token operator">=</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">[</span>torch<span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">for</span> logits <span class="token keyword">in</span> norm_logits_1<span class="token punctuation">]</span><span class="token punctuation">)</span>        p_model_y_1 <span class="token operator">=</span> torch<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>p_model_y_1<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>        all_u_logits_2 <span class="token operator">=</span> torch<span class="token punctuation">.</span>unbind<span class="token punctuation">(</span>batch_logits_2<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>        norm_logits_2 <span class="token operator">=</span> <span class="token punctuation">[</span>logit_norm<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> reweight_w2 <span class="token keyword">for</span> x <span class="token keyword">in</span> all_u_logits_2<span class="token punctuation">]</span>        p_model_y_2 <span class="token operator">=</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">[</span>torch<span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">for</span> logits <span class="token keyword">in</span> norm_logits_2<span class="token punctuation">]</span><span class="token punctuation">)</span>        p_model_y_2 <span class="token operator">=</span> torch<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>p_model_y_2<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>        p_model_y <span class="token operator">=</span> reweight_w1 <span class="token operator">*</span> p_model_y_1 <span class="token operator">+</span> reweight_w2 <span class="token operator">*</span> p_model_y_2        p_target <span class="token operator">=</span> torch<span class="token punctuation">.</span><span class="token builtin">pow</span><span class="token punctuation">(</span>p_model_y<span class="token punctuation">,</span> <span class="token number">1.0</span> <span class="token operator">/</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>T<span class="token punctuation">)</span>        p_target <span class="token operator">/=</span> torch<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>p_target<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> keepdim<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> p_target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">ema_decay</span><span class="token punctuation">:</span> <span class="token number">0.999</span><span class="token key atrule">meta_momentum</span><span class="token punctuation">:</span> <span class="token number">0.9</span><span class="token key atrule">grad_eps_init</span><span class="token punctuation">:</span> <span class="token number">0.9</span><span class="token key atrule">ce_factor</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token key atrule">consistency_factor</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token key atrule">T</span><span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token key atrule">beta</span><span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token key atrule">meta_lr</span><span class="token punctuation">:</span> <span class="token number">1e-4</span><span class="token key atrule">mis_threshold</span><span class="token punctuation">:</span> <span class="token number">1.1</span> <span class="token comment"># 1.1 means treat all to be mislabel</span><span class="token key atrule">learning_rate</span><span class="token punctuation">:</span> <span class="token number">0.03</span><span class="token key atrule">use_fake_aug</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">fake_aug_lambda</span><span class="token punctuation">:</span> <span class="token number">0.95</span><span class="token key atrule">use_scheduler</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">use_penalty</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="尝试2：进一步交换二者信息"><a href="#尝试2：进一步交换二者信息" class="headerlink" title="尝试2：进一步交换二者信息"></a>尝试2：进一步交换二者信息</h2><p>效果差不多</p><p>参数设置同样设置<code>mis_threshold=1.1</code>（即<strong>最后两个<code>weighted_guessed_labels</code>是相同的</strong>），<code>ce_factor=5, learning_rate=0.01</code>，其实和尝试1是差不多的参数，发现效果和1其实差不多</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Exp: reuters-balance-symmetric_0.4-ieg_dividemix-meta_fusion_<span class="token punctuation">[</span><span class="token number">0</span>, <span class="token number">1</span><span class="token punctuation">]</span>-SGD_lr0.03-clean_val            loss_2    loss_1               acc_1 eps_acc_1  w_loss_2 duration  accuracy  <span class="token punctuation">..</span>. unlabeled_loss_1 weight_acc_2 meta_loss_1  w_loss_1 meta_acc_1 unlabeled_l_loss_2 meta_acc_2 meta_loss_2             valid     train     valid     valid     train     train    train     valid  <span class="token punctuation">..</span>.            train        train       train     train      train              train      train       trainepoch-20  <span class="token number">0.688819</span>  <span class="token number">6.708918</span>  <span class="token number">0.684294</span>  <span class="token number">0.777011</span>  <span class="token number">0.842914</span>  <span class="token number">0.302043</span>  <span class="token number">71</span>.749s  <span class="token number">0.793103</span>  <span class="token punctuation">..</span>.         <span class="token number">6.392279</span>     <span class="token number">0.402382</span>    <span class="token number">0.044373</span>  <span class="token number">0.337714</span>   <span class="token number">0.004645</span>           <span class="token number">0.376796</span>   <span class="token number">0.004645</span>    <span class="token number">0.033203</span><span class="token punctuation">[</span><span class="token number">1</span> rows x <span class="token number">30</span> columns<span class="token punctuation">]</span>Test on <span class="token number">580</span> samples <span class="token operator">|</span> Merged acc <span class="token number">0.8052</span> <span class="token operator">|</span> Acc_1 <span class="token number">0.8000</span> <span class="token operator">|</span> Acc_2 <span class="token number">0.8000</span>Saving current best with max accuracy/valid:0.7931: model_best.pth <span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>Best val epoch on run <span class="token number">0</span>:20, <span class="token builtin class-name">test</span> accuracy: <span class="token number">0.8052</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token number">1</span> runs avg accuracy: <span class="token number">0.8052</span>/0.0000. Each run <span class="token builtin class-name">test</span> accuracy:<span class="token punctuation">[</span><span class="token string">'0.8052'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>核心代码如下：可以看到几乎整个输入都交换了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">weight_1<span class="token punctuation">,</span> hard_weight_1<span class="token punctuation">,</span> eps_1<span class="token punctuation">,</span> meta_loss_1<span class="token punctuation">,</span> meta_acc_1 <span class="token operator">=</span> self<span class="token punctuation">.</span>meta_optimize<span class="token punctuation">(</span>self<span class="token punctuation">.</span>model<span class="token punctuation">,</span> self<span class="token punctuation">.</span>optimizer<span class="token punctuation">,</span>                                                                             meta_inputs_1<span class="token punctuation">,</span>                                                                             meta_clean_labels_1<span class="token punctuation">,</span>                                                                             labels<span class="token punctuation">,</span>                                                                             inputs<span class="token punctuation">,</span>                                                                             init_guessed_labels_1<span class="token punctuation">)</span>weight_2<span class="token punctuation">,</span> hard_weight_2<span class="token punctuation">,</span> eps_2<span class="token punctuation">,</span> meta_loss_2<span class="token punctuation">,</span> meta_acc_2 <span class="token operator">=</span> self<span class="token punctuation">.</span>meta_optimize<span class="token punctuation">(</span>self<span class="token punctuation">.</span>model2<span class="token punctuation">,</span>                                                                             self<span class="token punctuation">.</span>optimizer2<span class="token punctuation">,</span>                                                                             meta_inputs_2<span class="token punctuation">,</span>                                                                             meta_clean_labels_2<span class="token punctuation">,</span>                                                                             labels<span class="token punctuation">,</span>                                                                             inputs<span class="token punctuation">,</span>                                                                             init_guessed_labels_2<span class="token punctuation">)</span>exchange <span class="token operator">=</span> <span class="token boolean">True</span><span class="token keyword">if</span> exchange<span class="token punctuation">:</span>    weight_1<span class="token punctuation">,</span> weight_2 <span class="token operator">=</span> weight_2<span class="token punctuation">,</span> weight_1    hard_weight_1<span class="token punctuation">,</span> hard_weight_2 <span class="token operator">=</span> hard_weight_2<span class="token punctuation">,</span> hard_weight_1    meta_inputs_1<span class="token punctuation">,</span> meta_inputs_2 <span class="token operator">=</span> meta_inputs_2<span class="token punctuation">,</span> meta_inputs_1    meta_clean_labels_1<span class="token punctuation">,</span> meta_clean_labels_2 <span class="token operator">=</span> meta_clean_labels_2<span class="token punctuation">,</span> meta_clean_labels_1mis_logits_1<span class="token punctuation">,</span> mis_inputs_1<span class="token punctuation">,</span> all_c_inputs_1<span class="token punctuation">,</span> all_c_labels_1<span class="token punctuation">,</span> mis_idx_1 <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_mis_c<span class="token punctuation">(</span>weight_1<span class="token punctuation">,</span>                                                                                        hard_weight_1<span class="token punctuation">,</span>                                                                                        logits_1<span class="token punctuation">,</span>                                                                                        inputs<span class="token punctuation">,</span>                                                                                        meta_inputs_1<span class="token punctuation">,</span>                                                                                        meta_clean_labels_1<span class="token punctuation">,</span>                                                                                        labels<span class="token punctuation">)</span>mis_logits_2<span class="token punctuation">,</span> mis_inputs_2<span class="token punctuation">,</span> all_c_inputs_2<span class="token punctuation">,</span> all_c_labels_2<span class="token punctuation">,</span> mis_idx_2 <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_mis_c<span class="token punctuation">(</span>weight_2<span class="token punctuation">,</span>                                                                                        hard_weight_2<span class="token punctuation">,</span>                                                                                        logits_2<span class="token punctuation">,</span>                                                                                        inputs<span class="token punctuation">,</span>                                                                                        meta_inputs_2<span class="token punctuation">,</span>                                                                                        meta_clean_labels_2<span class="token punctuation">,</span>                                                                                        labels<span class="token punctuation">)</span><span class="token comment"># TODO: try co_guessed_labels</span><span class="token comment"># co_guessed_labels = self._guess_label(torch.cat([logits_1, logits_2], 0))</span><span class="token comment"># weighted_guessed_labels = self._weighted_coguess_label(torch.unsqueeze(mis_logits_1, 0), weight_1,</span><span class="token comment">#                                                        torch.unsqueeze(mis_logits_2, 0), weight_2)</span>weighted_guessed_labels_1 <span class="token operator">=</span> self<span class="token punctuation">.</span>_weighted_single_guess_labels<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span>mis_logits_1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                                               mis_idx_1<span class="token punctuation">,</span> weight_1<span class="token punctuation">,</span>                                                               torch<span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span>logits_2<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                                               weight_2<span class="token punctuation">)</span>weighted_guessed_labels_2 <span class="token operator">=</span> self<span class="token punctuation">.</span>_weighted_single_guess_labels<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span>mis_logits_2<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mis_idx_2<span class="token punctuation">,</span>                                                               weight_2<span class="token punctuation">,</span> torch<span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span>logits_1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                                               weight_1<span class="token punctuation">)</span><span class="token keyword">assert</span> <span class="token punctuation">(</span>weighted_guessed_labels_1 <span class="token operator">==</span> weighted_guessed_labels_2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>l_loss_1<span class="token punctuation">,</span> u_loss_1<span class="token punctuation">,</span> consistency_loss_1 <span class="token operator">=</span> self<span class="token punctuation">.</span>single_unsupervised_loss<span class="token punctuation">(</span>self<span class="token punctuation">.</span>model<span class="token punctuation">,</span> mis_logits_1<span class="token punctuation">,</span>                                                                       mis_inputs_1<span class="token punctuation">,</span> all_c_inputs_1<span class="token punctuation">,</span>                                                                       all_c_labels_1<span class="token punctuation">,</span>                                                                       weighted_guessed_labels_1<span class="token punctuation">)</span>l_loss_2<span class="token punctuation">,</span> u_loss_2<span class="token punctuation">,</span> consistency_loss_2 <span class="token operator">=</span> self<span class="token punctuation">.</span>single_unsupervised_loss<span class="token punctuation">(</span>self<span class="token punctuation">.</span>model2<span class="token punctuation">,</span> mis_logits_2<span class="token punctuation">,</span>                                                                       mis_inputs_2<span class="token punctuation">,</span> all_c_inputs_2<span class="token punctuation">,</span>                                                                       all_c_labels_2<span class="token punctuation">,</span>                                                                       weighted_guessed_labels_2<span class="token punctuation">)</span><span class="token keyword">if</span> exchange<span class="token punctuation">:</span>    weight_1<span class="token punctuation">,</span> weight_2 <span class="token operator">=</span> weight_2<span class="token punctuation">,</span> weight_1w_loss_1<span class="token punctuation">,</span> eps_loss_1 <span class="token operator">=</span> self<span class="token punctuation">.</span>lambda_weight_loss<span class="token punctuation">(</span>logits_1<span class="token punctuation">,</span> labels<span class="token punctuation">,</span> eps_1<span class="token punctuation">,</span> weight_1<span class="token punctuation">,</span>                                               weighted_guessed_labels_1<span class="token punctuation">)</span>w_loss_2<span class="token punctuation">,</span> eps_loss_2 <span class="token operator">=</span> self<span class="token punctuation">.</span>lambda_weight_loss<span class="token punctuation">(</span>logits_2<span class="token punctuation">,</span> labels<span class="token punctuation">,</span> eps_2<span class="token punctuation">,</span> weight_2<span class="token punctuation">,</span>                                               weighted_guessed_labels_2<span class="token punctuation">)</span>un_loss_1 <span class="token operator">=</span> l_loss_1 <span class="token operator">+</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>ce_factor <span class="token operator">*</span> u_loss_1 <span class="token operator">+</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>consistency_factor <span class="token operator">*</span> consistency_loss_1un_loss_2 <span class="token operator">=</span> l_loss_2 <span class="token operator">+</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>ce_factor <span class="token operator">*</span> u_loss_2 <span class="token operator">+</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>consistency_factor <span class="token operator">*</span> consistency_loss_2loss_1 <span class="token operator">=</span> <span class="token punctuation">(</span>w_loss_1 <span class="token operator">+</span> eps_loss_1<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.</span> <span class="token operator">+</span> un_loss_1loss_2 <span class="token operator">=</span> <span class="token punctuation">(</span>w_loss_2 <span class="token operator">+</span> eps_loss_2<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.</span> <span class="token operator">+</span> un_loss_2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="bug-1：RuntimeError-cannot-sample-n-sample-lt-x3D-0-samples"><a href="#bug-1：RuntimeError-cannot-sample-n-sample-lt-x3D-0-samples" class="headerlink" title="bug 1：RuntimeError: cannot sample n_sample &lt;&#x3D; 0 samples"></a>bug 1：RuntimeError: cannot sample n_sample &lt;&#x3D; 0 samples</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>:  File <span class="token string">"/home/weitaotang/.conda/envs/multimodal/lib/python3.7/site-packages/hydra/_internal/utils.py"</span>, line <span class="token number">347</span>, <span class="token keyword">in</span> _run_hydra    lambda: hydra.run<span class="token punctuation">(</span>  File <span class="token string">"/home/weitaotang/.conda/envs/multimodal/lib/python3.7/site-packages/hydra/_internal/utils.py"</span>, line <span class="token number">201</span>, <span class="token keyword">in</span> run_and_report    raise ex  File <span class="token string">"/home/weitaotang/.conda/envs/multimodal/lib/python3.7/site-packages/hydra/_internal/utils.py"</span>, line <span class="token number">198</span>, <span class="token keyword">in</span> run_and_report    <span class="token builtin class-name">return</span> func<span class="token punctuation">(</span><span class="token punctuation">)</span>  File <span class="token string">"/home/weitaotang/.conda/envs/multimodal/lib/python3.7/site-packages/hydra/_internal/utils.py"</span>, line <span class="token number">350</span>, <span class="token keyword">in</span> <span class="token operator">&lt;</span>lambda<span class="token operator">></span>    <span class="token assign-left variable">overrides</span><span class="token operator">=</span>args.overrides,  File <span class="token string">"/home/weitaotang/.conda/envs/multimodal/lib/python3.7/site-packages/hydra/_internal/hydra.py"</span>, line <span class="token number">112</span>, <span class="token keyword">in</span> run    <span class="token assign-left variable">configure_logging</span><span class="token operator">=</span>with_log_configuration,  File <span class="token string">"/home/weitaotang/.conda/envs/multimodal/lib/python3.7/site-packages/hydra/core/utils.py"</span>, line <span class="token number">128</span>, <span class="token keyword">in</span> run_job    ret.return_value <span class="token operator">=</span> task_function<span class="token punctuation">(</span>task_cfg<span class="token punctuation">)</span>  File <span class="token string">"srcs/entry_points/reuters_ieg_dividemix_train.py"</span>, line <span class="token number">145</span>, <span class="token keyword">in</span> main    res <span class="token operator">=</span> trainer.train<span class="token punctuation">(</span><span class="token punctuation">)</span>  File <span class="token string">"/home/weitaotang/multimodal/hydra_templates/srcs/trainer/base.py"</span>, line <span class="token number">99</span>, <span class="token keyword">in</span> train    result <span class="token operator">=</span> self._train_epoch<span class="token punctuation">(</span>epoch<span class="token punctuation">)</span>  File <span class="token string">"/home/weitaotang/multimodal/hydra_templates/srcs/trainer/reuters_ieg_dividemix_trainer.py"</span>, line <span class="token number">197</span>, <span class="token keyword">in</span> _train_epoch    weighted_guessed_labels_1<span class="token punctuation">)</span>  File <span class="token string">"/home/weitaotang/multimodal/hydra_templates/srcs/trainer/reuters_ieg_dividemix_trainer.py"</span>, line <span class="token number">338</span>, <span class="token keyword">in</span> single_unsupervised_loss    idx <span class="token operator">=</span> m.sample<span class="token variable"><span class="token punctuation">((</span>mis_logits.size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">))</span></span>  File <span class="token string">"/home/weitaotang/.conda/envs/multimodal/lib/python3.7/site-packages/torch/distributions/categorical.py"</span>, line <span class="token number">107</span>, <span class="token keyword">in</span> sample    samples_2d <span class="token operator">=</span> torch.multinomial<span class="token punctuation">(</span>probs_2d, sample_shape.numel<span class="token punctuation">(</span><span class="token punctuation">)</span>, True<span class="token punctuation">)</span>.TRuntimeError: cannot sample n_sample <span class="token operator">&lt;=</span> <span class="token number">0</span> samples<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">HYDRA_FULL_ERROR</span><span class="token operator">=</span><span class="token number">1</span> python srcs/entry_points/reuters_ieg_dividemix_train.py <span class="token assign-left variable">status</span><span class="token operator">=</span>debug <span class="token assign-left variable">re_split_ratio</span><span class="token operator">=</span><span class="token number">1.0</span> <span class="token assign-left variable">mis_threshold</span><span class="token operator">=</span><span class="token number">0.2</span> <span class="token assign-left variable">learning_rate</span><span class="token operator">=</span><span class="token number">0.005</span> <span class="token assign-left variable">ce_factor</span><span class="token operator">=</span><span class="token number">9</span> <span class="token assign-left variable">meta_momentum</span><span class="token operator">=</span><span class="token number">0.9</span> <span class="token assign-left variable">meta_lr</span><span class="token operator">=</span><span class="token number">0.001</span> exchange_weigh<span class="token assign-left variable">ts</span><span class="token operator">=</span>True <span class="token assign-left variable">noise_rate</span><span class="token operator">=</span><span class="token number">0.4</span> <span class="token assign-left variable">val_type</span><span class="token operator">=</span>clean <span class="token assign-left variable">use_penalty</span><span class="token operator">=</span>True <span class="token assign-left variable">trainer.save_ckpt</span><span class="token operator">=</span>False <span class="token assign-left variable">trainer.epochs</span><span class="token operator">=</span><span class="token number">25</span> <span class="token assign-left variable">trainer.test_on_best</span><span class="token operator">=</span>True <span class="token assign-left variable">n_splits</span><span class="token operator">=</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>查看发现是因为 <strong><code>mis_threshold</code>太小，导致分位点恰好是最小值</strong>，因此是不存在比他小的idx，也就导致了<code>mis_logits</code>为empty tensor。导致<code>sample_shape.numel()=0</code></p><p>一个可以考虑的方法：拿不到<code>idx</code>时取等</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">_get_mis_c</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> weights<span class="token punctuation">,</span> hard_weight<span class="token punctuation">,</span> logits<span class="token punctuation">,</span> inputs<span class="token punctuation">,</span> meta_inputs<span class="token punctuation">,</span> meta_clean_labels<span class="token punctuation">,</span> labels<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>mis_method <span class="token operator">==</span> <span class="token string">"hard_weights"</span> <span class="token keyword">or</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>mis_threshold <span class="token operator">>=</span> <span class="token number">1.0</span><span class="token punctuation">:</span>        mis_idx <span class="token operator">=</span> hard_weight <span class="token operator">&lt;</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>mis_threshold        <span class="token keyword">if</span> mis_idx<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token comment"># 拿不到idx时取等</span>            mis_idx <span class="token operator">=</span> hard_weight <span class="token operator">&lt;=</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>mis_threshold    <span class="token keyword">elif</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>mis_method <span class="token operator">==</span> <span class="token string">"quantile"</span><span class="token punctuation">:</span>        mis_idx <span class="token operator">=</span> weights <span class="token operator">&lt;</span> torch<span class="token punctuation">.</span>quantile<span class="token punctuation">(</span>weights<span class="token punctuation">,</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>mis_threshold<span class="token punctuation">)</span>        <span class="token keyword">if</span> mis_idx<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            mis_idx <span class="token operator">=</span> weights <span class="token operator">&lt;=</span> torch<span class="token punctuation">.</span>quantile<span class="token punctuation">(</span>weights<span class="token punctuation">,</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>mis_threshold<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Invalid mislabeled samples judgment method:</span><span class="token interpolation"><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>mis_method<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="关于exchange-weights的一些思考"><a href="#关于exchange-weights的一些思考" class="headerlink" title="关于exchange weights的一些思考"></a>关于exchange weights的一些思考</h2><p>其实<strong>单纯exchange weights或者exchange weights + eps意义不大</strong>：</p><ol><li>weights由于使用了weights co-guessing labels，因此其实交换前后真正受影响就是计算weight loss的部分，然而这部分显然还是不要交换会更稳定</li><li>eps部分，同理受影响的只有eps loss部分，这部分同样还是不要交换会更加稳定</li></ol><h1 id="每个batch都进行hard-weights或者weights-sum-to-1其实不是非常合理"><a href="#每个batch都进行hard-weights或者weights-sum-to-1其实不是非常合理" class="headerlink" title="每个batch都进行hard weights或者weights sum to 1其实不是非常合理"></a>每个batch都进行hard weights或者weights sum to 1其实不是非常合理</h1><p>强行把整个<code>weights</code> normalized到<code>[0, 1]</code>区间其实不合理，然后再按照一定的值进行截取（hard cut），会导致一定会有那么多数量的样本认为是clean，但是实际上是存在说整个batch都是noisy samples的情况。</p><p>同理把weights sum to 1，只是稍微好点，比如全部的samples的权重都比较小，此时强行让其sum to 1，就会使得有一部分的weight相对于原来有所增加。</p><p>可能比较好的做法是把所有weights都收集起来之后再进行normalized。然而这种做法不现实，因为这样等价于要全部都过一遍存下来，然后再forward一遍，无形中等价于多了一次forward的过程，时间太长</p><h2 id="20210208-update（待实验）"><a href="#20210208-update（待实验）" class="headerlink" title="20210208 update（待实验）"></a>20210208 update（待实验）</h2><blockquote><p>所有weights都收集起来之后再进行normalized</p></blockquote><p>对于上述这种做法，<code>step-based</code>的更新不是很好，<strong>还是要用<code>epoch-based</code>的方法来实验</strong></p><h1 id="Hydra复现"><a href="#Hydra复现" class="headerlink" title="Hydra复现"></a>Hydra复现</h1><p>在代码不变的情况下，<strong>直接载入config文件，才能保证一致</strong></p><p>比如下面这种方式，直接载入保存的config文件：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@hydra<span class="token punctuation">.</span>main</span><span class="token punctuation">(</span>    config_path<span class="token operator">=</span><span class="token string">'/home/weitaotang/multimodal/pytorch_hydra_results_temp/multirun/2021-02-01/01-00-04-dividemix_tuning_sym0.6_rerun/26_reuters-balance-symmetric_0.6-dividemix-optuna-fusion_N_[0, 1]-SGD_lr0.02-clean_val'</span><span class="token punctuation">,</span>    config_name<span class="token operator">=</span><span class="token string">'config'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>原来的实验：</p><p><img src="/2021/01/12/experiments-record/image-20210201114803059.png" alt="image-20210201114803059"></p><p>复现的实验结果：</p><p><img src="/2021/01/12/experiments-record/image-20210201114823154.png" alt="image-20210201114823154"></p><p>但是缺点就是还要单独定制输出的文件夹，否则会很难看，比如下面这个实验就是会直接保存到当前目录的<code>outputs</code>下面</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 <span class="token number">11</span>:39:25,075<span class="token punctuation">]</span><span class="token punctuation">[</span>base-trainer<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - Exp: reuters-balance-symmetric_0.6-dividemix-optuna-fusion_N_<span class="token punctuation">[</span><span class="token number">0</span>, <span class="token number">1</span><span class="token punctuation">]</span>-SGD_lr0.02-clean_val<span class="token punctuation">[</span><span class="token number">2021</span>-02-01 <span class="token number">11</span>:39:25,115<span class="token punctuation">]</span><span class="token punctuation">[</span>base-trainer<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> -           loss unlabeled_loss_2  accuracy unlabeled_loss_1   loss_2 label_loss_2 duration    loss_2   entropy h_score label_loss_1  loss    loss_1         train            train     valid            train    valid        train    train     train     valid   train        train valid     valid     trainepoch-25   NaN         <span class="token number">0.005178</span>  <span class="token number">0.542002</span>         <span class="token number">0.005377</span>  <span class="token number">1.43616</span>     <span class="token number">0.751425</span>  <span class="token number">28</span>.738s  <span class="token number">0.979027</span>  <span class="token number">0.949788</span>     NaN     <span class="token number">0.784438</span>   NaN  <span class="token number">1.546014</span>  <span class="token number">1.011149</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 <span class="token number">11</span>:39:25,119<span class="token punctuation">]</span><span class="token punctuation">[</span>base-trainer<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 <span class="token number">11</span>:39:25,119<span class="token punctuation">]</span><span class="token punctuation">[</span>base-trainer<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - Best val epoch on run <span class="token number">1</span>:14, <span class="token builtin class-name">test</span> accuracy: <span class="token number">0.6448</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 <span class="token number">11</span>:39:25,119<span class="token punctuation">]</span><span class="token punctuation">[</span>base-trainer<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 <span class="token number">11</span>:39:25,814<span class="token punctuation">]</span><span class="token punctuation">[</span>train<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - <span class="token number">2</span> runs avg accuracy: <span class="token number">0.6198</span>/0.0250. Each run <span class="token builtin class-name">test</span> accuracy:<span class="token punctuation">[</span><span class="token string">'0.5948'</span>, <span class="token string">'0.6448'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2021</span>-02-01 <span class="token number">11</span>:39:25,815<span class="token punctuation">]</span><span class="token punctuation">[</span>train<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> - Save at /home/weitaotang/multimodal/hydra_templates/outputs/2021-02-01/10-59-35<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果<strong>直接使用超参，效果是一样的</strong>，不过就是要单独配置参数，稍微有点麻烦</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">HYDRA_FULL_ERROR</span><span class="token operator">=</span><span class="token number">1</span> python srcs/entry_points/reuters_dividemix_train.py <span class="token assign-left variable">status</span><span class="token operator">=</span>train   <span class="token assign-left variable">warm_up_epochs</span><span class="token operator">=</span><span class="token number">8</span> <span class="token assign-left variable">p_threshold</span><span class="token operator">=</span><span class="token number">0.6000000000000001</span> <span class="token assign-left variable">alpha</span><span class="token operator">=</span><span class="token number">4</span> <span class="token assign-left variable">lambda_u</span><span class="token operator">=</span><span class="token number">30</span> <span class="token assign-left variable">weight_decay</span><span class="token operator">=</span>1e-05 <span class="token assign-left variable">learning_rate</span><span class="token operator">=</span><span class="token number">0.02</span> <span class="token assign-left variable">fusion</span><span class="token operator">=</span>sum <span class="token assign-left variable">rank</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">noise_rate</span><span class="token operator">=</span><span class="token number">0.6</span> <span class="token assign-left variable">val_type</span><span class="token operator">=</span>clean <span class="token assign-left variable">trainer.save_ckpt</span><span class="token operator">=</span>False <span class="token assign-left variable">trainer.epochs</span><span class="token operator">=</span><span class="token number">25</span> <span class="token assign-left variable">trainer.test_on_best</span><span class="token operator">=</span>True <span class="token assign-left variable">notes</span><span class="token operator">=</span>dividemix_tuning_sym0.6_rerun <span class="token assign-left variable">n_splits</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">model</span><span class="token operator">=</span>reuters_fusion_N<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2021/01/12/experiments-record/image-20210201120439696.png" alt="image-20210201120439696"></p><p><code>/home/weitaotang/multimodal/pytorch_hydra_results_temp/train/2021-02-01/12-09-21-dividemix_tuning_sym0.6_rerun/config.yaml</code></p><p><img src="/2021/01/12/experiments-record/image-20210201123821296.png" alt="image-20210201123821296"></p><h1 id="Profiling-IEG-Train"><a href="#Profiling-IEG-Train" class="headerlink" title="Profiling IEG Train"></a>Profiling IEG Train</h1><p>命令：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">HYDRA_FULL_ERROR<span class="token operator">=</span><span class="token number">1</span> python srcs<span class="token operator">/</span>entry_points<span class="token operator">/</span>profile_entries<span class="token operator">/</span>profiling_reuters_ieg_train<span class="token punctuation">.</span>py model<span class="token operator">=</span>reuters_meta_fusion_N  notes<span class="token operator">=</span><span class="token string">"test_fast_dl"</span> trainer<span class="token punctuation">.</span>epochs<span class="token operator">=</span><span class="token number">1</span> trainer<span class="token punctuation">.</span>save_ckpt<span class="token operator">=</span>false trainer<span class="token punctuation">.</span>test_on_best<span class="token operator">=</span>true balance<span class="token operator">=</span>balance noise_rate<span class="token operator">=</span><span class="token number">0.4</span> n_splits<span class="token operator">=</span><span class="token number">1</span> data<span class="token operator">=</span>reuters_all_cv_ieg_dividemix_train<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可以看到两个大头始终是创建meta model这块</p><p><img src="/2021/01/12/experiments-record/image-20210206152330584.png" alt="image-20210206152330584"></p><h1 id="reuters直接上all-cuda也是不太合适的"><a href="#reuters直接上all-cuda也是不太合适的" class="headerlink" title="reuters直接上all cuda也是不太合适的"></a>reuters直接上all cuda也是不太合适的</h1><p><img src="/2021/01/12/experiments-record/image-20210207105435887.png" alt="image-20210207105435887"></p><p>依然爆显存</p><h1 id="xrmb和reuters-三种DataLoader的对比"><a href="#xrmb和reuters-三种DataLoader的对比" class="headerlink" title="xrmb和reuters 三种DataLoader的对比"></a>xrmb和reuters 三种<code>DataLoader</code>的对比</h1><p>reuters</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Initialized train Reuterstrain dataset with <span class="token number">15006</span> samplesOriginal fast dataloader finish with:15.5962 secondPrefetcher BackgroundGenerator + fast dataloader finish with:16.0180 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/1 with:3.7941 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/2 with:3.8048 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/3 with:3.7636 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/4 with:3.8045 secondDataPrefetcher + fast dataloader finish with:15.5066 secondInitialized train Reuterstrain dataset with <span class="token number">15006</span> samplesOriginal fast dataloader finish with:15.3795 secondPrefetcher BackgroundGenerator + fast dataloader finish with:15.3820 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/1 with:3.6750 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/2 with:3.6984 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/3 with:3.6271 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/4 with:3.7781 secondDataPrefetcher + fast dataloader finish with:15.1373 secondInitialized train Reuterstrain dataset with <span class="token number">15006</span> samplesOriginal fast dataloader finish with:15.2086 secondPrefetcher BackgroundGenerator + fast dataloader finish with:15.8317 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/1 with:3.7164 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/2 with:3.7532 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/3 with:3.7519 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/4 with:3.8027 secondDataPrefetcher + fast dataloader finish with:15.3566 secondInitialized train Reuterstrain dataset with <span class="token number">15007</span> samplesOriginal fast dataloader finish with:15.3415 secondPrefetcher BackgroundGenerator + fast dataloader finish with:15.7691 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/1 with:3.9011 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/2 with:3.8108 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/3 with:3.8389 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/4 with:3.7030 secondDataPrefetcher + fast dataloader finish with:15.6202 secondInitialized train Reuterstrain dataset with <span class="token number">15007</span> samplesOriginal fast dataloader finish with:15.4841 secondPrefetcher BackgroundGenerator + fast dataloader finish with:15.9197 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/1 with:3.7280 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/2 with:3.7924 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/3 with:3.7113 secondDataPrefetcher + fast dataloader finish <span class="token number">59</span> its/4 with:3.8488 secondDataPrefetcher + fast dataloader finish with:15.4055 second<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>xrmb</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">DataPrefetcher + fast dataloader finish <span class="token number">644</span> its/19 with:0.2231 second                                                                                                                               <span class="token punctuation">[</span><span class="token number">23</span>/9811<span class="token punctuation">]</span>DataPrefetcher + fast dataloader finish with:4.0225 secondtrain dataset with <span class="token number">329312</span> samplesOriginal fast dataloader finish with:2.4979 secondPrefetcher BackgroundGenerator + fast dataloader finish with:2.5478 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/1 with:0.2043 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/2 with:0.2065 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/3 with:0.2066 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/4 with:0.2056 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/5 with:0.2080 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/6 with:0.2032 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/7 with:0.2027 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/8 with:0.2055 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/9 with:0.2063 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/10 with:0.2052 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/11 with:0.2046 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/12 with:0.2053 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/13 with:0.2062 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/14 with:0.2065 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/15 with:0.2088 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/16 with:0.2072 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/17 with:0.2063 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/18 with:0.2057 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/19 with:0.2051 secondDataPrefetcher + fast dataloader finish with:3.9212 secondtrain dataset with <span class="token number">329312</span> samplesOriginal fast dataloader finish with:2.5407 secondPrefetcher BackgroundGenerator + fast dataloader finish with:2.5722 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/1 with:0.2071 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/2 with:0.2055 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/3 with:0.2021 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/4 with:0.2035 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/5 with:0.2055 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/6 with:0.2061 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/7 with:0.2042 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/8 with:0.2052 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/9 with:0.2064 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/10 with:0.2053 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/11 with:0.2057 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/12 with:0.2070 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/13 with:0.2101 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/14 with:0.2064 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/15 with:0.2057 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/16 with:0.2052 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/17 with:0.2044 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/18 with:0.2038 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/19 with:0.2065 secondDataPrefetcher + fast dataloader finish with:3.9167 secondtrain dataset with <span class="token number">329312</span> samplesOriginal fast dataloader finish with:2.5503 secondPrefetcher BackgroundGenerator + fast dataloader finish with:2.6478 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/1 with:0.2074 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/2 with:0.2052 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/3 with:0.2072 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/4 with:0.2066 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/5 with:0.2058 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/6 with:0.2084 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/7 with:0.2064 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/8 with:0.2050 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/9 with:0.2063 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/10 with:0.2062 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/11 with:0.2052 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/12 with:0.2042 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/13 with:0.2054 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/14 with:0.2045 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/15 with:0.2064 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/16 with:0.2043 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/17 with:0.2052 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/18 with:0.2068 secondDataPrefetcher + fast dataloader finish <span class="token number">644</span> its/19 with:0.2051 secondDataPrefetcher + fast dataloader finish with:3.9231 second<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到<code>DataPrefecther</code>并没有明显的优势，<strong>甚至说<code>fast dataloader</code>已经是最优了</strong></p><p>实测也的确不太好</p><p><code>fast dataloader</code></p><p><img src="/2021/01/12/experiments-record/image-20210207221701859.png" alt="image-20210207221701859"></p><p><code>DataPrefetcher</code></p><p><img src="/2021/01/12/experiments-record/image-20210207221737088.png" alt="image-20210207221737088"></p><p>也许要在<code>ravdness</code>这一类<code>audio visual</code>数据集上才能体现优势</p><h1 id="使用train-test-split或者StratifyKFold等Stratify-split时要注意如果出现某个类别样本只有一个情况"><a href="#使用train-test-split或者StratifyKFold等Stratify-split时要注意如果出现某个类别样本只有一个情况" class="headerlink" title="使用train_test_split或者StratifyKFold等Stratify split时要注意如果出现某个类别样本只有一个情况"></a>使用<code>train_test_split</code>或者<code>StratifyKFold</code>等Stratify split时要注意如果出现某个类别样本只有一个情况</h1><p>即如下的错误：</p><p><img src="/2021/01/12/experiments-record/image-20210211222419292.png" alt="image-20210211222419292"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ValueError: The least populated class <span class="token keyword">in</span> y has only <span class="token number">1</span> member, <span class="token function">which</span> is too few. The minimum number of <span class="token function">groups</span> <span class="token keyword">for</span> any class cannot be <span class="token function">less</span> than <span class="token number">2</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>很容易忽略的一个情况，可以用如下的异常捕捉处理</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> stratify<span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        stratify <span class="token operator">=</span> self<span class="token punctuation">.</span>raw_obj<span class="token punctuation">.</span>labels<span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>indices<span class="token punctuation">]</span>        train_idx<span class="token punctuation">,</span> valid_idx <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>idx_full<span class="token punctuation">,</span> test_size<span class="token operator">=</span>validation_split<span class="token punctuation">,</span> stratify<span class="token operator">=</span>stratify<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        traceback<span class="token punctuation">.</span>print_exc<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token operator">=</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span>        logger<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Stratify splits failed due to \"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">\".\nreturn to random splits"</span></span><span class="token punctuation">)</span>        np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>idx_full<span class="token punctuation">)</span>        valid_idx <span class="token operator">=</span> idx_full<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>len_valid<span class="token punctuation">]</span>        train_idx <span class="token operator">=</span> np<span class="token punctuation">.</span>delete<span class="token punctuation">(</span>idx_full<span class="token punctuation">,</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len_valid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>idx_full<span class="token punctuation">)</span>    valid_idx <span class="token operator">=</span> idx_full<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>len_valid<span class="token punctuation">]</span>    train_idx <span class="token operator">=</span> np<span class="token punctuation">.</span>delete<span class="token punctuation">(</span>idx_full<span class="token punctuation">,</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len_valid<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="对于ravdess来说prefetcher有用"><a href="#对于ravdess来说prefetcher有用" class="headerlink" title="对于ravdess来说prefetcher有用"></a>对于ravdess来说prefetcher有用</h1><p>一个augmentation：</p><p><img src="/2021/01/12/experiments-record/image-20210211224802970.png" alt="image-20210211224802970"></p><p>两个augmentation：</p><p><img src="/2021/01/12/experiments-record/image-20210211224825039.png" alt="image-20210211224825039"></p><p>可以看到都缩短了不少</p><h1 id="submitit-core-utils-UncompletedJobError解决"><a href="#submitit-core-utils-UncompletedJobError解决" class="headerlink" title="submitit.core.utils.UncompletedJobError解决"></a><code>submitit.core.utils.UncompletedJobError</code>解决</h1><p><img src="/2021/01/12/experiments-record/image-20210212142015518.png" alt="image-20210212142015518"></p><p>阅读源码发现大概率是保存的时间超时了，因为之后直接在ipython load进来是没问题的：</p><p><img src="/2021/01/12/experiments-record/image-20210212141921632.png" alt="image-20210212141921632"></p><p><img src="/2021/01/12/experiments-record/image-20210212142142021.png" alt="image-20210212142142021"></p><p>解决方法只能手动把这个阈值提高，从原来的15变为60</p><p><img src="/2021/01/12/experiments-record/image-20210212142318057.png" alt="image-20210212142318057"></p><p>如果本次任务是optuna tuning，可以直接用会上一次的study，基本上能够保证出来的参数是上一次未完成的实验</p><p><img src="/2021/01/12/experiments-record/image-20210212142615203.png" alt="image-20210212142615203"></p><p><img src="/2021/01/12/experiments-record/image-20210212142622931.png" alt="image-20210212142622931"></p><h1 id="ravdess-num-workers尝试"><a href="#ravdess-num-workers尝试" class="headerlink" title="ravdess num_workers尝试"></a>ravdess <code>num_workers</code>尝试</h1><p>从2-16都试了一次</p><p><img src="/2021/01/12/experiments-record/image-20210213202244223.png" alt="image-20210213202244223"></p><p><img src="/2021/01/12/experiments-record/image-20210213202342468.png" alt="image-20210213202342468"></p><p><img src="/2021/01/12/experiments-record/image-20210213202403449.png" alt="image-20210213202403449"></p><p>可以看到</p><ul><li>能够比原来200s+提速很多，约4倍</li><li>在6-7的时候就差不多了</li><li>默认最大不应该超过6，因此设为6就够了</li></ul><h1 id="ravdess-apex尝试"><a href="#ravdess-apex尝试" class="headerlink" title="ravdess apex尝试"></a>ravdess apex尝试</h1><ul><li>在ieg上进行尝试</li><li>由于实现问题，<strong>暂时无法优化meta optimize部分</strong>，所以实际上提速效果不是非常明显。显存占用只缩小了一点点（21000+ -&gt; 19000+）</li></ul><p>耗时几乎没变化：</p><p>开启AMP前：</p><p><img src="/2021/01/12/experiments-record/image-20210214173822726.png" alt="image-20210214173822726"></p><p>开启AMP后：</p><p><img src="/2021/01/12/experiments-record/image-20210214173851816.png" alt="image-20210214173851816"></p><h1 id="ravdess-相关论文所使用模型的调研"><a href="#ravdess-相关论文所使用模型的调研" class="headerlink" title="ravdess 相关论文所使用模型的调研"></a>ravdess 相关论文所使用模型的调研</h1><p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=8644168">https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=8644168</a></p><p>audio：仅仅使用MFCC 然后直接用一个LMT，没有用到visual feature</p><p><a href="https://www.mdpi.com/1424-8220/20/1/183">https://www.mdpi.com/1424-8220/20/1/183</a></p><p>同样是仅仅只使用audio的feature</p><blockquote><p>we evaluated our SER model on IEMOCAP and RAVDESS datasets using<br>spectrograms. The performance of the proposed CNN models compares with recent CNNs architectures<br>for SER using spectrograms.   </p></blockquote><p><img src="/2021/01/12/experiments-record/image-20210219162641512.png" alt="image-20210219162641512"></p><p>并且也在其中进行了比较，可以看到<strong>resnet50是很正常</strong>的</p><p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=8925444">https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=8925444</a></p><p>用LSTM multimodal</p><p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=8682553">https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=8682553</a></p><p>类似transfer learning</p><h1 id="ravdess训练太慢：可能解决方法：transfer-learning？"><a href="#ravdess训练太慢：可能解决方法：transfer-learning？" class="headerlink" title="ravdess训练太慢：可能解决方法：transfer learning？"></a>ravdess训练太慢：可能解决方法：transfer learning？</h1><p>参考：</p><p><a href="https://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html#convnet-as-fixed-feature-extractor">https://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html#convnet-as-fixed-feature-extractor</a> 官方的CNN transfer learning， 只train最后的FC layer</p><p><a href="https://www.kaggle.com/pmigdal/transfer-learning-with-resnet-50-in-pytorch">https://www.kaggle.com/pmigdal/transfer-learning-with-resnet-50-in-pytorch</a> 同样只train最后的FC layer</p><p><a href="https://balajikulkarni.medium.com/transfer-learning-using-resnet-e20598314427">https://balajikulkarni.medium.com/transfer-learning-using-resnet-e20598314427</a> 提到了BN也要变成trainable，因为BN本质上是和数据集相关的，因此要让BN被训练</p><p><a href="https://medium.com/@kenneth.ca95/a-guide-to-transfer-learning-with-keras-using-resnet50-a81a4a28084b">https://medium.com/@kenneth.ca95/a-guide-to-transfer-learning-with-keras-using-resnet50-a81a4a28084b</a> 除了FC，resnet50的最后一个block也是trainable的</p><p><a href="https://keras.io/api/applications/">https://keras.io/api/applications/</a> keras 官方教程。里面对于inceptionv3的使用：同样是把前面部分的inception block冻结，后面的训练，从而减少参数，这个<strong>即fine tuning</strong></p><blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># we chose to train the top 2 inception blocks, i.e. we will freeze</span><span class="token comment"># the first 249 layers and unfreeze the rest:</span><span class="token keyword">for</span> layer <span class="token keyword">in</span> model<span class="token punctuation">.</span>layers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">249</span><span class="token punctuation">]</span><span class="token punctuation">:</span>   layer<span class="token punctuation">.</span>trainable <span class="token operator">=</span> <span class="token boolean">False</span><span class="token keyword">for</span> layer <span class="token keyword">in</span> model<span class="token punctuation">.</span>layers<span class="token punctuation">[</span><span class="token number">249</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span>   layer<span class="token punctuation">.</span>trainable <span class="token operator">=</span> <span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p><a href="https://thedatafrog.com/en/articles/image-recognition-transfer-learning/">https://thedatafrog.com/en/articles/image-recognition-transfer-learning/</a> 非常详细的VGG16 fine tuning的教程，同样也是冻结前面所有层</p><h1 id="hydra-basic-local-launcher-使用单例模式时要注意的点"><a href="#hydra-basic-local-launcher-使用单例模式时要注意的点" class="headerlink" title="hydra + basic local launcher 使用单例模式时要注意的点"></a>hydra + basic local launcher 使用单例模式时要注意的点</h1><p>在multirun的模式下，使用basic Launcher自动执行不同的参数时，要注意每次执行并没有重开一个新的进程，而仅仅是按照不同的参数重新执行一次main函数，<strong>即上一次run的数据并为完全消除</strong>，如果此时单例模式中所使用的key又没注意，比如下面这种不够区分度的：</p><p><img src="/2021/01/12/experiments-record/image-20210225160054122.png" alt="image-20210225160054122"></p><p>会导致后面的run都会重复使用第一个run的参数，导致执行失败。</p><p>因此最佳的方法还是把所有的args都拼接起来，作为key</p><p><img src="/2021/01/12/experiments-record/image-20210225160533554.png" alt="image-20210225160533554"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Image单模态，LR设为0-1不可训练（不可行）&quot;&gt;&lt;a href=&quot;#Image单模态，LR设为0-1不可训练（不可行）&quot; class=&quot;headerlink&quot; title=&quot;Image单模态，LR设为0.1不可训练（不可行）&quot;&gt;&lt;/a&gt;Image单模态，LR</summary>
      
    
    
    
    <category term="noisy-labels" scheme="https://khalitt.github.io/categories/noisy-labels/"/>
    
    
    <category term="noisy-labels" scheme="https://khalitt.github.io/tags/noisy-labels/"/>
    
  </entry>
  
  <entry>
    <title>pytorch-meta-learning</title>
    <link href="https://khalitt.github.io/2021/01/08/pytorch-meta-learning/"/>
    <id>https://khalitt.github.io/2021/01/08/pytorch-meta-learning/</id>
    <published>2021-01-08T10:18:41.000Z</published>
    <updated>2021-01-10T09:40:26.139Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Pytorch-在Meta-Learning计算中的不足"><a href="#Pytorch-在Meta-Learning计算中的不足" class="headerlink" title="Pytorch 在Meta Learning计算中的不足"></a>Pytorch 在Meta Learning计算中的不足</h1><p>正如 <a href="https://higher.readthedocs.io/en/latest/#higher-documentation">higher</a> 首页所说</p><blockquote><p><code>higher</code> is a library providing support for higher-order optimization, e.g. through unrolled first-order optimization loops, of “meta” aspects of these loops. It provides tools for turning existing torch.nn.Module instances “stateless”, <strong>meaning that changes to the parameters thereof can be tracked</strong>, <strong>and gradient with regard to intermediate parameters can be taken</strong>. It also provides a suite of differentiable optimizers, to facilitate the implementation of various meta-learning approaches.</p></blockquote><p>即原版的<code>torch.nn.Module</code>不支持对parameters的梯度操作，导致形如像learning to reweight这一类方法用不起来</p><p>facebook自己的工程师在也有说明：</p><blockquote><p>Another issue you’re gonna face is that <code>nn.Parameter()</code> are built explicitly to be leaf Tensors (with no history) and so you won’t be able to change them with a Tensor you try to backprop through.</p><p>You can check the <a href="https://github.com/facebookresearch/higher">higher 2</a> package to do this properly (they solve this problem of nn.Parameter for you). Otherwise, if you want to do it manually, you can find some info in this thread: <a href="https://discuss.pytorch.org/t/how-does-one-have-the-parameters-of-a-model-not-be-leafs/70076/9">How does one have the parameters of a model NOT BE LEAFS?</a></p></blockquote><h1 id="dirty、不用框架的方法"><a href="#dirty、不用框架的方法" class="headerlink" title="dirty、不用框架的方法"></a>dirty、不用框架的方法</h1><p>参考：</p><ol><li><a href="https://discuss.pytorch.org/t/how-does-one-have-the-parameters-of-a-model-not-be-leafs/70076/9">How does one have the parameters of a model NOT BE LEAFS?</a>  详细的讨论，<strong>推荐仔细阅读</strong></li></ol><p><strong>不推荐！！</strong></p><h1 id="推荐方法：直接用higher框架"><a href="#推荐方法：直接用higher框架" class="headerlink" title="推荐方法：直接用higher框架"></a>推荐方法：直接用higher框架</h1><p>参考：</p><ol><li><a href="https://github.com/TinfoilHat0/Learning-to-Reweight-Examples-for-Robust-Deep-Learning-with-PyTorch-Higher">Learning-to-Reweight-Examples-for-Robust-Deep-Learning-with-PyTorch-Higher</a> <strong>直接参考其中的notebook！！推荐！！！</strong></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Pytorch-在Meta-Learning计算中的不足&quot;&gt;&lt;a href=&quot;#Pytorch-在Meta-Learning计算中的不足&quot; class=&quot;headerlink&quot; title=&quot;Pytorch 在Meta Learning计算中的不足&quot;&gt;&lt;/a&gt;Py</summary>
      
    
    
    
    <category term="pytorch" scheme="https://khalitt.github.io/categories/pytorch/"/>
    
    
    <category term="pytorch" scheme="https://khalitt.github.io/tags/pytorch/"/>
    
    <category term="meta learning" scheme="https://khalitt.github.io/tags/meta-learning/"/>
    
  </entry>
  
  <entry>
    <title>zsh-usage</title>
    <link href="https://khalitt.github.io/2021/01/07/zsh-usage/"/>
    <id>https://khalitt.github.io/2021/01/07/zsh-usage/</id>
    <published>2021-01-07T03:44:20.000Z</published>
    <updated>2021-01-07T05:06:53.682Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h1><h1 id="配置zsh"><a href="#配置zsh" class="headerlink" title="配置zsh"></a>配置zsh</h1><pre class="line-numbers language-none"><code class="language-none">source ~&#x2F;.zsh&#x2F;zsh-autosuggestions&#x2F;zsh-autosuggestions.zsh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="更改默认shell"><a href="#更改默认shell" class="headerlink" title="更改默认shell"></a>更改默认shell</h2><p>参考 <a href="https://unix.stackexchange.com/a/214086">configure tmux to zsh</a></p><p>最佳的方式，<strong>在<code>.tmux.conf</code>中更改</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">set-option <span class="token parameter variable">-g</span> default-command <span class="token string">"/home/weitaotang/local/bin/zsh"</span> <span class="token comment"># path_to_zsh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装zsh&quot;&gt;&lt;a href=&quot;#安装zsh&quot; class=&quot;headerlink&quot; title=&quot;安装zsh&quot;&gt;&lt;/a&gt;安装zsh&lt;/h1&gt;&lt;h1 id=&quot;配置zsh&quot;&gt;&lt;a href=&quot;#配置zsh&quot; class=&quot;headerlink&quot; title=&quot;配置z</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>python的多进程使用</title>
    <link href="https://khalitt.github.io/2020/06/18/python-multiprocessing-usage/"/>
    <id>https://khalitt.github.io/2020/06/18/python-multiprocessing-usage/</id>
    <published>2020-06-18T11:00:28.000Z</published>
    <updated>2021-03-02T08:16:27.186Z</updated>
    
    <content type="html"><![CDATA[<p>参考：</p><ul><li><p>强烈推荐这个 <a href="https://thief.one/2016/11/23/Python-multiprocessing/">【Multiprocessing系列】Multiprocessing基础</a>，清晰易懂，尤其推荐里面的两篇资源共享系列 <a href="https://thief.one/2016/11/24/Multiprocessing%E5%85%B1%E4%BA%AB%E8%B5%84%E6%BA%90/">【Multiprocessing系列】共享资源</a>  <a href="https://thief.one/2016/11/24/Multiprocessing%E5%AD%90%E8%BF%9B%E7%A8%8B%E8%BF%94%E5%9B%9E%E5%80%BC/">【Multiprocessing系列】子进程返回值</a>，其中后者更通用，因为前者里面的方法Windows不适用</p></li><li><p>简单的模版可以参考<a href="https://jingsam.github.io/2015/12/31/multiprocessing.html">正确使用 Multiprocessing 的姿势</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/46368084">一文看懂Python多进程与多线程编程(工作学习面试必读)</a> 开篇关于线程、进程的说明很清晰</p></li><li><p><a href="https://juejin.im/post/5cce9e20f265da036b4a76d6#heading-4">一篇文章搞定Python多进程(全)</a> 可以参考里面的例子。<strong>特别是最后一个关于map的例子</strong></p></li><li><p>莫凡的例子也不错 <a href="https://morvanzhou.github.io/tutorials/python-basic/multiprocessing/5-pool/">进程池 Pool</a></p></li></ul><h1 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h1><h2 id="一些api"><a href="#一些api" class="headerlink" title="一些api"></a>一些api</h2><ul><li>创建Process相关的：<a href="https://docs.python.org/2.7/library/multiprocessing.html#multiprocessing.Process"><code>multiprocessing.Process()</code></a><ul><li>可以直接调用默认的构造函数，创建新的进程</li><li>也可以继承<code>Process</code>，像Thread的使用那样</li><li><code>.join()</code>方法用来阻塞主进程（多线程时也是一样的含义），**即某子进程调用<code>.join()</code>方法，则主进程会一直等到该子进程介绍，或者到达设定的时间，才会继续执行<code>join</code>后面的代码。详参 <a href="https://www.cnblogs.com/lipijin/p/3709903.html">python多进程的理解 multiprocessing Process join run</a>**：</li></ul></li></ul><p><img src="/2020/06/18/python-multiprocessing-usage/image-20200618191653558.png" alt="image-20200618191653558"></p><ul><li>进程池 Pool，设定好进程数，避免了手动管理的麻烦，<strong>这个很重要</strong>：<ul><li>顺序执行任务（串行）：<ul><li>apply</li><li>map（类似map的用法，输入一个可迭代的变量即可），<strong>但最后的输出不同于类似map（无需在外面套一个list)，而是直接返回一个list</strong></li></ul></li></ul></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># coding=utf-8</span><span class="token keyword">from</span> multiprocessing <span class="token keyword">import</span> Pool<span class="token keyword">import</span> multiprocessing<span class="token keyword">import</span> time<span class="token keyword">def</span> <span class="token function">task</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># do something</span>    result <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># multiprocessing.freeze_support()</span>    cpus <span class="token operator">=</span> multiprocessing<span class="token punctuation">.</span>cpu_count<span class="token punctuation">(</span><span class="token punctuation">)</span>    pool <span class="token operator">=</span> multiprocessing<span class="token punctuation">.</span>Pool<span class="token punctuation">(</span>cpus<span class="token punctuation">)</span>    results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    rslt <span class="token operator">=</span> pool<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    pool<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    pool<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 输出['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>rslt<span class="token punctuation">)</span>         <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>异步执行（并行），注意返回的并不是list或者最后的结果，而是<a href="https://docs.python.org/2.7/library/multiprocessing.html#multiprocessing.pool.AsyncResult"><code>multiprocessing.pool.AsyncResult</code> </a>，需要再调用<code>get</code> （还有一些别的方法）:</p><ul><li>apply_async</li><li>map_async，同样类似上面的的map，只是返回的是AsyncResult，需要再get获得最后的结果</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># coding=utf-8</span><span class="token keyword">from</span> multiprocessing <span class="token keyword">import</span> Pool<span class="token keyword">import</span> multiprocessing<span class="token keyword">import</span> time<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span class="token keyword">def</span> <span class="token function">task</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># do something</span>    result <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span>    <span class="token keyword">if</span> pid <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># multiprocessing.freeze_support()</span>    cpus <span class="token operator">=</span> multiprocessing<span class="token punctuation">.</span>cpu_count<span class="token punctuation">(</span><span class="token punctuation">)</span>    pool <span class="token operator">=</span> multiprocessing<span class="token punctuation">.</span>Pool<span class="token punctuation">(</span>cpus<span class="token punctuation">)</span>    results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    rslt <span class="token operator">=</span> pool<span class="token punctuation">.</span>map_async<span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    pool<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    pool<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 注意，只有当所有进程都结束之后才会执行下面的print，因此上面task中的sleep无效</span>    <span class="token comment"># 结果：['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>rslt<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>通信，数据共享相关的：Value，Array（这两个都只能用c的数据类型，不推荐），<strong>Queue(最常用的）</strong>，Manager</p></li></ul><h2 id="基本的思路"><a href="#基本的思路" class="headerlink" title="基本的思路"></a>基本的思路</h2><ol><li>创建并开启多个进程：</li></ol><ul><li>可以类似Thread那样，通过循环创建并start</li><li>或者通过进程池Pool创建，就不需要通过start</li></ul><ol start="2"><li>（如果是Pool，关闭进程池<code>Pool.close</code>）</li><li>join，等所有的子进程结束，处理结果</li></ol><h1 id="一些模版"><a href="#一些模版" class="headerlink" title="一些模版"></a>一些模版</h1><h2 id="用Process创建进程，并用shared-variable收集结果（略复杂）"><a href="#用Process创建进程，并用shared-variable收集结果（略复杂）" class="headerlink" title="用Process创建进程，并用shared variable收集结果（略复杂）"></a>用Process创建进程，并用<a href="http://docs.python.org/library/multiprocessing.html#sharing-state-between-processes">shared variable</a>收集结果（略复杂）</h2><p><a href="https://segmentfault.com/q/1010000010403117">Python多进程如何获取函数的返回值</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">worker</span><span class="token punctuation">(</span>procnum<span class="token punctuation">,</span> return_dict<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''worker function'''</span>    <span class="token keyword">print</span> <span class="token builtin">str</span><span class="token punctuation">(</span>procnum<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">' represent!'</span>    return_dict<span class="token punctuation">[</span>procnum<span class="token punctuation">]</span> <span class="token operator">=</span> procnum<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    manager <span class="token operator">=</span> Manager<span class="token punctuation">(</span><span class="token punctuation">)</span>    return_dict <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    jobs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        p <span class="token operator">=</span> multiprocessing<span class="token punctuation">.</span>Process<span class="token punctuation">(</span>target<span class="token operator">=</span>worker<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>return_dict<span class="token punctuation">)</span><span class="token punctuation">)</span>        jobs<span class="token punctuation">.</span>append<span class="token punctuation">(</span>p<span class="token punctuation">)</span>        p<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> proc <span class="token keyword">in</span> jobs<span class="token punctuation">:</span>        proc<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 最后的结果是多个进程返回值的集合</span>    <span class="token keyword">print</span> return_dict<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>Manager支持<code>list</code>, <a href="https://docs.python.org/2.7/library/stdtypes.html#dict"><code>dict</code></a>, <a href="https://docs.python.org/2.7/library/multiprocessing.html#multiprocessing.managers.Namespace"><code>Namespace</code></a>, <a href="https://docs.python.org/2.7/library/multiprocessing.html#multiprocessing.Lock"><code>Lock</code></a>, <a href="https://docs.python.org/2.7/library/multiprocessing.html#multiprocessing.RLock"><code>RLock</code></a>, <a href="https://docs.python.org/2.7/library/multiprocessing.html#multiprocessing.Semaphore"><code>Semaphore</code></a>, <a href="https://docs.python.org/2.7/library/multiprocessing.html#multiprocessing.BoundedSemaphore"><code>BoundedSemaphore</code></a>, <a href="https://docs.python.org/2.7/library/multiprocessing.html#multiprocessing.Condition"><code>Condition</code></a>, <a href="https://docs.python.org/2.7/library/multiprocessing.html#multiprocessing.Event"><code>Event</code></a>, <a href="https://docs.python.org/2.7/library/multiprocessing.html#multiprocessing.Queue"><code>Queue</code></a>, <a href="https://docs.python.org/2.7/library/multiprocessing.html#multiprocessing.Value"><code>Value</code></a> and <a href="https://docs.python.org/2.7/library/multiprocessing.html#multiprocessing.Array"><code>Array</code></a>.</li></ul><p>来自官方的例子 <a href="https://docs.python.org/2.7/library/multiprocessing.html#sharing-state-between-processes">Sharing state between processes</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> multiprocessing <span class="token keyword">import</span> Process<span class="token punctuation">,</span> Manager<span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">:</span>    d<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'1'</span>    d<span class="token punctuation">[</span><span class="token string">'2'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span>    d<span class="token punctuation">[</span><span class="token number">0.25</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>    l<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    manager <span class="token operator">=</span> Manager<span class="token punctuation">(</span><span class="token punctuation">)</span>    d <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    l <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    p <span class="token operator">=</span> Process<span class="token punctuation">(</span>target<span class="token operator">=</span>f<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">)</span>    p<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    p<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span> d    <span class="token keyword">print</span> l<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建进程池Pool，使用map-async或者apply-async，用list把所有结果收集起来"><a href="#创建进程池Pool，使用map-async或者apply-async，用list把所有结果收集起来" class="headerlink" title="创建进程池Pool，使用map_async或者apply_async，用list把所有结果收集起来"></a>创建进程池Pool，使用map_async或者apply_async，用list把所有结果收集起来</h2><p><code>apply_async</code>：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">task</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># do something</span>    <span class="token keyword">return</span> result<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    pool <span class="token operator">=</span> multiprocessing<span class="token punctuation">.</span>Pool<span class="token punctuation">(</span><span class="token punctuation">)</span>    cpus <span class="token operator">=</span> multiprocessing<span class="token punctuation">.</span>cpu_count<span class="token punctuation">(</span><span class="token punctuation">)</span>    results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">xrange</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> cpus<span class="token punctuation">)</span><span class="token punctuation">:</span>        result <span class="token operator">=</span> pool<span class="token punctuation">.</span>apply_async<span class="token punctuation">(</span>task<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        results<span class="token punctuation">.</span>append<span class="token punctuation">(</span>result<span class="token punctuation">)</span>    pool<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    pool<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> result <span class="token keyword">in</span> results<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>map_async</code>：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># coding=utf-8</span><span class="token keyword">from</span> multiprocessing <span class="token keyword">import</span> Pool<span class="token keyword">import</span> multiprocessing<span class="token keyword">import</span> time<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span class="token keyword">def</span> <span class="token function">task</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># do something</span>    result <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span>    <span class="token keyword">if</span> pid <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># multiprocessing.freeze_support()</span>    cpus <span class="token operator">=</span> multiprocessing<span class="token punctuation">.</span>cpu_count<span class="token punctuation">(</span><span class="token punctuation">)</span>    pool <span class="token operator">=</span> multiprocessing<span class="token punctuation">.</span>Pool<span class="token punctuation">(</span>cpus<span class="token punctuation">)</span>    results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    rslt <span class="token operator">=</span> pool<span class="token punctuation">.</span>map_async<span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    pool<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    pool<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>rslt<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Pool-map-x2F-Pool-map-async的实践"><a href="#Pool-map-x2F-Pool-map-async的实践" class="headerlink" title="Pool.map&#x2F; Pool.map_async的实践"></a>Pool.map&#x2F; Pool.map_async的实践</h2><p><a href="https://juejin.im/post/5cce9e20f265da036b4a76d6#heading-9">进程池map方法</a></p><blockquote><p>这段代码的主要工作就是将遍历传入的文件夹中的图片文件，一一生成缩略图，并将这些缩略图保存到特定文件夹中。这我的机器上，用这一程序处理 6000 张图片需要花费 27.9 秒。 map 函数并不支持手动线程管理，反而使得相关的 debug 工作也变得异常简单。</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os <span class="token keyword">import</span> PIL <span class="token keyword">from</span> multiprocessing <span class="token keyword">import</span> Pool <span class="token keyword">from</span> PIL <span class="token keyword">import</span> ImageSIZE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">)</span>SAVE_DIRECTORY <span class="token operator">=</span> \'thumbs\'<span class="token keyword">def</span> <span class="token function">get_image_paths</span><span class="token punctuation">(</span>folder<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>folder<span class="token punctuation">,</span> f<span class="token punctuation">)</span>             <span class="token keyword">for</span> f <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>folder<span class="token punctuation">)</span>             <span class="token keyword">if</span> \'jpeg\' <span class="token keyword">in</span> f<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">create_thumbnail</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>     im <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>    im<span class="token punctuation">.</span>thumbnail<span class="token punctuation">(</span>SIZE<span class="token punctuation">,</span> Image<span class="token punctuation">.</span>ANTIALIAS<span class="token punctuation">)</span>    base<span class="token punctuation">,</span> fname <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>split<span class="token punctuation">(</span>filename<span class="token punctuation">)</span>     save_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>base<span class="token punctuation">,</span> SAVE_DIRECTORY<span class="token punctuation">,</span> fname<span class="token punctuation">)</span>    im<span class="token punctuation">.</span>save<span class="token punctuation">(</span>save_path<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> \'__main__\'<span class="token punctuation">:</span>    folder <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>        \'11_18_2013_R000_IQM_Big_Sur_Mon__e10d1958e7b766c3e840\'<span class="token punctuation">)</span>    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>folder<span class="token punctuation">,</span> SAVE_DIRECTORY<span class="token punctuation">)</span><span class="token punctuation">)</span>    images <span class="token operator">=</span> get_image_paths<span class="token punctuation">(</span>folder<span class="token punctuation">)</span>    pool <span class="token operator">=</span> Pool<span class="token punctuation">(</span><span class="token punctuation">)</span>    pool<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>creat_thumbnail<span class="token punctuation">,</span> images<span class="token punctuation">)</span> <span class="token comment">#关键点，images是一个可迭代对象</span>    pool<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    pool<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="一些tricks"><a href="#一些tricks" class="headerlink" title="一些tricks"></a>一些tricks</h1><h2 id="Pool-map-x2F-Pool-map-async传入多个参数"><a href="#Pool-map-x2F-Pool-map-async传入多个参数" class="headerlink" title="Pool.map&#x2F;Pool.map_async传入多个参数"></a>Pool.map&#x2F;Pool.map_async传入多个参数</h2><p><a href="http://python.omics.wiki/multiprocessing_map/multiprocessing_partial_function_multiple_arguments">pool.map - multiple arguments</a></p><ul><li><p>通过传入list of list(or anything suitable)</p></li><li><p>partial</p></li></ul><h2 id="通过ctrl-c结束进程池"><a href="#通过ctrl-c结束进程池" class="headerlink" title="通过ctrl-c结束进程池"></a>通过ctrl-c结束进程池</h2><p>大体思路：替换系统的signal int</p><p><a href="https://stackoverflow.com/a/35134329">Catch Ctrl+C &#x2F; SIGINT and exit multiprocesses gracefully in python [duplicate]</a></p><p><img src="/2020/06/18/python-multiprocessing-usage/image-20200619144551444.png" alt="image-20200619144551444"></p><p><strong>但是这个是不行的，实测不行</strong></p><p>实测应该用<a href="https://segmentfault.com/a/1190000004172444">Python 中 Ctrl+C 不能终止 Multiprocessing Pool 的解决方案</a></p><h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;强烈推荐这个 &lt;a href=&quot;https://thief.one/2016/11/23/Python-multiprocessing/&quot;&gt;【Multiprocessing系列】Multiprocessing基础&lt;/a&gt;，清晰易懂，尤</summary>
      
    
    
    
    <category term="python" scheme="https://khalitt.github.io/categories/python/"/>
    
    
    <category term="python" scheme="https://khalitt.github.io/tags/python/"/>
    
    <category term="多进程" scheme="https://khalitt.github.io/tags/%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    
  </entry>
  
</feed>
